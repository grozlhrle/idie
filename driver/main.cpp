#include <float.h>
#include <math.h>

static long __undefined;

/* --- Struct/Union Declarations --- */
struct S0 {
   int32_t  f0;
   uint8_t  f1;
   uint32_t  f2;
   uint8_t  f3;
   int32_t  f4;
   unsigned f5 : 9;
   int32_t  f6;
};

struct S1 {
   signed f0 : 4;
   signed f1 : 24;
   signed f2 : 6;
   uint32_t  f3;
   unsigned f4 : 29;
   uint32_t  f5;
   unsigned f6 : 29;
    struct S1& operator=(const struct S1& val) {
        if (this == &val) {
            return *this;
        }
         f0= val.f0;
         f1= val.f1;
         f2= val.f2;
         f3= val.f3;
         f4= val.f4;
         f5= val.f5;
         f6= val.f6;
        return *this;
    }
    volatile struct S1& operator=(const volatile struct S1& val) volatile {
        if (this == &val) {
            return *this;
        }
         f0= val.f0;
         f1= val.f1;
         f2= val.f2;
         f3= val.f3;
         f4= val.f4;
         f5= val.f5;
         f6= val.f6;
        return *this;
    }
};

/* --- GLOBAL VARIABLES --- */
static uint64_t g_4[9][6] = {{0x9B398EF544BD1A6FLL,18446744073709551615UL,0x9B398EF544BD1A6FLL,0x9B398EF544BD1A6FLL,18446744073709551615UL,0x9B398EF544BD1A6FLL},{0x9B398EF544BD1A6FLL,18446744073709551615UL,0x9B398EF544BD1A6FLL,0x9B398EF544BD1A6FLL,18446744073709551615UL,0x9B398EF544BD1A6FLL},{0x9B398EF544BD1A6FLL,18446744073709551615UL,0x9B398EF544BD1A6FLL,0x9B398EF544BD1A6FLL,18446744073709551615UL,0x9B398EF544BD1A6FLL},{0x9B398EF544BD1A6FLL,18446744073709551615UL,0x9B398EF544BD1A6FLL,0x9B398EF544BD1A6FLL,18446744073709551615UL,0x9B398EF544BD1A6FLL},{0x9B398EF544BD1A6FLL,18446744073709551615UL,0x9B398EF544BD1A6FLL,0x9B398EF544BD1A6FLL,18446744073709551615UL,0x9B398EF544BD1A6FLL},{0x9B398EF544BD1A6FLL,18446744073709551615UL,0x9B398EF544BD1A6FLL,0x9B398EF544BD1A6FLL,18446744073709551615UL,0x9B398EF544BD1A6FLL},{0x9B398EF544BD1A6FLL,18446744073709551615UL,0x9B398EF544BD1A6FLL,0x9B398EF544BD1A6FLL,18446744073709551615UL,0x9B398EF544BD1A6FLL},{0x9B398EF544BD1A6FLL,18446744073709551615UL,0x9B398EF544BD1A6FLL,0x9B398EF544BD1A6FLL,0x9B398EF544BD1A6FLL,0xDF1563CFEBDAB6ACLL},{0xDF1563CFEBDAB6ACLL,0x9B398EF544BD1A6FLL,0xDF1563CFEBDAB6ACLL,0xDF1563CFEBDAB6ACLL,0x9B398EF544BD1A6FLL,0xDF1563CFEBDAB6ACLL}};
static uint64_t g_7[9] = {0xF2FFA36FE54384F3LL,0UL,0xF2FFA36FE54384F3LL,0xF2FFA36FE54384F3LL,0UL,0xF2FFA36FE54384F3LL,0xF2FFA36FE54384F3LL,0UL,0xF2FFA36FE54384F3LL};
static const uint64_t g_40 = 0x66F2FC99F15FC87CLL;
static int32_t g_43 = 0x1C926A5AL;
static int32_t g_46 = 0xD93D5F64L;
static volatile int32_t g_47 = 0x52248422L;/* VOLATILE GLOBAL g_47 */
static int16_t g_48 = 0x003AL;
static volatile uint32_t g_49 = 0x5A0D0093L;/* VOLATILE GLOBAL g_49 */
static volatile struct S1 g_95 = {0,-346,3,9UL,1586,0xB15AC177L,8095};/* VOLATILE GLOBAL g_95 */
static uint16_t g_97[3] = {65530UL,65530UL,65530UL};
static uint16_t g_99 = 0xE10EL;
static const int32_t g_109 = 0x8E099548L;
static int32_t * volatile g_111 = nullptr;/* VOLATILE GLOBAL g_111 */
static int32_t * volatile * volatile g_110 = &g_111;/* VOLATILE GLOBAL g_110 */
static int32_t g_113 = (-1L);
static uint32_t g_126 = 0x85B67D8BL;
static int8_t g_152 = 1L;
static int32_t g_190 = 4L;
static int8_t g_192 = 0L;
static float g_216 = (-0x1.2p+1);
static float *g_215 = &g_216;
static int32_t *g_221[10] = {&g_113,&g_113,&g_113,&g_113,&g_113,&g_113,&g_113,&g_113,&g_113,&g_113};
static struct S1 g_242 = {-0,1926,0,0x5DB340D8L,20478,18446744073709551615UL,13324};
static volatile uint8_t g_245 = 0x5FL;/* VOLATILE GLOBAL g_245 */
static volatile uint8_t *g_244 = &g_245;
static int64_t g_251 = 7L;
static int64_t g_253 = 1L;
static uint32_t g_254 = 0x55BD5735L;
static uint32_t g_263 = 18446744073709551613UL;
static struct S0 g_273 = {1L,0UL,18446744073709551615UL,0x26L,0xF9ED5F9CL,14,0x6512020FL};
static int16_t g_289 = 0xC655L;
static volatile uint32_t g_329 = 0xD4772450L;/* VOLATILE GLOBAL g_329 */
static float g_375[3] = {(-0x7.8p+1),(-0x7.8p+1),(-0x7.8p+1)};
static volatile int32_t g_378 = (-2L);/* VOLATILE GLOBAL g_378 */
static float g_382 = 0x1.9p-1;
static volatile int64_t g_463[10][2] = {{0L,0L},{0L,0L},{0L,0L},{0L,0L},{0L,0L},{0L,0L},{0L,0L},{0L,0L},{0L,0L},{0L,0L}};
static int8_t *g_478 = &g_192;
static int8_t ** const  volatile g_477 = &g_478;/* VOLATILE GLOBAL g_477 */
static int8_t *g_480 = &g_192;
static int8_t ** const  volatile g_479[4] = {&g_480,&g_480,&g_480,&g_480};
static int8_t *g_482 = &g_192;
static int8_t ** const  volatile g_481 = &g_482;/* VOLATILE GLOBAL g_481 */
static int8_t ** const  volatile g_483 = nullptr;/* VOLATILE GLOBAL g_483 */
static int8_t *g_485 = &g_192;
static int8_t ** const  volatile g_484 = &g_485;/* VOLATILE GLOBAL g_484 */
static int8_t ** const  volatile g_486 = nullptr;/* VOLATILE GLOBAL g_486 */
static int8_t *g_488 = &g_192;
static int8_t *g_489 = &g_152;
static int8_t *g_490 = nullptr;
static int8_t *g_491 = &g_192;
static int8_t ** const  volatile g_487[3][1][10] = {{{nullptr,nullptr,&g_490,nullptr,nullptr,&g_490,nullptr,nullptr,&g_490,nullptr}},{{nullptr,nullptr,nullptr,nullptr,nullptr,nullptr,nullptr,nullptr,nullptr,nullptr}},{{nullptr,nullptr,nullptr,nullptr,nullptr,nullptr,nullptr,nullptr,nullptr,nullptr}}};
static int8_t ** const  volatile * volatile g_476[8][2] = {{&g_484,&g_483},{&g_487[0][0][2],&g_487[0][0][2]},{&g_483,&g_484},{&g_481,&g_484},{&g_483,&g_487[0][0][2]},{&g_487[0][0][2],&g_483},{&g_484,&g_481},{&g_484,&g_483}};
static int8_t g_495 = 0xECL;
static int8_t g_497 = 1L;
static int8_t g_499 = (-3L);
static int8_t g_501 = 0xB2L;
static volatile uint32_t g_509[7][2][1] = {{{0xEFB7EC89L},{0xEFB7EC89L}},{{0xEFB7EC89L},{0xEFB7EC89L}},{{0xEFB7EC89L},{0xEFB7EC89L}},{{0xEFB7EC89L},{0xEFB7EC89L}},{{0xEFB7EC89L},{0xEFB7EC89L}},{{0xEFB7EC89L},{0xEFB7EC89L}},{{0xEFB7EC89L},{0xEFB7EC89L}}};
static int32_t g_542 = 0x390E4D6EL;
static int32_t g_544 = (-1L);
static int8_t ****g_573 = nullptr;
static int8_t g_585 = 0xF8L;
static int8_t *****g_707 = nullptr;
static struct S1 *g_779 = &g_242;
static struct S1 *g_780 = &g_242;
static int16_t *g_817 = &g_48;
static int16_t **g_816 = &g_817;
static const struct S0 g_828 = {0xFF443842L,0x9BL,1UL,3UL,0x58781100L,19,0x8656AF6AL};
static const struct S0 * volatile g_827 = &g_828;/* VOLATILE GLOBAL g_827 */
static const struct S0 * volatile * const g_826 = &g_827;
static uint32_t *g_865 = &g_126;
static uint32_t **g_864 = &g_865;
static float g_947 = 0x6.47E396p+62;
static volatile float g_983 = 0x5.6A012Ep+99;/* VOLATILE GLOBAL g_983 */
static volatile float * volatile g_982 = &g_983;/* VOLATILE GLOBAL g_982 */
static volatile float * volatile * volatile g_981 = &g_982;/* VOLATILE GLOBAL g_981 */
static volatile float * volatile * volatile * volatile g_980 = &g_981;/* VOLATILE GLOBAL g_980 */
static uint16_t g_1018[3] = {65535UL,65535UL,65535UL};
static int32_t g_1020 = 0L;
static const float g_1052 = (-0x8.4p+1);
static uint32_t *g_1101 = &g_254;
static int8_t g_1162 = 0xC7L;
static volatile int8_t g_1208 = 0L;/* VOLATILE GLOBAL g_1208 */
static int8_t g_1232 = 0x0BL;
static uint64_t g_1340 = 18446744073709551615UL;
static int32_t g_1346 = 8L;
static int32_t g_1347 = 0xA250E1D4L;
static struct S0 g_1389 = {0x21B1A9CBL,4UL,0x9E319BAFL,255UL,1L,0,-1L};
static struct S1 g_1429[1][4] = {{{-3,-3403,2,1UL,1174,6UL,6472},{-3,-3403,2,1UL,1174,6UL,6472},{-3,-3403,2,1UL,1174,6UL,6472},{-3,-3403,2,1UL,1174,6UL,6472}}};
static struct S1 g_1430 = {-2,3378,-7,18446744073709551607UL,8563,18446744073709551615UL,20605};
static struct S1 g_1431 = {0,-1634,4,5UL,1931,18446744073709551615UL,21154};
static struct S1 g_1432 = {3,2700,6,18446744073709551615UL,3628,0x66C6F2F5L,4005};
static struct S1 g_1433 = {1,-2752,1,0x15857188L,7704,18446744073709551615UL,16284};
static struct S1 g_1434[9] = {{-1,80,2,0UL,12143,18446744073709551607UL,8350},{-1,80,2,0UL,12143,18446744073709551607UL,8350},{-1,80,2,0UL,12143,18446744073709551607UL,8350},{-1,80,2,0UL,12143,18446744073709551607UL,8350},{-1,80,2,0UL,12143,18446744073709551607UL,8350},{-1,80,2,0UL,12143,18446744073709551607UL,8350},{-1,80,2,0UL,12143,18446744073709551607UL,8350},{-1,80,2,0UL,12143,18446744073709551607UL,8350},{-1,80,2,0UL,12143,18446744073709551607UL,8350}};
static struct S1 g_1435[2][4] = {{{1,-1519,-4,0x9D30A5DFL,22574,1UL,6052},{-1,-1401,-6,18446744073709551606UL,198,0xE221BB6BL,7480},{1,-1519,-4,0x9D30A5DFL,22574,1UL,6052},{-1,-1401,-6,18446744073709551606UL,198,0xE221BB6BL,7480}},{{1,-1519,-4,0x9D30A5DFL,22574,1UL,6052},{-1,-1401,-6,18446744073709551606UL,198,0xE221BB6BL,7480},{1,-1519,-4,0x9D30A5DFL,22574,1UL,6052},{-1,-1401,-6,18446744073709551606UL,198,0xE221BB6BL,7480}}};
static struct S1 g_1436 = {0,-670,1,18446744073709551613UL,7109,18446744073709551611UL,9884};
static struct S1 g_1437[3] = {{-3,3929,6,18446744073709551612UL,982,1UL,14763},{-3,3929,6,18446744073709551612UL,982,1UL,14763},{-3,3929,6,18446744073709551612UL,982,1UL,14763}};
static struct S1 g_1438[6] = {{-0,2102,0,0xFFB5B6BBL,20281,1UL,11243},{-0,2102,0,0xFFB5B6BBL,20281,1UL,11243},{-0,2102,0,0xFFB5B6BBL,20281,1UL,11243},{-0,2102,0,0xFFB5B6BBL,20281,1UL,11243},{-0,2102,0,0xFFB5B6BBL,20281,1UL,11243},{-0,2102,0,0xFFB5B6BBL,20281,1UL,11243}};
static struct S1 g_1439 = {-0,280,5,0x6D0F57A9L,20743,0x3CA99ED2L,10921};
static struct S1 g_1440 = {-3,2271,2,0x52968BF2L,3152,0UL,21965};
static struct S1 g_1441 = {1,-208,-1,8UL,17559,0x5E91CE92L,14767};
static struct S1 g_1442 = {3,3631,-3,0x190F4212L,15462,0x360EDCFBL,4051};
static struct S1 g_1443 = {2,-2821,-7,0UL,11370,0x74A0B326L,18263};
static struct S1 g_1444 = {-3,3187,-0,0UL,22988,0x7838BF2BL,21985};
static struct S1 g_1445 = {-3,-3463,-6,0xCB895893L,14032,5UL,5196};
static struct S1 g_1446 = {-3,-1745,-0,0xE0DB854BL,296,0x86A42137L,3986};
static struct S1 g_1447 = {3,-1053,7,9UL,22607,0xEC575A15L,19454};
static struct S1 g_1448 = {-3,-517,-0,0xAD7AFB12L,15932,18446744073709551608UL,13165};
static struct S1 g_1449[10][7] = {{{1,528,1,18446744073709551610UL,9688,0xBDA72DDCL,18329},{-3,3069,-5,0x927F36D8L,10149,0x758DEC33L,18905},{3,1864,1,7UL,484,0xA4502075L,389},{-3,3069,-5,0x927F36D8L,10149,0x758DEC33L,18905},{1,528,1,18446744073709551610UL,9688,0xBDA72DDCL,18329},{-1,2668,7,0UL,5489,1UL,4191},{-3,3069,-5,0x927F36D8L,10149,0x758DEC33L,18905}},{{-0,1127,2,5UL,1509,6UL,20746},{-2,3026,-6,0xE297B0B0L,6104,0x381B3EA8L,16106},{0,-2642,-7,18446744073709551615UL,5436,9UL,9669},{-3,3069,-5,0x927F36D8L,10149,0x758DEC33L,18905},{-2,-651,4,1UL,22445,8UL,15217},{0,-2642,-7,18446744073709551615UL,5436,9UL,9669},{1,-2084,7,18446744073709551615UL,6533,0x4280BBDBL,13604}},{{-2,-651,4,1UL,22445,8UL,15217},{1,-2084,7,18446744073709551615UL,6533,0x4280BBDBL,13604},{2,610,-7,6UL,4096,3UL,9367},{2,610,-7,6UL,4096,3UL,9367},{1,-2084,7,18446744073709551615UL,6533,0x4280BBDBL,13604},{-2,-651,4,1UL,22445,8UL,15217},{-2,3026,-6,0xE297B0B0L,6104,0x381B3EA8L,16106}},{{-0,1127,2,5UL,1509,6UL,20746},{-3,3069,-5,0x927F36D8L,10149,0x758DEC33L,18905},{-2,3684,-1,0xDBB2790DL,16619,0xDD916707L,4879},{-0,1127,2,5UL,1509,6UL,20746},{1,-2084,7,18446744073709551615UL,6533,0x4280BBDBL,13604},{2,-3216,2,0x484869C1L,3570,0xD64DBA6EL,22411},{-3,3069,-5,0x927F36D8L,10149,0x758DEC33L,18905}},{{1,528,1,18446744073709551610UL,9688,0xBDA72DDCL,18329},{-2,3664,-1,0UL,9841,0x1CD50DBAL,6902},{-2,-651,4,1UL,22445,8UL,15217},{3,-1063,-1,0xB4D4D0BBL,12624,18446744073709551608UL,7403},{-2,-651,4,1UL,22445,8UL,15217},{-2,3664,-1,0UL,9841,0x1CD50DBAL,6902},{1,528,1,18446744073709551610UL,9688,0xBDA72DDCL,18329}},{{-2,3664,-1,0UL,9841,0x1CD50DBAL,6902},{-3,3069,-5,0x927F36D8L,10149,0x758DEC33L,18905},{2,610,-7,6UL,4096,3UL,9367},{-2,-651,4,1UL,22445,8UL,15217},{1,528,1,18446744073709551610UL,9688,0xBDA72DDCL,18329},{-2,3664,-1,0UL,9841,0x1CD50DBAL,6902},{2,-3216,2,0x484869C1L,3570,0xD64DBA6EL,22411}},{{2,610,-7,6UL,4096,3UL,9367},{-2,3664,-1,0UL,9841,0x1CD50DBAL,6902},{3,-1063,-1,0xB4D4D0BBL,12624,18446744073709551608UL,7403},{0,-2642,-7,18446744073709551615UL,5436,9UL,9669},{0,-2642,-7,18446744073709551615UL,5436,9UL,9669},{3,-1063,-1,0xB4D4D0BBL,12624,18446744073709551608UL,7403},{-2,3664,-1,0UL,9841,0x1CD50DBAL,6902}},{{0,-2642,-7,18446744073709551615UL,5436,9UL,9669},{-1,2668,7,0UL,5489,1UL,4191},{3,-1614,2,0x1392DD2BL,9260,0x60730FB8L,1000},{-2,3026,-6,0xE297B0B0L,6104,0x381B3EA8L,16106},{-1,2668,7,0UL,5489,1UL,4191},{2,-3216,2,0x484869C1L,3570,0xD64DBA6EL,22411},{-2,3664,-1,0UL,9841,0x1CD50DBAL,6902}},{{3,1864,1,7UL,484,0xA4502075L,389},{0,-2642,-7,18446744073709551615UL,5436,9UL,9669},{2,-3216,2,0x484869C1L,3570,0xD64DBA6EL,22411},{3,1864,1,7UL,484,0xA4502075L,389},{-2,3664,-1,0UL,9841,0x1CD50DBAL,6902},{3,1864,1,7UL,484,0xA4502075L,389},{2,-3216,2,0x484869C1L,3570,0xD64DBA6EL,22411}},{{-2,-651,4,1UL,22445,8UL,15217},{-2,-651,4,1UL,22445,8UL,15217},{-0,1127,2,5UL,1509,6UL,20746},{-2,3026,-6,0xE297B0B0L,6104,0x381B3EA8L,16106},{0,-2642,-7,18446744073709551615UL,5436,9UL,9669},{-3,3069,-5,0x927F36D8L,10149,0x758DEC33L,18905},{-2,-651,4,1UL,22445,8UL,15217}}};
static struct S1 g_1450 = {2,-2094,6,0xE9B9E36CL,8215,0UL,22986};
static struct S1 g_1451 = {3,2356,2,0x22DD993EL,19694,2UL,17890};
static struct S1 g_1452 = {3,-2646,-0,8UL,21969,6UL,16638};
static struct S1 g_1453 = {-3,-127,3,2UL,13912,0xAD9B3E42L,16847};
static struct S1 g_1454 = {3,3387,3,0xA47146C4L,14419,2UL,8363};
static struct S1 g_1455 = {-1,-2812,1,6UL,15132,1UL,9812};
static struct S1 g_1456[3][3] = {{{-1,-1312,7,18446744073709551613UL,1487,0x53B7A69AL,8766},{0,-3408,-4,18446744073709551607UL,4521,18446744073709551615UL,10162},{0,-3408,-4,18446744073709551607UL,4521,18446744073709551615UL,10162}},{{-1,-1312,7,18446744073709551613UL,1487,0x53B7A69AL,8766},{0,-3408,-4,18446744073709551607UL,4521,18446744073709551615UL,10162},{0,-3408,-4,18446744073709551607UL,4521,18446744073709551615UL,10162}},{{-1,-1312,7,18446744073709551613UL,1487,0x53B7A69AL,8766},{0,-3408,-4,18446744073709551607UL,4521,18446744073709551615UL,10162},{0,-3408,-4,18446744073709551607UL,4521,18446744073709551615UL,10162}}};
static struct S1 g_1457[7][8][4] = {{{{2,-3860,-2,0x8B1A5181L,880,0x27632650L,13263},{2,3851,-5,0xB8D8407BL,18106,0x8DC76179L,4383},{-1,1649,5,0UL,16526,18446744073709551615UL,8003},{0,-2376,0,0x604A305BL,15385,0UL,17351}},{{1,184,5,1UL,10576,0x68A30918L,5035},{-3,-648,6,1UL,18189,0x4F6D8469L,19497},{2,2278,7,9UL,16096,1UL,3371},{0,3759,-6,0x8F3438DFL,1483,0x1631C3F9L,5126}},{{3,-275,-2,0UL,8908,0xCBF597C1L,17496},{-1,-3279,-1,0x0B841DF1L,5911,0x99BA0ED7L,5715},{3,1047,-4,1UL,10675,0xFE3CE811L,1489},{3,1432,4,0xF581EB96L,6716,0xBF8238B3L,14724}},{{3,1432,4,0xF581EB96L,6716,0xBF8238B3L,14724},{3,2843,-4,0x0F420364L,19051,1UL,18713},{2,3851,-5,0xB8D8407BL,18106,0x8DC76179L,4383},{-3,-1680,-7,1UL,1939,0UL,10699}},{{3,2843,-4,0x0F420364L,19051,1UL,18713},{-3,-648,6,1UL,18189,0x4F6D8469L,19497},{3,2843,-4,0x0F420364L,19051,1UL,18713},{0,-2556,-4,0xDF13B3DCL,20746,18446744073709551612UL,12229}},{{-1,-1722,7,0x91508D5DL,13622,0x244D9151L,3894},{2,-3860,-2,0x8B1A5181L,880,0x27632650L,13263},{-0,-3020,4,0x8D3A82F2L,17140,0UL,19323},{3,-275,-2,0UL,8908,0xCBF597C1L,17496}},{{0,1630,3,0x045C5CA9L,2225,0x38644E02L,17450},{1,1938,-0,18446744073709551610UL,9374,0x8A5641F1L,45},{0,-2556,-4,0xDF13B3DCL,20746,18446744073709551612UL,12229},{2,-3860,-2,0x8B1A5181L,880,0x27632650L,13263}},{{0,3759,-6,0x8F3438DFL,1483,0x1631C3F9L,5126},{1,-1891,5,1UL,5131,4UL,14165},{0,-2556,-4,0xDF13B3DCL,20746,18446744073709551612UL,12229},{-3,3998,7,0x7483D76EL,2920,1UL,592}}},{{{0,1630,3,0x045C5CA9L,2225,0x38644E02L,17450},{-2,-1260,0,18446744073709551610UL,3643,0UL,14112},{-0,-3020,4,0x8D3A82F2L,17140,0UL,19323},{0,1630,3,0x045C5CA9L,2225,0x38644E02L,17450}},{{-1,-1722,7,0x91508D5DL,13622,0x244D9151L,3894},{0,3759,-6,0x8F3438DFL,1483,0x1631C3F9L,5126},{3,2843,-4,0x0F420364L,19051,1UL,18713},{2,-3955,5,1UL,15277,0xEF0B9ACCL,11182}},{{3,2843,-4,0x0F420364L,19051,1UL,18713},{2,-3955,5,1UL,15277,0xEF0B9ACCL,11182},{2,3851,-5,0xB8D8407BL,18106,0x8DC76179L,4383},{2,2189,-6,0x218F67B4L,18353,0xDD37653CL,17077}},{{3,1432,4,0xF581EB96L,6716,0xBF8238B3L,14724},{-1,3002,5,0UL,11280,0x5664227AL,3249},{3,1047,-4,1UL,10675,0xFE3CE811L,1489},{1,-1891,5,1UL,5131,4UL,14165}},{{3,-275,-2,0UL,8908,0xCBF597C1L,17496},{3,2140,7,0xC3F300ADL,16510,18446744073709551610UL,16750},{2,2278,7,9UL,16096,1UL,3371},{2,-3955,5,1UL,15277,0xEF0B9ACCL,11182}},{{1,184,5,1UL,10576,0x68A30918L,5035},{-3,-1680,-7,1UL,1939,0UL,10699},{-1,1649,5,0UL,16526,18446744073709551615UL,8003},{2,-3686,-5,1UL,19302,0x161C3DD7L,4741}},{{2,-3860,-2,0x8B1A5181L,880,0x27632650L,13263},{-2,-1260,0,18446744073709551610UL,3643,0UL,14112},{2,3845,-7,18446744073709551607UL,14828,0UL,19443},{-1,-1190,5,0x09239A7EL,13212,18446744073709551608UL,19104}},{{-1,3002,5,0UL,11280,0x5664227AL,3249},{2,2189,-6,0x218F67B4L,18353,0xDD37653CL,17077},{-3,3998,7,0x7483D76EL,2920,1UL,592},{2,-3860,-2,0x8B1A5181L,880,0x27632650L,13263}}},{{{2,651,-2,18446744073709551613UL,14513,1UL,9492},{-1,-1722,7,0x91508D5DL,13622,0x244D9151L,3894},{2,-1264,-2,7UL,11228,0xFD8D126BL,10532},{2,-1264,-2,7UL,11228,0xFD8D126BL,10532}},{{2,-3860,-2,0x8B1A5181L,880,0x27632650L,13263},{2,-3860,-2,0x8B1A5181L,880,0x27632650L,13263},{1,-539,-5,18446744073709551611UL,7886,0x683ABCABL,14851},{0,-2376,0,0x604A305BL,15385,0UL,17351}},{{-1,-1391,-2,0UL,9808,18446744073709551615UL,2452},{-1,1649,5,0UL,16526,18446744073709551615UL,8003},{2,2278,7,9UL,16096,1UL,3371},{-3,-1680,-7,1UL,1939,0UL,10699}},{{2,-1264,-2,7UL,11228,0xFD8D126BL,10532},{-1,-3279,-1,0x0B841DF1L,5911,0x99BA0ED7L,5715},{0,3727,-0,18446744073709551608UL,882,18446744073709551613UL,6789},{2,2278,7,9UL,16096,1UL,3371}},{{3,1432,4,0xF581EB96L,6716,0xBF8238B3L,14724},{-1,-3279,-1,0x0B841DF1L,5911,0x99BA0ED7L,5715},{-1,328,1,0x4E96E47BL,15908,0x2FB65DBCL,1263},{-3,-1680,-7,1UL,1939,0UL,10699}},{{-1,-3279,-1,0x0B841DF1L,5911,0x99BA0ED7L,5715},{-1,1649,5,0UL,16526,18446744073709551615UL,8003},{3,2843,-4,0x0F420364L,19051,1UL,18713},{0,-2376,0,0x604A305BL,15385,0UL,17351}},{{1,1938,-0,18446744073709551610UL,9374,0x8A5641F1L,45},{2,-3860,-2,0x8B1A5181L,880,0x27632650L,13263},{-2,-2366,3,0x5875C9E8L,16287,0x66C45E3AL,22813},{2,-1264,-2,7UL,11228,0xFD8D126BL,10532}},{{0,1630,3,0x045C5CA9L,2225,0x38644E02L,17450},{-1,-1722,7,0x91508D5DL,13622,0x244D9151L,3894},{2,-3468,-7,2UL,12059,18446744073709551614UL,18767},{2,-3860,-2,0x8B1A5181L,880,0x27632650L,13263}}},{{{-3,-1680,-7,1UL,1939,0UL,10699},{2,2189,-6,0x218F67B4L,18353,0xDD37653CL,17077},{0,-2556,-4,0xDF13B3DCL,20746,18446744073709551612UL,12229},{-1,-1190,5,0x09239A7EL,13212,18446744073709551608UL,19104}},{{2,-3686,-5,1UL,19302,0x161C3DD7L,4741},{-2,-1260,0,18446744073709551610UL,3643,0UL,14112},{-2,-2366,3,0x5875C9E8L,16287,0x66C45E3AL,22813},{2,-3686,-5,1UL,19302,0x161C3DD7L,4741}},{{-1,-1722,7,0x91508D5DL,13622,0x244D9151L,3894},{-3,-1680,-7,1UL,1939,0UL,10699},{-1,-56,-5,18446744073709551615UL,20761,0xA7C488C8L,9195},{2,-3955,5,1UL,15277,0xEF0B9ACCL,11182}},{{-1,-3279,-1,0x0B841DF1L,5911,0x99BA0ED7L,5715},{3,2140,7,0xC3F300ADL,16510,18446744073709551610UL,16750},{2,3851,-5,0xB8D8407BL,18106,0x8DC76179L,4383},{1,-1891,5,1UL,5131,4UL,14165}},{{2,2278,7,9UL,16096,1UL,3371},{-1,3002,5,0UL,11280,0x5664227AL,3249},{0,3727,-0,18446744073709551608UL,882,18446744073709551613UL,6789},{2,2189,-6,0x218F67B4L,18353,0xDD37653CL,17077}},{{3,-275,-2,0UL,8908,0xCBF597C1L,17496},{2,-3955,5,1UL,15277,0xEF0B9ACCL,11182},{-3,2781,7,0x5E95A930L,12076,18446744073709551611UL,15494},{2,-3955,5,1UL,15277,0xEF0B9ACCL,11182}},{{-1,-1391,-2,0UL,9808,18446744073709551615UL,2452},{0,3759,-6,0x8F3438DFL,1483,0x1631C3F9L,5126},{-1,1649,5,0UL,16526,18446744073709551615UL,8003},{0,1630,3,0x045C5CA9L,2225,0x38644E02L,17450}},{{2,3851,-5,0xB8D8407BL,18106,0x8DC76179L,4383},{-2,-1260,0,18446744073709551610UL,3643,0UL,14112},{2,-1264,-2,7UL,11228,0xFD8D126BL,10532},{-3,3998,7,0x7483D76EL,2920,1UL,592}}},{{{-1,3002,5,0UL,11280,0x5664227AL,3249},{1,-1891,5,1UL,5131,4UL,14165},{-0,242,6,6UL,8371,0UL,21724},{2,-3860,-2,0x8B1A5181L,880,0x27632650L,13263}},{{-1,3002,5,0UL,11280,0x5664227AL,3249},{1,1938,-0,18446744073709551610UL,9374,0x8A5641F1L,45},{2,-1264,-2,7UL,11228,0xFD8D126BL,10532},{3,-275,-2,0UL,8908,0xCBF597C1L,17496}},{{2,3851,-5,0xB8D8407BL,18106,0x8DC76179L,4383},{2,-3860,-2,0x8B1A5181L,880,0x27632650L,13263},{-1,1649,5,0UL,16526,18446744073709551615UL,8003},{0,-2556,-4,0xDF13B3DCL,20746,18446744073709551612UL,12229}},{{-1,-1391,-2,0UL,9808,18446744073709551615UL,2452},{-3,-648,6,1UL,18189,0x4F6D8469L,19497},{-3,2781,7,0x5E95A930L,12076,18446744073709551611UL,15494},{-3,-1680,-7,1UL,1939,0UL,10699}},{{3,-275,-2,0UL,8908,0xCBF597C1L,17496},{3,2843,-4,0x0F420364L,19051,1UL,18713},{0,3727,-0,18446744073709551608UL,882,18446744073709551613UL,6789},{3,1432,4,0xF581EB96L,6716,0xBF8238B3L,14724}},{{2,2278,7,9UL,16096,1UL,3371},{-1,-3279,-1,0x0B841DF1L,5911,0x99BA0ED7L,5715},{2,3851,-5,0xB8D8407BL,18106,0x8DC76179L,4383},{0,3759,-6,0x8F3438DFL,1483,0x1631C3F9L,5126}},{{-1,-3887,-6,0xCC06F491L,9886,1UL,8289},{2,2189,-6,0x218F67B4L,18353,0xDD37653CL,17077},{-1,3059,2,3UL,6106,0xEB77ED4AL,15123},{1,1938,-0,18446744073709551610UL,9374,0x8A5641F1L,45}},{{-2,-2366,3,0x5875C9E8L,16287,0x66C45E3AL,22813},{-3,2781,7,0x5E95A930L,12076,18446744073709551611UL,15494},{3,1047,-4,1UL,10675,0xFE3CE811L,1489},{3,2843,-4,0x0F420364L,19051,1UL,18713}}},{{{3,-157,-4,18446744073709551610UL,17710,0x3977D7E6L,6877},{-2,-2366,3,0x5875C9E8L,16287,0x66C45E3AL,22813},{0,-414,5,0x29151238L,13804,0x20B43EE2L,379},{-3,2781,7,0x5E95A930L,12076,18446744073709551611UL,15494}},{{2,-3686,-5,1UL,19302,0x161C3DD7L,4741},{2,651,-2,18446744073709551613UL,14513,1UL,9492},{-1,-1722,7,0x91508D5DL,13622,0x244D9151L,3894},{2,-1264,-2,7UL,11228,0xFD8D126BL,10532}},{{1,184,5,1UL,10576,0x68A30918L,5035},{3,1047,-4,1UL,10675,0xFE3CE811L,1489},{3,1047,-4,1UL,10675,0xFE3CE811L,1489},{1,184,5,1UL,10576,0x68A30918L,5035}},{{-0,-3020,4,0x8D3A82F2L,17140,0UL,19323},{2,-3686,-5,1UL,19302,0x161C3DD7L,4741},{0,2952,2,18446744073709551615UL,7399,0xCD3E8C50L,21480},{-1,328,1,0x4E96E47BL,15908,0x2FB65DBCL,1263}},{{-1,-3887,-6,0xCC06F491L,9886,1UL,8289},{2,3851,-5,0xB8D8407BL,18106,0x8DC76179L,4383},{3,1432,4,0xF581EB96L,6716,0xBF8238B3L,14724},{2,651,-2,18446744073709551613UL,14513,1UL,9492}},{{0,3759,-6,0x8F3438DFL,1483,0x1631C3F9L,5126},{-3,2889,-3,0x2C2DBD4DL,6511,4UL,8152},{-0,242,6,6UL,8371,0UL,21724},{2,651,-2,18446744073709551613UL,14513,1UL,9492}},{{-1,-56,-5,18446744073709551615UL,20761,0xA7C488C8L,9195},{2,3851,-5,0xB8D8407BL,18106,0x8DC76179L,4383},{-2,-2152,-2,0UL,6126,0UL,7065},{-1,328,1,0x4E96E47BL,15908,0x2FB65DBCL,1263}},{{0,-2556,-4,0xDF13B3DCL,20746,18446744073709551612UL,12229},{2,-3686,-5,1UL,19302,0x161C3DD7L,4741},{1,-1891,5,1UL,5131,4UL,14165},{1,184,5,1UL,10576,0x68A30918L,5035}}},{{{2,2278,7,9UL,16096,1UL,3371},{3,1047,-4,1UL,10675,0xFE3CE811L,1489},{-1,-56,-5,18446744073709551615UL,20761,0xA7C488C8L,9195},{2,-1264,-2,7UL,11228,0xFD8D126BL,10532}},{{-3,2889,-3,0x2C2DBD4DL,6511,4UL,8152},{2,651,-2,18446744073709551613UL,14513,1UL,9492},{2,3845,-7,18446744073709551607UL,14828,0UL,19443},{-3,2781,7,0x5E95A930L,12076,18446744073709551611UL,15494}},{{3,2140,7,0xC3F300ADL,16510,18446744073709551610UL,16750},{-2,-2366,3,0x5875C9E8L,16287,0x66C45E3AL,22813},{-1,-3279,-1,0x0B841DF1L,5911,0x99BA0ED7L,5715},{3,2843,-4,0x0F420364L,19051,1UL,18713}},{{2,2278,7,9UL,16096,1UL,3371},{-3,2781,7,0x5E95A930L,12076,18446744073709551611UL,15494},{-3,-481,6,0xC287213AL,5022,0x29D55087L,7799},{1,1938,-0,18446744073709551610UL,9374,0x8A5641F1L,45}},{{2,-3468,-7,2UL,12059,18446744073709551614UL,18767},{2,2189,-6,0x218F67B4L,18353,0xDD37653CL,17077},{-2,-2152,-2,0UL,6126,0UL,7065},{-0,2823,-6,0UL,3442,0x1A3C7861L,16180}},{{3,2843,-4,0x0F420364L,19051,1UL,18713},{-1,-3887,-6,0xCC06F491L,9886,1UL,8289},{-1,-1190,5,0x09239A7EL,13212,18446744073709551608UL,19104},{0,3759,-6,0x8F3438DFL,1483,0x1631C3F9L,5126}},{{0,3759,-6,0x8F3438DFL,1483,0x1631C3F9L,5126},{0,2952,2,18446744073709551615UL,7399,0xCD3E8C50L,21480},{-3,2781,7,0x5E95A930L,12076,18446744073709551611UL,15494},{2,-3686,-5,1UL,19302,0x161C3DD7L,4741}},{{0,2952,2,18446744073709551615UL,7399,0xCD3E8C50L,21480},{2,2189,-6,0x218F67B4L,18353,0xDD37653CL,17077},{0,2952,2,18446744073709551615UL,7399,0xCD3E8C50L,21480},{0,-414,5,0x29151238L,13804,0x20B43EE2L,379}}}};
static struct S1 g_1458 = {2,-3582,2,0x955F28EBL,14514,0xEA751440L,6632};
static struct S1 g_1459 = {2,3885,-2,0xE37A66C2L,21530,0x00828965L,1230};
static struct S1 g_1460 = {1,3995,-4,0UL,10156,0xBB9ACE38L,6643};
static struct S1 g_1461 = {-3,1667,-5,0xBD5D91A7L,11032,0x4C296A1BL,7378};
static struct S1 g_1462 = {2,3671,-7,1UL,7645,18446744073709551615UL,22529};
static struct S1 g_1463 = {1,-36,5,0xE20195BAL,8055,0xE7104345L,3296};
static struct S1 g_1464[2][8] = {{{-3,-3250,-4,0UL,17925,0UL,19033},{-3,-3250,-4,0UL,17925,0UL,19033},{-0,-354,-5,1UL,15394,18446744073709551609UL,15966},{-1,2772,0,0xFE01541FL,6991,18446744073709551612UL,15301},{-0,-354,-5,1UL,15394,18446744073709551609UL,15966},{-3,-3250,-4,0UL,17925,0UL,19033},{-3,-3250,-4,0UL,17925,0UL,19033},{-0,-354,-5,1UL,15394,18446744073709551609UL,15966}},{{3,-2082,0,0x6837C01FL,2179,2UL,11590},{-0,-354,-5,1UL,15394,18446744073709551609UL,15966},{-0,-354,-5,1UL,15394,18446744073709551609UL,15966},{3,-2082,0,0x6837C01FL,2179,2UL,11590},{-1,-3231,-6,0UL,4568,0xB50CE6A4L,5764},{3,-2082,0,0x6837C01FL,2179,2UL,11590},{-0,-354,-5,1UL,15394,18446744073709551609UL,15966},{-0,-354,-5,1UL,15394,18446744073709551609UL,15966}}};
static struct S1 g_1465 = {-3,3964,-4,18446744073709551606UL,20615,0x8A0B3566L,8006};
static struct S1 g_1466 = {1,-410,0,0x70B44BCAL,7362,18446744073709551615UL,13716};
static struct S1 g_1467 = {-2,3941,-6,1UL,6350,18446744073709551615UL,19105};
static struct S1 g_1468 = {3,-2317,-6,0xE837EBA6L,17774,0x6273D439L,7724};
static struct S1 g_1469[5] = {{2,-1348,2,3UL,2691,3UL,766},{2,-1348,2,3UL,2691,3UL,766},{2,-1348,2,3UL,2691,3UL,766},{2,-1348,2,3UL,2691,3UL,766},{2,-1348,2,3UL,2691,3UL,766}};
static struct S1 g_1470 = {0,1897,2,0x8053049FL,16101,1UL,4395};
static struct S1 g_1471 = {-3,2838,4,1UL,3786,0xA0D37E9FL,0};
static struct S1 g_1472[5][2] = {{{1,3979,-1,0x172770B3L,15505,8UL,17335},{1,3979,-1,0x172770B3L,15505,8UL,17335}},{{1,3979,-1,0x172770B3L,15505,8UL,17335},{1,3979,-1,0x172770B3L,15505,8UL,17335}},{{1,3979,-1,0x172770B3L,15505,8UL,17335},{1,3979,-1,0x172770B3L,15505,8UL,17335}},{{1,3979,-1,0x172770B3L,15505,8UL,17335},{1,3979,-1,0x172770B3L,15505,8UL,17335}},{{1,3979,-1,0x172770B3L,15505,8UL,17335},{1,3979,-1,0x172770B3L,15505,8UL,17335}}};
static struct S1 g_1473[8] = {{0,2169,-7,7UL,19936,0x498C9F51L,5016},{0,2169,-7,7UL,19936,0x498C9F51L,5016},{0,2169,-7,7UL,19936,0x498C9F51L,5016},{0,2169,-7,7UL,19936,0x498C9F51L,5016},{0,2169,-7,7UL,19936,0x498C9F51L,5016},{0,2169,-7,7UL,19936,0x498C9F51L,5016},{0,2169,-7,7UL,19936,0x498C9F51L,5016},{0,2169,-7,7UL,19936,0x498C9F51L,5016}};
static struct S1 g_1474 = {-1,-125,6,0x317DFD4FL,100,18446744073709551615UL,15067};
static struct S1 g_1475 = {-2,3345,-0,0x2777498EL,12255,0xFBCA2C11L,11135};
static struct S1 g_1476 = {2,1681,5,9UL,2221,18446744073709551615UL,19650};
static struct S1 g_1477 = {-1,-3030,-1,18446744073709551609UL,18547,5UL,6032};
static struct S1 g_1478 = {-1,3510,6,18446744073709551615UL,22104,0x3069FD1EL,10460};
static struct S1 g_1479 = {-1,-2016,-0,18446744073709551615UL,18237,0x99781C26L,17301};
static struct S1 g_1480 = {2,-2606,5,18446744073709551615UL,4740,0x5148A293L,12678};
static struct S1 g_1481 = {2,-2318,-6,0x0B05F43EL,4167,0x4CE86449L,10820};
static struct S1 g_1482 = {-2,2985,-7,0UL,13954,0x32F6C921L,13891};
static struct S1 g_1483 = {-1,2931,0,0xD06D8230L,14483,0x647F4CBEL,4711};
static struct S1 g_1484[3][2] = {{{0,-1806,1,18446744073709551615UL,12425,1UL,6187},{0,-1806,1,18446744073709551615UL,12425,1UL,6187}},{{0,-1806,1,18446744073709551615UL,12425,1UL,6187},{0,-1806,1,18446744073709551615UL,12425,1UL,6187}},{{0,-1806,1,18446744073709551615UL,12425,1UL,6187},{0,-1806,1,18446744073709551615UL,12425,1UL,6187}}};
static struct S1 g_1485 = {1,-1822,-7,18446744073709551615UL,15104,0x70A2E34DL,2751};
static struct S1 g_1486[9][4] = {{{-0,3787,-3,0x8C6693B8L,1624,18446744073709551615UL,14355},{1,3623,1,0xF645C939L,20008,18446744073709551614UL,19959},{-1,2601,4,0xAF9F168EL,19114,0x881FACBDL,21661},{-1,-1387,1,18446744073709551606UL,8884,1UL,18847}},{{-1,2601,4,0xAF9F168EL,19114,0x881FACBDL,21661},{-1,-1387,1,18446744073709551606UL,8884,1UL,18847},{-3,1160,1,18446744073709551606UL,9448,0x95716A02L,4184},{-1,-1387,1,18446744073709551606UL,8884,1UL,18847}},{{1,-1888,1,0xC70779F1L,1157,1UL,11086},{1,3623,1,0xF645C939L,20008,18446744073709551614UL,19959},{-0,-125,-2,7UL,6724,0x0F500FBDL,7635},{-1,2601,4,0xAF9F168EL,19114,0x881FACBDL,21661}},{{-3,-1972,1,0x941AD704L,6795,18446744073709551611UL,14836},{3,1345,-4,0xA82ED5EEL,20698,0xCE03EB2AL,14463},{-1,-1387,1,18446744073709551606UL,8884,1UL,18847},{-3,3431,-1,18446744073709551614UL,8888,1UL,7053}},{{-0,-125,-2,7UL,6724,0x0F500FBDL,7635},{1,-1888,1,0xC70779F1L,1157,1UL,11086},{3,-3874,6,0xBD6F5F84L,22078,0UL,3366},{3,-3874,6,0xBD6F5F84L,22078,0UL,3366}},{{-0,-125,-2,7UL,6724,0x0F500FBDL,7635},{-0,-125,-2,7UL,6724,0x0F500FBDL,7635},{-1,-1387,1,18446744073709551606UL,8884,1UL,18847},{1,-3185,3,2UL,13843,2UL,2148}},{{-3,-1972,1,0x941AD704L,6795,18446744073709551611UL,14836},{3,-3874,6,0xBD6F5F84L,22078,0UL,3366},{-0,-125,-2,7UL,6724,0x0F500FBDL,7635},{3,1345,-4,0xA82ED5EEL,20698,0xCE03EB2AL,14463}},{{1,-1888,1,0xC70779F1L,1157,1UL,11086},{-0,3787,-3,0x8C6693B8L,1624,18446744073709551615UL,14355},{-3,1160,1,18446744073709551606UL,9448,0x95716A02L,4184},{-0,-125,-2,7UL,6724,0x0F500FBDL,7635}},{{-1,2601,4,0xAF9F168EL,19114,0x881FACBDL,21661},{-0,3787,-3,0x8C6693B8L,1624,18446744073709551615UL,14355},{-1,2601,4,0xAF9F168EL,19114,0x881FACBDL,21661},{3,1345,-4,0xA82ED5EEL,20698,0xCE03EB2AL,14463}}};
static struct S1 g_1487 = {-1,-1506,-3,0xEFBE5B40L,16666,0UL,16198};
static struct S1 g_1488 = {1,-3123,7,1UL,7594,0xB5AE67CDL,2484};
static struct S1 g_1489 = {-0,1985,-4,0UL,5049,0x014AFB22L,15746};
static struct S1 g_1490 = {3,2536,-1,0x2C6706E4L,12724,5UL,19113};
static struct S1 g_1491[8] = {{3,3229,-4,18446744073709551615UL,5930,0xD8B9E98FL,8913},{3,3229,-4,18446744073709551615UL,5930,0xD8B9E98FL,8913},{0,3591,7,6UL,17160,0xBACF264CL,21233},{3,3229,-4,18446744073709551615UL,5930,0xD8B9E98FL,8913},{3,3229,-4,18446744073709551615UL,5930,0xD8B9E98FL,8913},{0,3591,7,6UL,17160,0xBACF264CL,21233},{3,3229,-4,18446744073709551615UL,5930,0xD8B9E98FL,8913},{3,3229,-4,18446744073709551615UL,5930,0xD8B9E98FL,8913}};
static struct S1 g_1492[2] = {{-1,2727,-6,0UL,15167,0xC3726572L,14652},{-1,2727,-6,0UL,15167,0xC3726572L,14652}};
static struct S1 g_1493[5] = {{-0,-3883,-6,1UL,8736,18446744073709551612UL,21051},{-0,-3883,-6,1UL,8736,18446744073709551612UL,21051},{-0,-3883,-6,1UL,8736,18446744073709551612UL,21051},{-0,-3883,-6,1UL,8736,18446744073709551612UL,21051},{-0,-3883,-6,1UL,8736,18446744073709551612UL,21051}};
static struct S1 g_1494 = {-3,-2891,1,18446744073709551611UL,4566,0xCC83AB11L,348};
static struct S1 g_1495[7][10][3] = {{{{-0,-2683,3,0xD844DD16L,21587,1UL,17243},{-0,351,3,18446744073709551611UL,11527,18446744073709551615UL,13745},{-0,3956,-0,0x4CC59DABL,17575,18446744073709551607UL,8676}},{{-0,815,0,0x30EC8025L,19030,0xE6E517D4L,19109},{3,-2007,6,2UL,18763,18446744073709551607UL,7100},{1,1762,5,0xDA90FD58L,2334,18446744073709551615UL,21017}},{{-3,-450,1,6UL,1373,0xA7492240L,15252},{1,276,-1,0UL,14763,18446744073709551612UL,2975},{3,-844,-3,0x735D398BL,7658,1UL,9942}},{{-0,32,-0,2UL,18636,0xBE603D36L,8054},{-3,-450,1,6UL,1373,0xA7492240L,15252},{-3,3495,-5,18446744073709551611UL,18447,5UL,14707}},{{0,1613,1,0UL,3664,0xCFDB9EA8L,9406},{-0,-2683,3,0xD844DD16L,21587,1UL,17243},{-0,-2683,3,0xD844DD16L,21587,1UL,17243}},{{0,1613,1,0UL,3664,0xCFDB9EA8L,9406},{-3,3495,-5,18446744073709551611UL,18447,5UL,14707},{-3,-450,1,6UL,1373,0xA7492240L,15252}},{{-0,32,-0,2UL,18636,0xBE603D36L,8054},{3,-844,-3,0x735D398BL,7658,1UL,9942},{1,276,-1,0UL,14763,18446744073709551612UL,2975}},{{-3,-450,1,6UL,1373,0xA7492240L,15252},{1,1762,5,0xDA90FD58L,2334,18446744073709551615UL,21017},{-1,-3373,-1,18446744073709551615UL,1755,0x04605058L,8484}},{{-1,-219,-3,1UL,3723,0x603B19B5L,7541},{-1,-73,3,0x3EE15EE4L,15458,18446744073709551609UL,21328},{-3,3495,-5,18446744073709551611UL,18447,5UL,14707}},{{3,2435,-4,0x00C53B01L,19675,1UL,23079},{-1,3337,5,1UL,21696,1UL,5138},{3,-2007,6,2UL,18763,18446744073709551607UL,7100}}},{{{-1,-3373,-1,18446744073709551615UL,1755,0x04605058L,8484},{-0,351,3,18446744073709551611UL,11527,18446744073709551615UL,13745},{-1,-219,-3,1UL,3723,0x603B19B5L,7541}},{{3,-848,-3,1UL,14517,0x416498D4L,16415},{-0,3956,-0,0x4CC59DABL,17575,18446744073709551607UL,8676},{2,346,7,0xF812B12EL,11628,0x9C818345L,3648}},{{2,346,7,0xF812B12EL,11628,0x9C818345L,3648},{3,2435,-4,0x00C53B01L,19675,1UL,23079},{2,346,7,0xF812B12EL,11628,0x9C818345L,3648}},{{1,276,-1,0UL,14763,18446744073709551612UL,2975},{-0,-2683,3,0xD844DD16L,21587,1UL,17243},{-1,-219,-3,1UL,3723,0x603B19B5L,7541}},{{-0,815,0,0x30EC8025L,19030,0xE6E517D4L,19109},{3,-844,-3,0x735D398BL,7658,1UL,9942},{3,-2007,6,2UL,18763,18446744073709551607UL,7100}},{{-0,1801,3,0x903D95E1L,22932,0x2EBE7C23L,16006},{-1,-3373,-1,18446744073709551615UL,1755,0x04605058L,8484},{-3,3495,-5,18446744073709551611UL,18447,5UL,14707}},{{3,-844,-3,0x735D398BL,7658,1UL,9942},{-3,3495,-5,18446744073709551611UL,18447,5UL,14707},{-1,-3373,-1,18446744073709551615UL,1755,0x04605058L,8484}},{{-0,1801,3,0x903D95E1L,22932,0x2EBE7C23L,16006},{3,-2007,6,2UL,18763,18446744073709551607UL,7100},{3,-844,-3,0x735D398BL,7658,1UL,9942}},{{-0,815,0,0x30EC8025L,19030,0xE6E517D4L,19109},{-1,-219,-3,1UL,3723,0x603B19B5L,7541},{-0,-2683,3,0xD844DD16L,21587,1UL,17243}},{{1,276,-1,0UL,14763,18446744073709551612UL,2975},{2,346,7,0xF812B12EL,11628,0x9C818345L,3648},{3,2435,-4,0x00C53B01L,19675,1UL,23079}}},{{{2,346,7,0xF812B12EL,11628,0x9C818345L,3648},{2,346,7,0xF812B12EL,11628,0x9C818345L,3648},{-0,3956,-0,0x4CC59DABL,17575,18446744073709551607UL,8676}},{{3,-848,-3,1UL,14517,0x416498D4L,16415},{-1,-219,-3,1UL,3723,0x603B19B5L,7541},{-0,351,3,18446744073709551611UL,11527,18446744073709551615UL,13745}},{{-1,-3373,-1,18446744073709551615UL,1755,0x04605058L,8484},{3,-2007,6,2UL,18763,18446744073709551607UL,7100},{-1,3337,5,1UL,21696,1UL,5138}},{{3,2435,-4,0x00C53B01L,19675,1UL,23079},{-3,3495,-5,18446744073709551611UL,18447,5UL,14707},{-1,-73,3,0x3EE15EE4L,15458,18446744073709551609UL,21328}},{{-1,-219,-3,1UL,3723,0x603B19B5L,7541},{-1,-3373,-1,18446744073709551615UL,1755,0x04605058L,8484},{-1,3337,5,1UL,21696,1UL,5138}},{{-0,-2683,3,0xD844DD16L,21587,1UL,17243},{3,-844,-3,0x735D398BL,7658,1UL,9942},{-0,351,3,18446744073709551611UL,11527,18446744073709551615UL,13745}},{{-0,-1452,6,1UL,13046,0x55C912C9L,14020},{-0,-2683,3,0xD844DD16L,21587,1UL,17243},{-0,3956,-0,0x4CC59DABL,17575,18446744073709551607UL,8676}},{{-2,-3414,-0,0x2D79B52FL,18486,0x09690726L,16810},{3,2435,-4,0x00C53B01L,19675,1UL,23079},{3,2435,-4,0x00C53B01L,19675,1UL,23079}},{{-2,-3414,-0,0x2D79B52FL,18486,0x09690726L,16810},{-0,3956,-0,0x4CC59DABL,17575,18446744073709551607UL,8676},{-0,-2683,3,0xD844DD16L,21587,1UL,17243}},{{-0,-1452,6,1UL,13046,0x55C912C9L,14020},{-0,351,3,18446744073709551611UL,11527,18446744073709551615UL,13745},{3,-844,-3,0x735D398BL,7658,1UL,9942}}},{{{-0,-2683,3,0xD844DD16L,21587,1UL,17243},{-1,3337,5,1UL,21696,1UL,5138},{-1,-3373,-1,18446744073709551615UL,1755,0x04605058L,8484}},{{-1,-219,-3,1UL,3723,0x603B19B5L,7541},{-1,-73,3,0x3EE15EE4L,15458,18446744073709551609UL,21328},{-3,3495,-5,18446744073709551611UL,18447,5UL,14707}},{{3,2435,-4,0x00C53B01L,19675,1UL,23079},{-1,3337,5,1UL,21696,1UL,5138},{3,-2007,6,2UL,18763,18446744073709551607UL,7100}},{{-1,-3373,-1,18446744073709551615UL,1755,0x04605058L,8484},{-0,351,3,18446744073709551611UL,11527,18446744073709551615UL,13745},{-1,-219,-3,1UL,3723,0x603B19B5L,7541}},{{3,-848,-3,1UL,14517,0x416498D4L,16415},{-0,3956,-0,0x4CC59DABL,17575,18446744073709551607UL,8676},{2,346,7,0xF812B12EL,11628,0x9C818345L,3648}},{{2,346,7,0xF812B12EL,11628,0x9C818345L,3648},{3,2435,-4,0x00C53B01L,19675,1UL,23079},{2,346,7,0xF812B12EL,11628,0x9C818345L,3648}},{{1,276,-1,0UL,14763,18446744073709551612UL,2975},{-0,-2683,3,0xD844DD16L,21587,1UL,17243},{-1,-219,-3,1UL,3723,0x603B19B5L,7541}},{{-0,815,0,0x30EC8025L,19030,0xE6E517D4L,19109},{3,-844,-3,0x735D398BL,7658,1UL,9942},{3,-2007,6,2UL,18763,18446744073709551607UL,7100}},{{-0,1801,3,0x903D95E1L,22932,0x2EBE7C23L,16006},{-1,-3373,-1,18446744073709551615UL,1755,0x04605058L,8484},{-3,3495,-5,18446744073709551611UL,18447,5UL,14707}},{{3,-844,-3,0x735D398BL,7658,1UL,9942},{-3,3495,-5,18446744073709551611UL,18447,5UL,14707},{-1,-3373,-1,18446744073709551615UL,1755,0x04605058L,8484}}},{{{-0,1801,3,0x903D95E1L,22932,0x2EBE7C23L,16006},{3,-2007,6,2UL,18763,18446744073709551607UL,7100},{3,-844,-3,0x735D398BL,7658,1UL,9942}},{{-0,815,0,0x30EC8025L,19030,0xE6E517D4L,19109},{-1,-219,-3,1UL,3723,0x603B19B5L,7541},{-0,-2683,3,0xD844DD16L,21587,1UL,17243}},{{1,276,-1,0UL,14763,18446744073709551612UL,2975},{2,346,7,0xF812B12EL,11628,0x9C818345L,3648},{3,2435,-4,0x00C53B01L,19675,1UL,23079}},{{2,346,7,0xF812B12EL,11628,0x9C818345L,3648},{2,346,7,0xF812B12EL,11628,0x9C818345L,3648},{-0,3956,-0,0x4CC59DABL,17575,18446744073709551607UL,8676}},{{3,-848,-3,1UL,14517,0x416498D4L,16415},{-1,-219,-3,1UL,3723,0x603B19B5L,7541},{-0,351,3,18446744073709551611UL,11527,18446744073709551615UL,13745}},{{-1,-3373,-1,18446744073709551615UL,1755,0x04605058L,8484},{3,-2007,6,2UL,18763,18446744073709551607UL,7100},{-1,3337,5,1UL,21696,1UL,5138}},{{3,2435,-4,0x00C53B01L,19675,1UL,23079},{-3,3495,-5,18446744073709551611UL,18447,5UL,14707},{-1,-73,3,0x3EE15EE4L,15458,18446744073709551609UL,21328}},{{-1,-219,-3,1UL,3723,0x603B19B5L,7541},{-1,-3373,-1,18446744073709551615UL,1755,0x04605058L,8484},{-1,3337,5,1UL,21696,1UL,5138}},{{-0,-2683,3,0xD844DD16L,21587,1UL,17243},{3,-844,-3,0x735D398BL,7658,1UL,9942},{-0,351,3,18446744073709551611UL,11527,18446744073709551615UL,13745}},{{-0,-1452,6,1UL,13046,0x55C912C9L,14020},{-0,-2683,3,0xD844DD16L,21587,1UL,17243},{-0,3956,-0,0x4CC59DABL,17575,18446744073709551607UL,8676}}},{{{-2,-3414,-0,0x2D79B52FL,18486,0x09690726L,16810},{3,2435,-4,0x00C53B01L,19675,1UL,23079},{3,2435,-4,0x00C53B01L,19675,1UL,23079}},{{-2,-3414,-0,0x2D79B52FL,18486,0x09690726L,16810},{-0,3956,-0,0x4CC59DABL,17575,18446744073709551607UL,8676},{-0,-2683,3,0xD844DD16L,21587,1UL,17243}},{{-0,-1452,6,1UL,13046,0x55C912C9L,14020},{-0,351,3,18446744073709551611UL,11527,18446744073709551615UL,13745},{3,-844,-3,0x735D398BL,7658,1UL,9942}},{{-0,-2683,3,0xD844DD16L,21587,1UL,17243},{-1,3337,5,1UL,21696,1UL,5138},{-1,-3373,-1,18446744073709551615UL,1755,0x04605058L,8484}},{{-1,-219,-3,1UL,3723,0x603B19B5L,7541},{-1,-73,3,0x3EE15EE4L,15458,18446744073709551609UL,21328},{-3,3495,-5,18446744073709551611UL,18447,5UL,14707}},{{3,2435,-4,0x00C53B01L,19675,1UL,23079},{-1,3337,5,1UL,21696,1UL,5138},{3,-2007,6,2UL,18763,18446744073709551607UL,7100}},{{-1,-3373,-1,18446744073709551615UL,1755,0x04605058L,8484},{-0,351,3,18446744073709551611UL,11527,18446744073709551615UL,13745},{-1,-219,-3,1UL,3723,0x603B19B5L,7541}},{{3,-848,-3,1UL,14517,0x416498D4L,16415},{-0,3956,-0,0x4CC59DABL,17575,18446744073709551607UL,8676},{2,346,7,0xF812B12EL,11628,0x9C818345L,3648}},{{2,346,7,0xF812B12EL,11628,0x9C818345L,3648},{3,2435,-4,0x00C53B01L,19675,1UL,23079},{2,346,7,0xF812B12EL,11628,0x9C818345L,3648}},{{1,276,-1,0UL,14763,18446744073709551612UL,2975},{-0,-2683,3,0xD844DD16L,21587,1UL,17243},{-1,-219,-3,1UL,3723,0x603B19B5L,7541}}},{{{-0,815,0,0x30EC8025L,19030,0xE6E517D4L,19109},{3,-844,-3,0x735D398BL,7658,1UL,9942},{3,-2007,6,2UL,18763,18446744073709551607UL,7100}},{{-0,1801,3,0x903D95E1L,22932,0x2EBE7C23L,16006},{-1,-3373,-1,18446744073709551615UL,1755,0x04605058L,8484},{-3,3495,-5,18446744073709551611UL,18447,5UL,14707}},{{3,-844,-3,0x735D398BL,7658,1UL,9942},{-3,3495,-5,18446744073709551611UL,18447,5UL,14707},{-1,-3373,-1,18446744073709551615UL,1755,0x04605058L,8484}},{{-0,1801,3,0x903D95E1L,22932,0x2EBE7C23L,16006},{3,-2007,6,2UL,18763,18446744073709551607UL,7100},{3,-844,-3,0x735D398BL,7658,1UL,9942}},{{-0,815,0,0x30EC8025L,19030,0xE6E517D4L,19109},{-1,-219,-3,1UL,3723,0x603B19B5L,7541},{-0,-2683,3,0xD844DD16L,21587,1UL,17243}},{{1,276,-1,0UL,14763,18446744073709551612UL,2975},{2,346,7,0xF812B12EL,11628,0x9C818345L,3648},{3,2435,-4,0x00C53B01L,19675,1UL,23079}},{{2,346,7,0xF812B12EL,11628,0x9C818345L,3648},{2,346,7,0xF812B12EL,11628,0x9C818345L,3648},{-0,3956,-0,0x4CC59DABL,17575,18446744073709551607UL,8676}},{{3,-848,-3,1UL,14517,0x416498D4L,16415},{-1,-219,-3,1UL,3723,0x603B19B5L,7541},{-0,351,3,18446744073709551611UL,11527,18446744073709551615UL,13745}},{{-1,-3373,-1,18446744073709551615UL,1755,0x04605058L,8484},{3,-2007,6,2UL,18763,18446744073709551607UL,7100},{-1,3337,5,1UL,21696,1UL,5138}},{{3,2435,-4,0x00C53B01L,19675,1UL,23079},{-3,3495,-5,18446744073709551611UL,18447,5UL,14707},{-1,-73,3,0x3EE15EE4L,15458,18446744073709551609UL,21328}}}};
static struct S1 g_1496 = {-2,-1711,3,5UL,5085,0xB0DEE2F5L,4755};
static struct S1 g_1497 = {3,-137,4,0UL,14910,0x8DEC7E4FL,1596};
static struct S1 g_1498 = {1,-2011,-4,1UL,13568,1UL,14461};
static uint16_t *g_1508 = &g_97[1];
static uint16_t **g_1507[1][2] = {{&g_1508,&g_1508}};
static int32_t *g_1560 = &g_1346;


/* --- FORWARD DECLARATIONS --- */
static uint16_t  func_1(void);
static int32_t * func_17(int32_t * p_18, int32_t * p_19, int8_t  p_20);
static int32_t * func_21(struct S0  p_22, int16_t  p_23, const int32_t  p_24, int16_t  p_25);
static const int32_t * func_27(struct S0  p_28, int32_t * p_29);
static struct S0  func_30(uint8_t  p_31, int32_t * p_32, int32_t * p_33, uint64_t  p_34);
static int32_t * func_35(const uint16_t  p_36, int8_t  p_37, const uint64_t  p_38, struct S0  p_39);
static int32_t * func_58(const float  p_59);
static const int32_t  func_60(int32_t  p_61, const uint32_t  p_62, const int32_t * p_63);
static int64_t  func_66(int32_t * p_67, uint16_t  p_68, float  p_69, uint32_t  p_70);
static int32_t * func_71(int32_t * p_72);


/* --- FUNCTIONS --- */
/* ------------------------------------------ */
/* 
 * reads : g_4 g_7 g_40 g_49 g_43 g_48 g_95 g_46 g_110 g_113 g_97 g_126 g_99 g_109 g_190 g_215 g_152 g_242 g_244 g_251 g_263 g_273 g_47 g_289 g_329 g_253 g_378 g_245 g_216 g_463 g_476 g_480 g_192 g_509 g_484 g_485 g_499 g_542 g_491 g_495 g_544 g_481 g_482 g_497 g_573 g_585 g_477 g_478 g_501 g_707 g_864 g_865 g_1018 g_1020 g_780 g_816 g_817 g_981 g_982 g_983 g_254 g_828.f4 g_826 g_827 g_828 g_489 g_488 g_1340 g_111 g_1471.f3 g_1507 g_1471.f5 g_1508 g_1389.f6 g_1560 g_1346
 * writes: g_4 g_7 g_49 g_43 g_48 g_97 g_99 g_46 g_113 g_126 g_152 g_190 g_192 g_221 g_251 g_253 g_254 g_263 g_242.f4 g_289 g_329 g_216 g_375 g_382 g_509 g_273 g_573 g_501 g_544 g_242.f6 g_1018 g_1020 g_865 g_1101 g_242 g_495 g_1507 g_1471.f5 g_1389.f6 g_1346
 */
static uint16_t  func_1(void)
{ /* block id: 0 */
    int32_t *l_2 = nullptr;
    int32_t l_3[8][6][5] = {{{1L,0xEE21AFA9L,0x1162D50CL,0x64E785C2L,0xD58E7EA1L},{9L,0x5DB2B058L,0L,5L,0L},{(-1L),0xE34EDF6BL,7L,(-1L),5L},{1L,0x69AC54C9L,(-1L),0L,8L},{7L,0x6974EDF0L,0x9953E80CL,0xE6AA1654L,(-7L)},{0x69AC54C9L,0x7B1A0949L,0x4A7D2AE8L,0xD870A326L,0x5158018DL}},{{1L,0x64FDA7EFL,0x19791169L,(-1L),0x5158018DL},{1L,3L,0xFA97F51EL,0x1162D50CL,(-7L)},{0L,0x1162D50CL,0xD870A326L,0x07647F1AL,8L},{1L,1L,5L,0xD58E7EA1L,5L},{(-1L),1L,(-1L),(-1L),0L},{3L,5L,5L,3L,0xD58E7EA1L}},{{0x11D7FEAEL,3L,(-1L),1L,(-2L)},{0x5FEAF86FL,6L,(-3L),0x5DB2B058L,0x69AC54C9L},{4L,(-2L),0x64E785C2L,1L,(-7L)},{0xB61943ECL,0xAA5D732AL,0x9942796AL,3L,(-2L)},{(-2L),1L,1L,(-1L),0x64E785C2L},{3L,(-1L),0x6974EDF0L,0xD58E7EA1L,0x19791169L}},{{0x4A7D2AE8L,(-2L),7L,0x07647F1AL,0L},{0L,(-1L),0x5FEAF86FL,0x1162D50CL,1L},{(-1L),8L,(-1L),(-1L),(-6L)},{0x8EB98764L,(-6L),(-1L),0xD870A326L,6L},{0xAA5D732AL,(-3L),0x5FEAF86FL,0xE6AA1654L,0x3847D228L},{5L,0xC309AB83L,7L,0L,0x5DB2B058L}},{{0x64FDA7EFL,0xFA97F51EL,0x6974EDF0L,(-1L),0x1162D50CL},{0x07647F1AL,9L,1L,5L,1L},{(-1L),(-1L),0x9942796AL,0x64E785C2L,0L},{7L,0x4A7D2AE8L,0x64E785C2L,(-6L),9L},{(-1L),1L,(-3L),0L,(-1L)},{0xEE21AFA9L,0x4A7D2AE8L,(-1L),(-3L),0L}},{{(-1L),(-1L),5L,1L,0x4A7D2AE8L},{0xE6AA1654L,9L,(-1L),0x2509E71BL,0x8EB98764L},{0x5DB2B058L,0xFA97F51EL,5L,0L,7L},{0x08F49235L,0xC309AB83L,0xD870A326L,0L,4L},{3L,(-3L),0xFA97F51EL,(-2L),(-1L)},{(-7L),(-6L),0x19791169L,(-1L),(-1L)}},{{(-7L),8L,0x4A7D2AE8L,(-1L),5L},{3L,(-1L),0x9953E80CL,8L,0x11D7FEAEL},{0x08F49235L,(-2L),(-1L),0x6974EDF0L,0x19791169L},{0x07647F1AL,1L,0x5FEAF86FL,(-1L),3L},{1L,0xAA5D732AL,5L,0xAA5D732AL,1L},{0xB61943ECL,(-1L),(-7L),0L,0xEE21AFA9L}},{{1L,(-2L),0xEE21AFA9L,3L,0x11D7FEAEL},{0L,0x2509E71BL,1L,(-1L),0xEE21AFA9L},{4L,3L,0x64FDA7EFL,(-3L),1L},{0xEE21AFA9L,0x64E785C2L,1L,0L,3L},{(-6L),(-7L),1L,0x7B1A0949L,0x19791169L},{1L,1L,(-2L),0x38591B68L,(-1L)}}};
    int32_t *l_10 = &l_3[0][2][4];
    int32_t *l_11 = &l_3[0][3][4];
    int32_t *l_12 = &l_3[2][1][4];
    int32_t *l_13[9] = {&l_3[6][1][3],&l_3[6][1][3],&l_3[6][1][3],&l_3[6][1][3],&l_3[6][1][3],&l_3[6][1][3],&l_3[6][1][3],&l_3[6][1][3],&l_3[6][1][3]};
    uint32_t l_14 = 1UL;
    struct S0 l_26 = {0x6434D12EL,5UL,18446744073709551615UL,0xB3L,0x962DA72DL,15,0x008693C2L};
    struct S0 l_41 = {6L,250UL,7UL,0x2CL,7L,7,0x1071FCCBL};
    const int32_t *l_1126[5][3][5] = {{{&g_828.f6,&g_828.f6,&g_828.f6,&g_828.f6,&g_828.f6},{&g_828.f0,&g_828.f0,&g_828.f0,&g_828.f0,&g_828.f0},{&g_828.f6,&g_828.f6,&g_828.f6,&g_828.f6,&g_828.f6}},{{&g_828.f0,&g_828.f0,&g_828.f0,&g_828.f0,&g_828.f0},{&g_828.f6,&g_828.f6,&g_828.f6,&g_828.f6,&g_828.f6},{&g_828.f0,&g_828.f0,&g_828.f0,&g_828.f0,&g_828.f0}},{{&g_828.f6,&g_828.f6,&g_828.f6,&g_828.f6,&g_828.f6},{&g_828.f0,&g_828.f0,&g_828.f0,&g_828.f0,&g_828.f0},{&g_828.f6,&g_828.f6,&g_828.f6,&g_828.f6,&g_828.f6}},{{&g_828.f0,&g_828.f0,&g_828.f0,&g_828.f0,&g_828.f0},{&g_828.f6,&g_828.f6,&g_828.f6,&g_828.f6,&g_828.f6},{&g_828.f0,&g_828.f0,&g_828.f0,&g_828.f0,&g_828.f0}},{{&g_828.f6,&g_828.f6,&g_828.f6,&g_828.f6,&g_828.f6},{&g_828.f0,&g_828.f0,&g_828.f0,&g_828.f0,&g_828.f0},{&g_828.f6,&g_828.f6,&g_828.f6,&g_828.f6,&g_828.f6}}};
    const int32_t **l_1125 = &l_1126[0][0][2];
    const uint16_t l_1127 = 1UL;
    int i, j, k;
    g_4[8][2]--;
    --g_7[1];
    l_14--;
    (*g_1560) ^= ((g_4[8][2] , func_17(&l_3[0][1][0], func_21(l_26, (((*l_1125) = func_27(func_30(g_4[8][2], func_35(g_40, (*l_10), g_40, ((*l_10) , l_41)), &l_3[1][3][1], g_7[1]), &l_3[4][5][1])) != &g_109), l_1127, g_4[1][1]), (*l_12))) != &g_1346);
    return (*g_1508);
}


/* ------------------------------------------ */
/* 
 * reads : g_273.f0
 * writes: g_273.f0
 */
static int32_t * func_17(int32_t * p_18, int32_t * p_19, int8_t  p_20)
{ /* block id: 595 */
    struct S1 l_1562 = {-2,1900,6,18446744073709551615UL,1387,0xC2536FA4L,18767};
    int32_t *l_1565 = &g_113;
    int32_t *l_1566 = &g_1389.f0;
    int32_t *l_1567 = &g_1389.f6;
    int32_t *l_1568 = &g_273.f0;
    int32_t *l_1569 = nullptr;
    int32_t *l_1570[5][9] = {{&g_1389.f6,&g_1347,&g_1389.f6,&g_1389.f6,&g_1347,&g_1389.f6,&g_1389.f6,&g_1347,&g_1389.f6},{&g_1347,&g_1347,&g_1347,&g_1347,&g_1347,&g_1347,&g_1347,&g_1347,&g_1347},{&g_1389.f6,&g_1347,&g_1389.f6,&g_1389.f6,&g_1347,&g_1389.f6,&g_1389.f6,&g_1347,&g_1389.f6},{&g_1347,&g_1347,&g_1347,&g_1347,&g_1347,&g_1347,&g_1347,&g_1347,&g_1347},{&g_1389.f6,&g_1347,&g_1389.f6,&g_1389.f6,&g_1347,&g_1389.f6,&g_1389.f6,&g_1347,&g_1389.f6}};
    uint16_t l_1571 = 65535UL;
    int i, j;
    l_1562 = l_1562;
    for (g_273.f0 = 15; (g_273.f0 > (-23)); --g_273.f0)
    { /* block id: 599 */
        return &g_1346;
    }
    --l_1571;
    return &g_1020;
}


/* ------------------------------------------ */
/* 
 * reads : g_544 g_817 g_48 g_497 g_126 g_254 g_981 g_982 g_983 g_263 g_481 g_482 g_192 g_828.f4 g_49 g_43 g_816 g_242.f0 g_215 g_4 g_780 g_244 g_245 g_1018 g_826 g_827 g_828 g_242.f2 g_542 g_489 g_152 g_488 g_273.f1 g_242.f3 g_273.f5 g_378 g_463 g_273.f0 g_95.f0 g_273.f4 g_1340 g_110 g_111 g_491 g_7 g_1471.f3 g_1507 g_1471.f5 g_1508 g_97 g_1389.f6 g_1560
 * writes: g_544 g_126 g_49 g_43 g_216 g_4 g_242 g_1018 g_273.f1 g_192 g_495 g_7 g_273.f0 g_48 g_1507 g_1471.f5 g_97 g_1389.f6 g_221
 */
static int32_t * func_21(struct S0  p_22, int16_t  p_23, const int32_t  p_24, int16_t  p_25)
{ /* block id: 458 */
    int32_t l_1138 = 1L;
    int32_t l_1146 = 0x5305F87EL;
    uint32_t l_1149 = 1UL;
    int32_t l_1214[7][10] = {{(-4L),1L,0x7698DD0CL,(-4L),0x9EAB29D1L,0x7698DD0CL,0x7698DD0CL,0x9EAB29D1L,(-4L),0x7698DD0CL},{0x9EAB29D1L,0x9EAB29D1L,0xE578EF72L,1L,(-4L),0x9EAB29D1L,0x7698DD0CL,0x7698DD0CL,0x9EAB29D1L,(-4L)},{(-4L),0xE578EF72L,0xE578EF72L,(-4L),(-1L),0xE578EF72L,0x7698DD0CL,(-1L),(-1L),0x7698DD0CL},{(-1L),(-4L),0xE578EF72L,0xE578EF72L,(-4L),(-1L),0xE578EF72L,0x7698DD0CL,(-1L),(-1L)},{(-4L),0x7698DD0CL,1L,(-4L),(-4L),1L,0x7698DD0CL,(-4L),0x9EAB29D1L,0x7698DD0CL},{(-4L),(-1L),0xE578EF72L,0x7698DD0CL,(-1L),(-1L),0x7698DD0CL,0xE578EF72L,(-1L),(-4L)},{(-1L),0x7698DD0CL,0xE578EF72L,(-1L),(-4L),0xE578EF72L,0xE578EF72L,(-4L),(-1L),0xE578EF72L}};
    int64_t l_1216[4][1][7] = {{{4L,4L,(-1L),(-1L),4L,4L,(-1L)}},{{3L,(-5L),3L,(-5L),3L,(-5L),3L}},{{4L,(-1L),(-1L),4L,4L,(-1L),(-1L)}},{{(-9L),(-5L),(-9L),(-5L),(-9L),(-5L),(-9L)}}};
    uint8_t l_1218 = 1UL;
    const float *l_1246[4] = {&g_1052,&g_1052,&g_1052,&g_1052};
    uint32_t l_1315[10] = {0x2B3E4535L,0x2B3E4535L,0x2B3E4535L,0x2B3E4535L,0x2B3E4535L,0x2B3E4535L,0x2B3E4535L,0x2B3E4535L,0x2B3E4535L,0x2B3E4535L};
    int64_t l_1382 = 0x0060073859A5512ALL;
    uint32_t l_1409[7] = {0x6152C0AAL,0x6152C0AAL,0UL,0x6152C0AAL,0x6152C0AAL,0UL,0x6152C0AAL};
    uint16_t **l_1512 = &g_1508;
    uint32_t ***l_1514 = nullptr;
    uint32_t ****l_1513 = &l_1514;
    struct S0 *l_1522 = &g_1389;
    struct S0 **l_1521 = &l_1522;
    struct S0 ***l_1520 = &l_1521;
    struct S0 *l_1529 = &g_1389;
    struct S0 *l_1530 = nullptr;
    struct S0 *l_1531 = &g_1389;
    struct S0 *l_1532 = &g_1389;
    struct S0 *l_1533 = nullptr;
    struct S0 *l_1534 = &g_273;
    struct S0 *l_1535 = &g_1389;
    struct S0 *l_1536[6] = {nullptr,&g_273,&g_273,nullptr,&g_273,&g_273};
    struct S0 *l_1537 = &g_1389;
    struct S0 *l_1538 = &g_273;
    struct S0 *l_1539 = &g_273;
    struct S0 *l_1540[7][9][4] = {{{&g_273,&g_1389,&g_273,&g_1389},{&g_1389,&g_273,&g_1389,&g_273},{&g_273,nullptr,nullptr,&g_273},{&g_273,&g_273,nullptr,&g_1389},{&g_273,&g_1389,&g_1389,&g_273},{nullptr,&g_273,&g_1389,&g_273},{&g_273,&g_273,&g_1389,&g_273},{nullptr,&g_1389,&g_1389,&g_273},{nullptr,&g_273,nullptr,&g_273}},{{&g_1389,&g_1389,&g_1389,&g_273},{&g_1389,&g_1389,&g_1389,&g_273},{&g_273,&g_273,&g_273,nullptr},{&g_273,&g_273,&g_1389,&g_1389},{&g_273,&g_1389,&g_1389,&g_1389},{&g_273,&g_1389,&g_273,&g_1389},{&g_1389,&g_1389,&g_273,&g_273},{&g_273,&g_273,&g_273,&g_1389},{&g_273,&g_273,&g_1389,&g_1389}},{{&g_1389,&g_273,&g_273,&g_273},{&g_273,nullptr,nullptr,&g_273},{&g_273,&g_1389,&g_1389,&g_1389},{&g_273,&g_273,&g_1389,&g_273},{&g_273,&g_273,&g_1389,&g_273},{&g_273,&g_273,&g_273,&g_273},{&g_273,nullptr,&g_1389,&g_273},{&g_273,&g_273,&g_273,&g_1389},{&g_1389,&g_1389,&g_273,&g_273}},{{&g_273,&g_273,&g_1389,&g_273},{&g_1389,&g_273,&g_1389,nullptr},{&g_1389,&g_1389,&g_1389,&g_273},{&g_273,&g_1389,&g_1389,&g_1389},{nullptr,&g_273,&g_1389,&g_1389},{&g_273,&g_1389,&g_1389,&g_273},{&g_1389,nullptr,&g_1389,&g_1389},{&g_1389,&g_1389,&g_1389,&g_1389},{&g_273,&g_1389,&g_273,&g_273}},{{&g_1389,&g_273,&g_273,&g_273},{&g_273,&g_1389,&g_1389,&g_1389},{&g_273,&g_1389,&g_273,&g_1389},{&g_273,&g_1389,&g_1389,&g_1389},{&g_273,&g_1389,&g_1389,&g_273},{&g_273,&g_273,&g_1389,&g_1389},{&g_273,&g_1389,&g_273,&g_1389},{&g_273,&g_1389,&g_273,&g_1389},{&g_273,&g_1389,&g_273,&g_273}},{{&g_273,&g_1389,nullptr,nullptr},{nullptr,&g_273,&g_1389,&g_273},{&g_1389,&g_1389,&g_1389,nullptr},{&g_273,&g_273,&g_273,&g_1389},{&g_1389,nullptr,nullptr,&g_273},{&g_273,&g_273,&g_273,nullptr},{&g_1389,&g_273,&g_1389,&g_273},{&g_273,&g_273,&g_1389,&g_1389},{&g_273,&g_1389,&g_273,&g_1389}},{{&g_1389,&g_273,&g_1389,&g_1389},{&g_273,nullptr,&g_273,&g_273},{&g_1389,nullptr,&g_1389,&g_1389},{&g_273,&g_273,&g_1389,&g_273},{&g_273,&g_1389,&g_1389,&g_273},{&g_1389,&g_1389,&g_273,&g_1389},{&g_273,&g_1389,nullptr,&g_273},{&g_1389,&g_1389,&g_1389,&g_273},{&g_1389,&g_273,&g_1389,&g_1389}}};
    struct S0 ** const l_1528[10][6] = {{&l_1537,&l_1539,nullptr,&l_1537,nullptr,&l_1539},{&l_1530,&l_1539,&l_1531,&l_1530,nullptr,nullptr},{&l_1534,&l_1539,&l_1539,&l_1534,nullptr,&l_1531},{&l_1537,&l_1533,&l_1540[3][6][1],&l_1531,&l_1540[3][6][1],&l_1533},{nullptr,&l_1533,&l_1536[1],nullptr,&l_1540[3][6][1],&l_1540[3][6][1]},{&l_1539,&l_1533,&l_1533,&l_1539,&l_1540[3][6][1],&l_1536[1]},{&l_1531,&l_1533,&l_1540[3][6][1],&l_1531,&l_1540[3][6][1],&l_1533},{nullptr,&l_1533,&l_1536[1],nullptr,&l_1540[3][6][1],&l_1540[3][6][1]},{&l_1539,&l_1533,&l_1533,&l_1539,&l_1540[3][6][1],&l_1536[1]},{&l_1531,&l_1533,&l_1540[3][6][1],&l_1531,&l_1540[3][6][1],&l_1533}};
    struct S0 ** const *l_1527 = &l_1528[9][3];
    struct S0 ** const **l_1541 = &l_1527;
    struct S0 ***l_1542 = &l_1521;
    struct S1 l_1549 = {-2,640,7,18446744073709551615UL,22059,0xF9991766L,2433};
    uint32_t l_1554 = 0x6DD8BE44L;
    int32_t l_1555 = 0xA672E464L;
    uint32_t l_1556 = 0x91C8A333L;
    int32_t *l_1557 = nullptr;
    int32_t *l_1558 = nullptr;
    int32_t *l_1559 = &g_1389.f6;
    int32_t **l_1561 = &g_221[7];
    int i, j, k;
    for (g_544 = 21; (g_544 >= (-25)); g_544 = safe_sub_func_int32_t_s_s(g_544, 2))
    { /* block id: 461 */
        uint16_t l_1132 = 65535UL;
        uint16_t *l_1137[10] = {&g_97[0],&g_1018[0],&g_97[0],&g_97[0],&g_97[0],&g_97[0],&g_1018[0],&g_97[0],&g_97[0],&g_97[0]};
        float l_1141 = 0x2.0AE337p-65;
        uint32_t *l_1147 = nullptr;
        int32_t l_1148 = 0xB5479668L;
        int32_t l_1182 = 0x6689E4B4L;
        int32_t l_1209 = 0x2CDAB9D0L;
        int32_t l_1210 = 0L;
        int16_t l_1211 = (-1L);
        int32_t l_1212 = 0xCD7C765AL;
        int32_t l_1213 = 0x9D388C97L;
        int32_t l_1215 = 0xC0794831L;
        int32_t l_1217[7][3] = {{0xC4F91494L,0xE4E9C3A7L,0xC4F91494L},{0x51116DE7L,9L,0x51116DE7L},{0xC4F91494L,0xE4E9C3A7L,0xC4F91494L},{0x51116DE7L,9L,0x51116DE7L},{0xC4F91494L,0xE4E9C3A7L,0xC4F91494L},{0x51116DE7L,9L,0x51116DE7L},{0xC4F91494L,0xE4E9C3A7L,0xC4F91494L}};
        struct S1 l_1229 = {-1,-2003,4,18446744073709551615UL,19911,0UL,16534};
        int32_t *l_1283 = &l_1148;
        int32_t * volatile l_1345[7] = {&g_1347,nullptr,&g_1347,&g_1347,nullptr,&g_1347,&g_1347};
        uint32_t ***l_1371 = nullptr;
        uint32_t ****l_1370 = &l_1371;
        float ** const * const *l_1403 = nullptr;
        struct S1 * const l_1428[9][6][4] = {{{nullptr,nullptr,&g_1473[4],nullptr},{&g_1490,&g_1481,nullptr,&g_1485},{&g_1477,&g_1438[0],&g_1449[6][5],&g_1444},{nullptr,nullptr,&g_1446,&g_1475},{nullptr,&g_1434[5],&g_1449[6][5],nullptr},{&g_1477,&g_1475,nullptr,&g_1492[1]}},{{&g_1490,&g_1459,&g_1473[4],&g_1475},{nullptr,&g_1444,&g_1498,nullptr},{&g_1468,&g_1438[0],nullptr,&g_1465},{&g_1432,&g_1438[0],&g_1494,nullptr},{nullptr,&g_1444,&g_1468,&g_1475},{&g_1449[6][5],&g_1459,&g_1449[6][5],&g_1492[1]}},{{&g_1432,&g_1475,&g_1436,nullptr},{&g_1490,&g_1434[5],&g_1498,&g_1475},{nullptr,nullptr,&g_1498,&g_1444},{&g_1490,&g_1438[0],&g_1436,&g_1485},{&g_1432,&g_1481,&g_1449[6][5],nullptr},{&g_1449[6][5],nullptr,&g_1468,&g_1455}},{{nullptr,&g_1459,&g_1494,nullptr},{&g_1432,&g_1455,nullptr,nullptr},{&g_1468,&g_1459,&g_1498,&g_1455},{nullptr,nullptr,&g_1473[4],nullptr},{&g_1490,&g_1481,nullptr,&g_1485},{&g_1477,&g_1438[0],&g_1449[6][5],&g_1444}},{{nullptr,nullptr,&g_1446,&g_1475},{nullptr,&g_1434[5],&g_1449[6][5],nullptr},{&g_1477,&g_1475,nullptr,&g_1492[1]},{&g_1490,&g_1459,&g_1473[4],&g_1492[1]},{nullptr,&g_1461,&g_1446,&g_1481},{&g_1483,&g_1455,&g_1473[4],&g_1479}},{{&g_1449[6][5],&g_1455,nullptr,&g_1481},{nullptr,&g_1461,&g_1483,&g_1492[1]},{&g_1466,&g_1471,&g_1466,&g_1441},{&g_1449[6][5],&g_1492[1],&g_1453,&g_1465},{&g_1440,&g_1451,&g_1446,&g_1492[1]},{&g_1436,&g_1481,&g_1446,&g_1461}},{{&g_1440,&g_1455,&g_1453,&g_1434[5]},{&g_1449[6][5],&g_1430,&g_1466,&g_1481},{&g_1466,&g_1481,&g_1483,nullptr},{nullptr,&g_1471,nullptr,&g_1465},{&g_1449[6][5],nullptr,&g_1473[4],&g_1465},{&g_1483,&g_1471,&g_1446,nullptr}},{{nullptr,&g_1481,&g_1490,&g_1481},{&g_1440,&g_1430,&g_1473[4],&g_1434[5]},{&g_1494,&g_1455,&g_1466,&g_1461},{nullptr,&g_1481,&g_1463,&g_1492[1]},{nullptr,&g_1451,&g_1466,&g_1465},{&g_1494,&g_1492[1],&g_1473[4],&g_1441}},{{&g_1440,&g_1471,&g_1490,&g_1492[1]},{nullptr,&g_1461,&g_1446,&g_1481},{&g_1483,&g_1455,&g_1473[4],&g_1479},{&g_1449[6][5],&g_1455,nullptr,&g_1481},{nullptr,&g_1461,&g_1483,&g_1492[1]},{&g_1466,&g_1471,&g_1466,&g_1441}}};
        struct S1 * const *l_1427 = &l_1428[1][4][1];
        int32_t l_1515 = 0x889F0110L;
        int i, j, k;
        if ((safe_lshift_func_uint8_t_u_u(((0xB0L ^ l_1132) ^ (p_22.f3 && (l_1148 = (0UL && (((p_22.f5 &= (safe_div_func_uint16_t_u_u((l_1138 &= p_22.f4), (safe_mul_func_int16_t_s_s((((*g_817) , 0x49D6E8F3L) ^ (((safe_mod_func_int32_t_s_s((safe_lshift_func_uint16_t_u_u(g_497, p_22.f0)), l_1132)) <= (-5L)) ^ l_1146)), 0x5DF9L))))) & p_25) && 5UL))))), l_1149)))
        { /* block id: 465 */
            int8_t * const l_1161 = &g_1162;
            int8_t * const *l_1160 = &l_1161;
            int8_t * const **l_1159[8][6][2] = {{{&l_1160,&l_1160},{&l_1160,&l_1160},{nullptr,nullptr},{&l_1160,&l_1160},{&l_1160,&l_1160},{&l_1160,nullptr}},{{nullptr,&l_1160},{&l_1160,&l_1160},{&l_1160,&l_1160},{nullptr,nullptr},{&l_1160,&l_1160},{&l_1160,&l_1160}},{{&l_1160,nullptr},{nullptr,&l_1160},{&l_1160,&l_1160},{&l_1160,&l_1160},{nullptr,nullptr},{&l_1160,&l_1160}},{{&l_1160,&l_1160},{&l_1160,nullptr},{nullptr,&l_1160},{&l_1160,&l_1160},{&l_1160,&l_1160},{nullptr,nullptr}},{{&l_1160,&l_1160},{&l_1160,&l_1160},{&l_1160,nullptr},{nullptr,&l_1160},{&l_1160,&l_1160},{&l_1160,&l_1160}},{{nullptr,nullptr},{&l_1160,&l_1160},{&l_1160,&l_1160},{&l_1160,nullptr},{nullptr,&l_1160},{&l_1160,&l_1160}},{{&l_1160,&l_1160},{nullptr,nullptr},{&l_1160,&l_1160},{&l_1160,&l_1160},{&l_1160,nullptr},{nullptr,&l_1160}},{{&l_1160,&l_1160},{&l_1160,&l_1160},{nullptr,nullptr},{&l_1160,&l_1160},{&l_1160,&l_1160},{&l_1160,nullptr}}};
            int8_t * const ***l_1158 = &l_1159[6][5][0];
            int8_t * const ****l_1157 = &l_1158;
            struct S0 l_1167 = {0x20EBFBE7L,0xA1L,0xDFBB0DA2L,0xCAL,0x59769B1FL,19,0x5F17E8E8L};
            int16_t l_1169[6] = {0xB50BL,0xB50BL,0xB50BL,0xB50BL,0xB50BL,0xB50BL};
            int32_t *l_1170 = &l_1146;
            uint8_t l_1171 = 1UL;
            uint16_t l_1183[4] = {0xE011L,0xE011L,0xE011L,0xE011L};
            uint32_t l_1195[10];
            int32_t *l_1198 = &l_1182;
            int32_t *l_1199 = &l_1182;
            int32_t *l_1200 = nullptr;
            int32_t *l_1201 = &g_273.f6;
            int32_t *l_1202 = &g_113;
            int32_t *l_1203 = &l_1138;
            int32_t *l_1204 = &g_113;
            int32_t *l_1205 = &l_1182;
            int32_t *l_1206 = &g_113;
            int32_t *l_1207[7] = {nullptr,nullptr,nullptr,nullptr,nullptr,nullptr,nullptr};
            uint64_t *l_1222 = &g_4[2][1];
            struct S1 l_1239[2] = {{1,651,1,5UL,17136,5UL,19714},{1,651,1,5UL,17136,5UL,19714}};
            const int32_t l_1247 = (-4L);
            int i, j, k;
            for (i = 0; i < 10; i++)
                l_1195[i] = 8UL;
            for (g_126 = 0; (g_126 <= 9); g_126 += 1)
            { /* block id: 468 */
                int8_t * const ****l_1156 = nullptr;
                const int32_t l_1166 = (-1L);
                int32_t *l_1168 = &l_1167.f0;
                struct S0 *l_1172[7][8][4] = {{{&l_1167,&g_273,nullptr,&g_273},{&l_1167,nullptr,nullptr,&g_273},{nullptr,&l_1167,&l_1167,&l_1167},{nullptr,nullptr,nullptr,&l_1167},{&l_1167,&l_1167,nullptr,nullptr},{&l_1167,&l_1167,&l_1167,nullptr},{&g_273,&l_1167,&g_273,nullptr},{&l_1167,&l_1167,&g_273,&l_1167}},{{&l_1167,nullptr,&l_1167,&l_1167},{&g_273,&l_1167,&l_1167,&g_273},{&l_1167,nullptr,&g_273,&g_273},{&l_1167,&g_273,&g_273,nullptr},{&g_273,nullptr,&l_1167,nullptr},{&l_1167,&g_273,nullptr,&g_273},{&l_1167,nullptr,nullptr,&g_273},{nullptr,&l_1167,&l_1167,&l_1167}},{{nullptr,nullptr,nullptr,&l_1167},{&l_1167,&l_1167,nullptr,nullptr},{&l_1167,&l_1167,&l_1167,nullptr},{&g_273,&l_1167,&g_273,nullptr},{&l_1167,&l_1167,&g_273,&l_1167},{&l_1167,nullptr,&l_1167,&l_1167},{&g_273,&l_1167,&l_1167,&g_273},{&l_1167,nullptr,&g_273,&g_273}},{{&l_1167,&g_273,&g_273,nullptr},{&g_273,nullptr,&l_1167,nullptr},{&l_1167,&g_273,nullptr,&g_273},{&l_1167,nullptr,nullptr,&g_273},{nullptr,&l_1167,&l_1167,&l_1167},{nullptr,nullptr,nullptr,&l_1167},{&l_1167,&l_1167,nullptr,nullptr},{&l_1167,&l_1167,&l_1167,nullptr}},{{&g_273,&l_1167,&g_273,nullptr},{&l_1167,&l_1167,&g_273,&l_1167},{&l_1167,nullptr,&l_1167,&l_1167},{&g_273,&l_1167,&l_1167,&g_273},{&l_1167,nullptr,&g_273,&g_273},{&l_1167,&g_273,&g_273,nullptr},{&g_273,nullptr,&l_1167,nullptr},{&l_1167,&g_273,nullptr,&g_273}},{{&l_1167,nullptr,&l_1167,nullptr},{nullptr,&g_273,&l_1167,&l_1167},{nullptr,nullptr,&l_1167,nullptr},{&g_273,&l_1167,nullptr,&g_273},{&g_273,&l_1167,&l_1167,nullptr},{&l_1167,&l_1167,&l_1167,&g_273},{&l_1167,&l_1167,&l_1167,nullptr},{nullptr,nullptr,&g_273,&l_1167}},{{nullptr,&g_273,&g_273,nullptr},{nullptr,&g_273,&l_1167,&l_1167},{&l_1167,&g_273,&l_1167,&l_1167},{&l_1167,&l_1167,&l_1167,&l_1167},{&g_273,&g_273,nullptr,&l_1167},{&g_273,&g_273,&l_1167,nullptr},{nullptr,&g_273,&l_1167,&l_1167},{nullptr,nullptr,&l_1167,nullptr}}};
                int32_t l_1181[5][8] = {{(-10L),(-10L),1L,1L,(-10L),(-10L),1L,1L},{(-10L),(-10L),1L,1L,(-10L),(-10L),1L,1L},{(-10L),(-10L),1L,1L,(-10L),(-10L),1L,1L},{(-10L),(-10L),1L,1L,(-10L),(-10L),1L,1L},{(-10L),(-10L),1L,1L,(-10L),(-10L),1L,1L}};
                int32_t *l_1186 = nullptr;
                int32_t *l_1187 = &g_43;
                int32_t *l_1188 = &l_1182;
                int32_t *l_1189 = &l_1148;
                int32_t *l_1190 = &l_1148;
                int32_t *l_1191 = &l_1148;
                int32_t *l_1192 = &l_1148;
                int32_t *l_1193 = nullptr;
                int32_t *l_1194[4][2][9] = {{{nullptr,&l_1181[4][4],&l_1138,&l_1167.f6,&g_113,&l_1167.f0,nullptr,&l_1138,&l_1138},{&l_1167.f6,&l_1181[4][4],&g_113,&g_273.f0,&g_113,&l_1181[4][4],&l_1167.f6,&l_1138,&l_1181[2][3]}},{{&g_273.f0,&l_1181[4][4],&l_1181[0][3],nullptr,&g_113,&l_1181[0][6],&g_273.f0,&l_1138,&g_1020},{nullptr,&l_1181[4][4],&l_1138,&l_1167.f6,&g_113,&l_1167.f0,nullptr,&l_1138,&l_1138}},{{&l_1167.f6,&l_1181[4][4],&g_113,&g_273.f0,&g_113,&l_1181[4][4],&l_1167.f6,&l_1138,&l_1181[2][3]},{&g_273.f0,&l_1181[4][4],&l_1181[0][3],nullptr,&g_113,&l_1181[0][6],&g_273.f0,&l_1138,&g_1020}},{{nullptr,&l_1181[4][4],&l_1138,&l_1167.f6,&g_113,&l_1167.f0,nullptr,&l_1138,&l_1138},{&l_1167.f6,&l_1181[4][4],&g_113,&g_273.f0,&g_113,&l_1181[4][4],&l_1167.f6,&l_1138,&l_1181[2][3]}}};
                int i, j, k;
                p_22 = func_30((safe_add_func_uint64_t_u_u(((g_254 & ((safe_div_func_int16_t_s_s(((safe_mod_func_int64_t_s_s((((l_1149 >= (((l_1156 != (((**g_981) == 0x9.943A38p+13) , l_1157)) , (((+((safe_mod_func_int16_t_s_s((func_30(g_263, func_35(l_1166, (**g_481), g_828.f4, l_1167), l_1168, (*l_1168)) , (**g_816)), 0xCC50L)) && l_1138)) < (-7L)) == l_1169[1])) & (*l_1168))) == l_1132) >= l_1138), p_22.f5)) > g_254), 0x8EDDL)) == 0UL)) >= g_242.f0), 0xED3A73B500427FF2LL)), l_1170, l_1168, l_1171);
                for (l_1132 = 1; (l_1132 <= 5); l_1132 += 1)
                { /* block id: 472 */
                    int32_t *l_1173 = nullptr;
                    int32_t *l_1174 = &l_1148;
                    int32_t *l_1175 = &l_1167.f0;
                    int32_t *l_1176 = &l_1146;
                    int32_t *l_1177 = &l_1138;
                    int32_t *l_1178 = nullptr;
                    int32_t *l_1179 = &g_273.f6;
                    int32_t *l_1180[2][6] = {{&l_1148,&l_1148,&l_1148,&l_1148,&l_1148,&l_1148},{&l_1148,&l_1148,&l_1148,&l_1148,&l_1148,&l_1148}};
                    int i, j;
                    l_1183[1]--;
                    return &g_43;
                }
                l_1195[1]--;
                (*g_215) = ((**g_981) == 0xB.A15B12p-78);
            }
            ++l_1218;
            if ((p_22.f4 >= ((!(0xB26CD41E0FCF1730LL ^ ((*l_1222)++))) > (safe_div_func_int32_t_s_s(((((safe_add_func_uint64_t_u_u(l_1213, (((*g_780) = l_1229) , ((l_1229.f3 ^ (p_25 >= l_1217[0][0])) , (((safe_lshift_func_uint8_t_u_u((*g_244), 7)) || ((((++g_1018[2]) , (((safe_sub_func_int16_t_s_s((safe_lshift_func_uint16_t_u_u((((((**g_826) , p_22.f6) || l_1214[5][5]) | 0x1DL) && 1L), p_22.f1)), 65535UL)) ^ 0x87L) != (**g_816))) != p_22.f6) , 0x94D0L)) ^ p_22.f6))))) > 7UL) < 0x7C97L) & 0xF3L), 1L)))))
            { /* block id: 483 */
                if (l_1217[6][0])
                    break;
                (*g_780) = l_1239[0];
            }
            else
            { /* block id: 486 */
                uint8_t *l_1244 = &g_273.f1;
                uint8_t *l_1245 = &l_1171;
                int32_t *l_1248 = &l_1167.f6;
                (*l_1248) |= ((l_1138 &= (0x9AL > (((safe_add_func_uint64_t_u_u(g_242.f2, 0xD4CB26EF3970022BLL)) >= (safe_mod_func_uint8_t_u_u(((*l_1244) = g_242.f0), 1L))) == (((*l_1245) = ((&g_99 == nullptr) , 249UL)) == (nullptr != l_1246[1]))))) , l_1247);
            }
        }
        else
        { /* block id: 492 */
            uint32_t l_1259 = 0x43A65BA2L;
            uint8_t *l_1266 = nullptr;
            uint8_t *l_1267[2][1];
            int8_t *l_1281 = &g_495;
            uint32_t *l_1282[2];
            int32_t *l_1285 = &l_1212;
            int32_t l_1309[2];
            int64_t *l_1325 = &l_1216[0][0][1];
            uint32_t *l_1341 = &g_126;
            uint32_t l_1386 = 0xBE885E94L;
            int i, j;
            for (i = 0; i < 2; i++)
            {
                for (j = 0; j < 1; j++)
                    l_1267[i][j] = &g_273.f3;
            }
            for (i = 0; i < 2; i++)
                l_1282[i] = &l_1229.f3;
            for (i = 0; i < 2; i++)
                l_1309[i] = 0xD4977704L;
            for (l_1215 = 18; (l_1215 > (-8)); l_1215 = safe_sub_func_uint8_t_u_u(l_1215, 9))
            { /* block id: 495 */
                int32_t *l_1251 = &l_1210;
                int32_t *l_1252 = &l_1138;
                int32_t *l_1253 = &l_1213;
                int32_t *l_1254 = &l_1217[4][0];
                int32_t *l_1255 = &l_1214[5][5];
                int32_t *l_1256 = &l_1214[6][6];
                int32_t *l_1257 = &l_1148;
                int32_t *l_1258[8][5][3] = {{{&l_1215,&l_1213,&g_273.f0},{&l_1210,&l_1138,&l_1217[1][1]},{&l_1210,&l_1217[4][0],&g_273.f0},{nullptr,&l_1209,&l_1210},{&l_1210,&l_1217[4][0],nullptr}},{{&g_113,nullptr,&l_1210},{&l_1213,nullptr,&g_273.f0},{&l_1146,&l_1148,&l_1217[1][1]},{&g_113,nullptr,&g_273.f6},{&l_1217[4][0],&l_1217[4][0],nullptr}},{{&l_1209,&l_1213,nullptr},{&l_1213,nullptr,nullptr},{&l_1209,&l_1209,nullptr},{&l_1209,&l_1209,&l_1215},{&l_1146,nullptr,&l_1210}},{{&l_1138,&l_1213,&g_1020},{nullptr,&l_1217[4][0],nullptr},{nullptr,nullptr,nullptr},{nullptr,&l_1148,nullptr},{&l_1148,nullptr,&l_1209}},{{&l_1148,nullptr,nullptr},{&l_1146,&l_1217[4][0],nullptr},{&l_1148,&l_1209,&l_1209},{&l_1148,&l_1217[4][0],&g_113},{nullptr,&l_1138,&l_1213}},{{nullptr,&l_1209,nullptr},{nullptr,nullptr,&l_1215},{&l_1138,&l_1215,&l_1148},{&l_1146,&l_1210,&g_43},{&l_1209,&l_1148,&g_43}},{{&l_1209,&l_1217[4][0],&l_1148},{&l_1213,&g_113,&l_1215},{&l_1209,&g_113,nullptr},{&l_1217[4][0],&l_1213,&l_1213},{&g_113,&l_1210,&g_113}},{{&l_1146,&l_1217[4][0],&l_1209},{&l_1213,&l_1138,nullptr},{&g_113,&l_1217[4][0],nullptr},{&l_1210,&l_1138,&l_1209},{nullptr,&l_1217[4][0],nullptr}}};
                int i, j, k;
                ++l_1259;
            }
            if (p_22.f5)
                continue;
            if ((l_1132 | ((g_542 , (safe_add_func_int16_t_s_s((safe_mod_func_int16_t_s_s((((p_22.f1--) < ((((((safe_mul_func_int8_t_s_s(((*g_488) ^= (safe_lshift_func_int8_t_s_u((~(*g_489)), 5))), 0xA1L)) > (p_25 & (((p_22.f2 = (g_242.f3 ^= ((l_1214[5][5] & (6L >= (((safe_mod_func_int8_t_s_s(((*l_1281) = ((safe_rshift_func_uint8_t_u_u(p_22.f2, (((safe_rshift_func_int16_t_s_s((*g_817), l_1216[1][0][6])) & 0x274204B181291CDELL) , l_1259))) < p_24)), 0x2AL)) == 8L) , g_273.f1))) | 248UL))) , (-1L)) , p_25))) || p_25) > p_22.f5) > g_152) , l_1218)) && l_1259), p_22.f3)), l_1259))) <= l_1259)))
            { /* block id: 504 */
                int32_t *l_1284 = &l_1212;
                return &g_1020;
            }
            else
            { /* block id: 506 */
                int8_t l_1286 = 0xA8L;
                uint64_t *l_1298 = &g_7[0];
                uint64_t *l_1299 = &g_4[6][2];
                int32_t l_1312 = (-5L);
                int32_t l_1313 = (-6L);
                int32_t l_1314 = (-1L);
                if (l_1286)
                    break;
                if ((safe_mod_func_uint8_t_u_u((((((safe_add_func_int64_t_s_s((((((**g_816) < (0x2500809BL <= (!l_1286))) > (*l_1283)) , ((*l_1299) = ((*l_1298) = (safe_lshift_func_int16_t_s_s(l_1286, 3))))) & ((p_22.f5 = (g_273.f5 | ((0xB292L && ((safe_div_func_int64_t_s_s(g_828.f1, 18446744073709551610UL)) ^ (*l_1283))) <= p_22.f4))) == p_24)), 1UL)) >= p_22.f3) <= 5L) | g_378) && 7L), l_1286)))
                { /* block id: 511 */
                    const int32_t *l_1303 = &g_828.f0;
                    const int32_t **l_1302 = &l_1303;
                    int32_t l_1310 = (-1L);
                    int32_t l_1311 = 1L;
                    (*l_1302) = &p_24;
                    for (p_22.f6 = 0; (p_22.f6 <= 1); p_22.f6 += 1)
                    { /* block id: 515 */
                        int32_t *l_1304 = &l_1148;
                        int32_t *l_1305 = nullptr;
                        int32_t *l_1306 = nullptr;
                        int32_t *l_1307 = &l_1209;
                        int32_t *l_1308[8] = {&g_273.f0,&g_273.f0,&g_273.f0,&g_273.f0,&g_273.f0,&g_273.f0,&g_273.f0,&g_273.f0};
                        int i, j;
                        l_1315[0]--;
                        if (g_463[(p_22.f6 + 7)][p_22.f6])
                            break;
                    }
                }
                else
                { /* block id: 519 */
                    uint64_t l_1329[5] = {18446744073709551606UL,18446744073709551606UL,18446744073709551606UL,18446744073709551606UL,18446744073709551606UL};
                    int i;
                    for (l_1210 = 11; (l_1210 >= 23); ++l_1210)
                    { /* block id: 522 */
                        int64_t *l_1326 = nullptr;
                        (*l_1285) ^= ((((g_1018[0] >= (~((+(safe_div_func_uint64_t_u_u((p_22.f5 >= p_22.f4), ((safe_unary_minus_func_int64_t_s((l_1325 != ((nullptr != l_1325) , l_1326)))) ^ ((6L ^ 0L) | 0L))))) < 6L))) || 0xADBCL) < p_22.f1) ^ p_22.f0);
                        (*l_1285) &= ((p_22.f1 = (p_22.f3++)) & (l_1214[6][3] != l_1329[4]));
                    }
                }
            }
            for (g_273.f0 = 0; (g_273.f0 >= (-9)); g_273.f0--)
            { /* block id: 532 */
                float l_1342[10] = {0xD.3F2147p+22,0x9.4E0122p+67,0xD.3F2147p+22,0x0.9p-1,0x0.9p-1,0xD.3F2147p+22,0x9.4E0122p+67,0xD.3F2147p+22,0x0.9p-1,0x0.9p-1};
                int32_t l_1343 = 0xFA063DB6L;
                int32_t * volatile *l_1344[10] = {&g_111,&g_111,&g_111,&g_111,&g_111,&g_111,&g_111,&g_111,&g_111,&g_111};
                uint32_t ***l_1369 = &g_864;
                uint32_t ****l_1368[9] = {&l_1369,&l_1369,&l_1369,&l_1369,&l_1369,&l_1369,&l_1369,&l_1369,&l_1369};
                int i;
                l_1345[6] = ((g_95.f0 || ((((4294967293UL <= (safe_lshift_func_int8_t_s_u(1L, (((*l_1325) &= p_23) , g_273.f4)))) == (safe_sub_func_int32_t_s_s((safe_rshift_func_int16_t_s_u(((**g_816) = (p_22 , ((g_1340 & (((((l_1341 = &g_254) != &l_1149) >= p_22.f1) ^ (-2L)) <= (*l_1283))) < l_1343))), 3)), 4UL))) | (*l_1283)) > 18446744073709551615UL)) , (*g_110));
                for (g_126 = 0; (g_126 <= 29); g_126 = safe_add_func_uint8_t_u_u(g_126, 1))
                { /* block id: 539 */
                    uint8_t l_1361[4][6][8] = {{{0UL,0xE4L,0x03L,0xE0L,4UL,255UL,0UL,4UL},{0UL,0xD5L,0x53L,0UL,0UL,0xEEL,0xFCL,0x9DL},{4UL,0x75L,5UL,1UL,0xD5L,0xB0L,7UL,0UL},{0x32L,0UL,1UL,0x75L,0xFCL,5UL,0UL,3UL},{0xE0L,4UL,0xA0L,0xFCL,0x03L,0UL,5UL,5UL},{0xA1L,0x69L,8UL,8UL,0x69L,0xA1L,0x85L,0x03L}},{{0x03L,0xF5L,0UL,0x39L,0xEEL,254UL,0UL,0UL},{3UL,255UL,0xFCL,0x39L,1UL,0UL,3UL,0x03L},{0x53L,1UL,255UL,8UL,0xFCL,255UL,0x61L,5UL},{0x39L,0x13L,0UL,0xFCL,254UL,0UL,7UL,254UL},{0x69L,0x39L,0UL,5UL,1UL,0x9DL,4UL,1UL},{0UL,0UL,0xEBL,0x13L,5UL,0x13L,0xEBL,0UL}},{{0x03L,254UL,0xF5L,0x49L,0x53L,0UL,1UL,0xEBL},{0UL,7UL,0x32L,1UL,0x03L,1UL,1UL,0xFCL},{0UL,1UL,0xF5L,0UL,4UL,1UL,0xEBL,3UL},{4UL,1UL,0xEBL,3UL,255UL,254UL,4UL,0UL},{255UL,1UL,0UL,0xE4L,0xB0L,0x75L,7UL,0xFCL},{0x85L,0x69L,0UL,0UL,0x5DL,0x61L,0x61L,0x5DL}},{{0x49L,255UL,255UL,0x49L,0x61L,0UL,3UL,0xA1L},{255UL,5UL,0xFCL,7UL,4UL,1UL,0UL,1UL},{8UL,5UL,0UL,0xEEL,4UL,0UL,0x85L,0x39L},{1UL,255UL,8UL,0xFCL,255UL,0x61L,5UL,0xEEL},{0UL,0x69L,0xA0L,4UL,0x69L,0x75L,0x49L,0x03L},{255UL,1UL,0UL,254UL,5UL,254UL,0xA1L,1UL}}};
                    int32_t **l_1390 = &l_1283;
                    int i, j, k;
                }
            }
        }
        (*l_1283) &= ((*g_827) , ((nullptr == l_1427) & ((safe_sub_func_uint16_t_u_u(65526UL, (**g_816))) <= (*g_491))));
        if ((((g_7[8]--) , (g_1471.f3 < (safe_lshift_func_int8_t_s_u((safe_lshift_func_int16_t_s_s(p_24, (*g_817))), 7)))) == p_22.f5))
        { /* block id: 571 */
            uint16_t ***l_1509 = &g_1507[0][1];
            uint16_t **l_1511 = &g_1508;
            uint16_t ***l_1510[8][10] = {{&l_1511,&l_1511,&l_1511,&l_1511,&l_1511,&l_1511,&l_1511,&l_1511,&l_1511,&l_1511},{&l_1511,&l_1511,&l_1511,&l_1511,&l_1511,&l_1511,&l_1511,&l_1511,&l_1511,&l_1511},{&l_1511,&l_1511,&l_1511,&l_1511,&l_1511,&l_1511,&l_1511,&l_1511,&l_1511,&l_1511},{&l_1511,&l_1511,&l_1511,&l_1511,&l_1511,&l_1511,&l_1511,&l_1511,&l_1511,&l_1511},{&l_1511,&l_1511,&l_1511,&l_1511,&l_1511,&l_1511,&l_1511,&l_1511,&l_1511,&l_1511},{&l_1511,&l_1511,&l_1511,&l_1511,&l_1511,&l_1511,&l_1511,&l_1511,&l_1511,&l_1511},{&l_1511,&l_1511,&l_1511,&l_1511,&l_1511,&l_1511,&l_1511,&l_1511,&l_1511,&l_1511},{&l_1511,&l_1511,&l_1511,&l_1511,&l_1511,&l_1511,&l_1511,&l_1511,&l_1511,&l_1511}};
            int i, j;
            l_1512 = ((*l_1509) = g_1507[0][1]);
            if (l_1216[0][0][1])
                continue;
            (*l_1283) ^= p_22.f3;
            l_1513 = (p_22.f3 , l_1513);
        }
        else
        { /* block id: 577 */
            const int32_t *l_1517 = &g_828.f0;
            const int32_t **l_1516 = &l_1517;
            if (l_1515)
                break;
            (*l_1516) = &p_24;
        }
        for (g_1471.f5 = 0; (g_1471.f5 <= 8); g_1471.f5 += 1)
        { /* block id: 583 */
            return &g_1020;
        }
    }
    (*l_1559) |= (safe_div_func_int32_t_s_s((p_22.f4 != (nullptr != l_1520)), ((18446744073709551612UL | (safe_mod_func_int32_t_s_s((safe_rshift_func_int16_t_s_u(((((**g_816) |= (((*l_1541) = l_1527) == l_1542)) , ((safe_lshift_func_uint8_t_u_s((safe_lshift_func_int16_t_s_u(((((l_1555 &= ((safe_rshift_func_uint16_t_u_u(((**l_1512) &= l_1149), 1)) == (((**g_816) = (l_1549 , (safe_sub_func_int16_t_s_s((safe_mul_func_uint16_t_u_u(l_1554, l_1149)), (**g_816))))) & 0x0662L))) <= p_24) >= p_22.f2) <= p_25), 15)), l_1549.f2)) < p_22.f0)) == 5L), l_1556)), l_1554))) | l_1216[1][0][4])));
    (*l_1561) = g_1560;
    return &g_1346;
}


/* ------------------------------------------ */
/* 
 * reads : g_40 g_48 g_43 g_95 g_4 g_46 g_110 g_113 g_97 g_126 g_99 g_109 g_7 g_190 g_215 g_152 g_49 g_242 g_244 g_251 g_263 g_273 g_47 g_289 g_329 g_253 g_378 g_245 g_216 g_463 g_476 g_480 g_192 g_509 g_484 g_485 g_499 g_542 g_491 g_495 g_544 g_481 g_482 g_497 g_573 g_585 g_477 g_478 g_501 g_707 g_864 g_865 g_1018 g_1020 g_780 g_816 g_817 g_981 g_982 g_983
 * writes: g_48 g_97 g_99 g_46 g_113 g_126 g_152 g_190 g_192 g_7 g_43 g_221 g_251 g_253 g_254 g_263 g_242.f4 g_289 g_329 g_216 g_375 g_382 g_509 g_273 g_573 g_501 g_544 g_242.f6 g_1018 g_1020 g_865 g_1101
 */
static const int32_t * func_27(struct S0  p_28, int32_t * p_29)
{ /* block id: 15 */
    uint64_t l_1027[6] = {0UL,0UL,0UL,0UL,0UL,0UL};
    int16_t **l_1036 = &g_817;
    uint32_t l_1037 = 0xD387BC33L;
    uint64_t *l_1048 = &g_7[1];
    const float *l_1051[9] = {&g_1052,&g_1052,&g_1052,&g_1052,&g_1052,&g_1052,&g_1052,&g_1052,&g_1052};
    float *l_1053 = &g_382;
    struct S0 l_1056 = {-1L,2UL,18446744073709551615UL,0x93L,0x1A9C5620L,0,-10L};
    int8_t l_1065 = (-5L);
    uint64_t *l_1066 = &l_1027[2];
    int32_t *l_1067 = &g_273.f6;
    uint32_t *l_1099 = nullptr;
    const int32_t *l_1124 = &g_828.f6;
    int i;
    p_29 = func_58(g_40);
    (*p_29) = (safe_lshift_func_uint8_t_u_s((safe_add_func_uint32_t_u_u((safe_rshift_func_uint8_t_u_u((((*g_780) , nullptr) == nullptr), 2)), ((l_1027[1] && ((safe_sub_func_int16_t_s_s((safe_add_func_uint64_t_u_u((safe_mod_func_int16_t_s_s(l_1027[4], (((*g_244) >= (l_1027[1] <= (safe_mod_func_uint32_t_u_u(((*g_865) &= (nullptr != l_1036)), l_1037)))) , 2L))), 7UL)), l_1027[0])) > p_28.f6)) , 0xE548254BL))), 1));
    (*l_1067) &= (safe_lshift_func_int16_t_s_u((safe_sub_func_uint64_t_u_u((0x50B73683AA48E69DLL || (safe_div_func_int16_t_s_s(((safe_mul_func_int16_t_s_s((safe_add_func_int8_t_s_s((((*l_1066) = ((((*l_1048)--) < (l_1051[1] != l_1053)) || (safe_sub_func_uint64_t_u_u((((((((l_1056 , 0xA0E3L) & (safe_add_func_uint64_t_u_u((((safe_div_func_uint8_t_u_u((p_28.f6 >= ((p_28.f1 & ((*p_29) = ((safe_rshift_func_uint8_t_u_u(0UL, ((((safe_sub_func_int32_t_s_s(l_1056.f4, l_1056.f1)) ^ p_28.f2) > (**g_864)) <= l_1027[3]))) >= 0x23L))) <= g_1020)), l_1065)) || 0x19DDF423L) && (**g_816)), 0x983F381482E388CDLL))) == l_1056.f2) == p_28.f2) == 0xD2L) , 7L) == 251UL), g_48)))) ^ l_1056.f3), l_1056.f6)), l_1065)) == l_1037), 5L))), (-7L))), 11));
    for (p_28.f6 = 0; (p_28.f6 < 26); ++p_28.f6)
    { /* block id: 425 */
        uint32_t l_1087 = 0xEFD9E032L;
        uint64_t *l_1094 = &g_7[0];
        int32_t l_1106 = 0xA73891DDL;
        int32_t l_1107[8][8][1] = {{{0xE0BD09D3L},{0xB843FCD6L},{0xC35CE774L},{0L},{2L},{0xF792513DL},{0L},{0x969179E3L}},{{0xEB3A1D6AL},{0xF67FBB11L},{0xEB3A1D6AL},{0x969179E3L},{0L},{0xF792513DL},{2L},{0L}},{{0xC35CE774L},{0xB843FCD6L},{0xE0BD09D3L},{0x81727997L},{0x8F0485C6L},{0x81727997L},{0xE0BD09D3L},{0xB843FCD6L}},{{0xC35CE774L},{0L},{2L},{0xF792513DL},{0L},{0x969179E3L},{0xEB3A1D6AL},{0xF67FBB11L}},{{0xEB3A1D6AL},{0x969179E3L},{0L},{0xF792513DL},{2L},{0L},{0xC35CE774L},{0xB843FCD6L}},{{0xE0BD09D3L},{0x81727997L},{0x8F0485C6L},{0x81727997L},{0xE0BD09D3L},{0xB843FCD6L},{0xC35CE774L},{0L}},{{2L},{0xF792513DL},{0L},{0x969179E3L},{0xEB3A1D6AL},{0xF67FBB11L},{0xEB3A1D6AL},{0x969179E3L}},{{0L},{0xF792513DL},{2L},{0L},{0xC35CE774L},{0xB843FCD6L},{0xE0BD09D3L},{0x81727997L}}};
        uint32_t l_1108 = 4294967295UL;
        uint8_t l_1118 = 1UL;
        int i, j, k;
        for (g_1020 = 0; (g_1020 <= 13); ++g_1020)
        { /* block id: 428 */
            float l_1081 = (-0x1.Bp-1);
            int32_t l_1086 = 0x84F48451L;
            int32_t *l_1111 = &l_1107[3][5][0];
            int32_t *l_1112 = nullptr;
            int32_t *l_1113 = &g_113;
            int32_t *l_1114 = &l_1106;
            int32_t *l_1115 = nullptr;
            int32_t *l_1116 = &l_1056.f0;
            int32_t *l_1117[3];
            int i;
            for (i = 0; i < 3; i++)
                l_1117[i] = &l_1086;
            for (g_190 = 1; (g_190 <= 9); g_190 += 1)
            { /* block id: 431 */
                const uint64_t l_1080 = 0x9C497C696FB817FFLL;
                int32_t l_1105 = (-5L);
                for (l_1037 = 0; (l_1037 <= 2); l_1037 += 1)
                { /* block id: 434 */
                    int i;
                    if (g_1018[l_1037])
                    { /* block id: 435 */
                        uint32_t **l_1100[6][5][3] = {{{&l_1099,&l_1099,&l_1099},{&l_1099,&l_1099,&l_1099},{&l_1099,&l_1099,&l_1099},{&l_1099,&l_1099,&l_1099},{&l_1099,&l_1099,&l_1099}},{{&l_1099,&l_1099,&l_1099},{&l_1099,&l_1099,&l_1099},{&l_1099,&l_1099,&l_1099},{&l_1099,&l_1099,&l_1099},{&l_1099,&l_1099,&l_1099}},{{&l_1099,&l_1099,&l_1099},{&l_1099,&l_1099,&l_1099},{&l_1099,&l_1099,&l_1099},{&l_1099,&l_1099,&l_1099},{&l_1099,&l_1099,&l_1099}},{{&l_1099,&l_1099,&l_1099},{&l_1099,&l_1099,&l_1099},{&l_1099,&l_1099,&l_1099},{&l_1099,&l_1099,&l_1099},{&l_1099,&l_1099,&l_1099}},{{&l_1099,&l_1099,&l_1099},{&l_1099,&l_1099,&l_1099},{&l_1099,&l_1099,&l_1099},{&l_1099,&l_1099,&l_1099},{&l_1099,&l_1099,&l_1099}},{{&l_1099,&l_1099,&l_1099},{&l_1099,&l_1099,&l_1099},{&l_1099,&l_1099,&l_1099},{&l_1099,&l_1099,&l_1099},{&l_1099,&l_1099,&l_1099}}};
                        int i, j, k;
                        (*l_1053) = (safe_add_func_float_f_f(g_1018[l_1037], ((safe_add_func_float_f_f((safe_sub_func_float_f_f((safe_sub_func_float_f_f(l_1080, (((l_1081 < (safe_add_func_float_f_f(((g_1018[l_1037] >= (((((*g_215) = ((0x4.Bp+1 > ((**g_981) != (safe_div_func_float_f_f((((0x0.5p-1 != (p_28.f5 == (((((((p_28.f5 > l_1080) | g_192) > (-1L)) , (-0x2.Ap-1)) <= l_1086) != g_1018[l_1037]) == p_28.f4))) < l_1086) != g_1018[l_1037]), p_28.f2)))) >= l_1086)) < 0xF.782FEDp+67) < p_28.f0) <= l_1087)) > p_28.f4), 0xD.429655p+69))) > (-0x10.6p+1)) >= (-0x2.Fp+1)))), p_28.f6)), 0x1.2p-1)) != g_1018[0])));
                        (*g_215) = ((safe_sub_func_float_f_f(p_28.f6, ((safe_div_func_float_f_f(((safe_sub_func_float_f_f((l_1094 != nullptr), (*g_215))) > ((safe_mod_func_int64_t_s_s(((safe_lshift_func_uint16_t_u_u(g_97[0], 1)) >= (((*g_864) = &l_1087) == (g_1101 = l_1099))), g_501)) , (safe_add_func_float_f_f(((((0x1.501145p-13 >= p_28.f5) , (*g_982)) >= 0x1.7p-1) > (*g_215)), (*g_215))))), 0x4.8BA284p+1)) > p_28.f3))) >= 0x2.17E858p+78);
                    }
                    else
                    { /* block id: 441 */
                        int32_t *l_1104[10][9][2] = {{{&l_1086,&g_1020},{nullptr,&g_273.f0},{&g_273.f6,&l_1086},{&g_273.f6,&g_273.f6},{&l_1056.f0,nullptr},{&l_1056.f0,&g_273.f6},{&g_273.f6,&l_1086},{&g_273.f6,&g_273.f0},{nullptr,&g_1020}},{{&l_1086,&l_1056.f0},{&l_1056.f0,&l_1056.f0},{&l_1086,&g_1020},{nullptr,&g_273.f0},{&g_273.f6,&l_1086},{&g_273.f6,&g_273.f6},{&l_1056.f0,nullptr},{&l_1056.f0,&g_273.f6},{&g_273.f6,&l_1086}},{{&g_273.f6,&g_273.f0},{nullptr,&g_1020},{&l_1086,&l_1056.f0},{&l_1056.f0,&l_1056.f0},{&l_1086,&g_1020},{nullptr,&g_273.f0},{&g_273.f6,&l_1086},{&g_273.f6,&g_273.f6},{&l_1056.f0,nullptr}},{{&l_1056.f0,&g_273.f6},{&g_273.f6,&l_1086},{&g_273.f6,&g_273.f0},{nullptr,&g_1020},{&l_1086,&l_1056.f0},{&l_1056.f0,&l_1056.f0},{&l_1086,&g_1020},{nullptr,&g_273.f0},{&g_273.f6,&l_1086}},{{&g_273.f6,&g_273.f6},{&l_1056.f0,nullptr},{&l_1056.f0,&g_273.f6},{&g_273.f6,&l_1086},{&g_273.f6,&g_273.f0},{nullptr,&g_1020},{&l_1086,&l_1056.f0},{&l_1056.f0,&l_1056.f0},{&l_1086,&g_1020}},{{nullptr,&g_273.f0},{&g_273.f6,&l_1086},{&g_273.f6,&g_273.f6},{&l_1056.f0,nullptr},{&l_1056.f0,&g_273.f6},{&g_273.f6,&l_1086},{&g_273.f6,&g_273.f0},{nullptr,&g_1020},{&l_1086,&l_1056.f0}},{{&l_1056.f0,&l_1056.f0},{&l_1086,&g_1020},{nullptr,&g_273.f0},{&g_273.f6,&l_1086},{&g_273.f6,&g_273.f6},{&l_1056.f0,nullptr},{&l_1056.f0,&g_273.f6},{&g_273.f6,&l_1086},{&g_273.f6,&g_273.f0}},{{nullptr,&g_1020},{&l_1086,&l_1056.f0},{&l_1056.f0,&l_1056.f0},{&l_1086,&g_1020},{nullptr,&g_273.f0},{&g_273.f6,&l_1086},{&g_273.f6,&g_273.f6},{&l_1056.f0,nullptr},{&l_1056.f0,&g_273.f6}},{{&g_273.f6,&l_1086},{&g_273.f6,&g_273.f0},{nullptr,&g_1020},{&l_1086,&l_1056.f0},{&l_1056.f0,&l_1056.f0},{&l_1086,&g_1020},{nullptr,&g_273.f0},{&g_273.f6,&l_1086},{&g_273.f6,&g_273.f6}},{{&l_1056.f0,nullptr},{&g_1020,nullptr},{nullptr,&l_1056.f0},{nullptr,&g_273.f6},{&l_1056.f0,&l_1086},{&l_1056.f0,&l_1056.f0},{&l_1056.f0,&l_1056.f0},{&l_1056.f0,&l_1086},{&l_1056.f0,&g_273.f6}}};
                        int i, j, k;
                        l_1108--;
                    }
                }
            }
            ++l_1118;
            for (g_273.f2 = 0; (g_273.f2 == 26); g_273.f2 = safe_add_func_uint8_t_u_u(g_273.f2, 4))
            { /* block id: 449 */
                const int32_t *l_1123 = nullptr;
                return l_1123;
            }
        }
        if (l_1106)
            break;
        if ((*p_29))
            break;
    }
    return l_1124;
}


/* ------------------------------------------ */
/* 
 * reads : g_49 g_43
 * writes: g_49 g_43
 */
static struct S0  func_30(uint8_t  p_31, int32_t * p_32, int32_t * p_33, uint64_t  p_34)
{ /* block id: 7 */
    int32_t l_44 = 0xD1841160L;
    int32_t *l_45[5][8] = {{nullptr,&g_43,nullptr,&g_43,nullptr,&g_43,nullptr,&g_43},{nullptr,&g_43,nullptr,&g_43,nullptr,&g_43,nullptr,&g_43},{nullptr,&g_43,nullptr,&g_43,nullptr,&g_43,nullptr,&g_43},{nullptr,&g_43,nullptr,&g_43,nullptr,&g_43,nullptr,&g_43},{nullptr,&g_43,nullptr,&g_43,nullptr,&g_43,nullptr,&g_43}};
    struct S0 l_57 = {0xFE1997BDL,255UL,0xD1AE7A54L,0UL,0xFCC65C41L,17,-1L};
    int i, j;
    --g_49;
    for (g_43 = 0; (g_43 <= (-19)); g_43--)
    { /* block id: 11 */
        uint64_t l_54 = 4UL;
        ++l_54;
    }
    return l_57;
}


/* ------------------------------------------ */
/* 
 * reads :
 * writes:
 */
static int32_t * func_35(const uint16_t  p_36, int8_t  p_37, const uint64_t  p_38, struct S0  p_39)
{ /* block id: 4 */
    int32_t *l_42 = &g_43;
    l_42 = l_42;
    return l_42;
}


/* ------------------------------------------ */
/* 
 * reads : g_48 g_43 g_95 g_4 g_46 g_110 g_113 g_97 g_126 g_99 g_109 g_7 g_190 g_215 g_152 g_49 g_242 g_244 g_251 g_263 g_273 g_47 g_289 g_329 g_253 g_378 g_245 g_216 g_463 g_476 g_480 g_192 g_509 g_484 g_485 g_499 g_542 g_491 g_495 g_544 g_481 g_482 g_497 g_573 g_585 g_477 g_478 g_501 g_707 g_864 g_865 g_1018 g_1020
 * writes: g_48 g_97 g_99 g_46 g_113 g_126 g_152 g_190 g_192 g_7 g_43 g_221 g_251 g_253 g_254 g_263 g_242.f4 g_289 g_329 g_216 g_375 g_382 g_509 g_273 g_573 g_501 g_544 g_242.f6 g_1018 g_1020
 */
static int32_t * func_58(const float  p_59)
{ /* block id: 16 */
    int32_t *l_84 = &g_43;
    uint16_t *l_96 = &g_97[1];
    uint16_t *l_98 = &g_99;
    int32_t l_693 = 0x97457613L;
    const int32_t l_694 = 3L;
    int32_t *l_1019 = &g_1020;
    (*l_1019) |= func_60(((!((!func_66(func_71(&g_43), ((safe_rshift_func_int16_t_s_u((g_43 , (safe_sub_func_uint8_t_u_u((safe_add_func_uint64_t_u_u((g_43 , ((((*l_98) = (((((safe_rshift_func_int8_t_s_s(0xEFL, 2)) <= (nullptr != l_84)) || (safe_add_func_uint8_t_u_u((safe_mod_func_uint8_t_u_u(((((safe_div_func_uint64_t_u_u((*l_84), (safe_lshift_func_int16_t_s_u(((safe_mul_func_uint16_t_u_u(((*l_96) = (g_95 , 65533UL)), 0x98C4L)) == (*l_84)), g_4[8][2])))) < g_43) & (*l_84)) , 251UL), g_4[8][2])), g_46))) || (*l_84)) == (*l_84))) , g_95.f6) > (*l_84))), (*l_84))), (*l_84)))), 1)) > (-7L)), g_43, (*l_84))) == 2UL)) & l_693), l_694, &l_694);
    return &g_113;
}


/* ------------------------------------------ */
/* 
 * reads : g_126 g_47 g_501 g_707 g_242.f5 g_273.f3 g_113 g_544 g_509 g_864 g_865 g_273.f2 g_190 g_7 g_242.f6 g_1018
 * writes: g_126 g_273.f3 g_113 g_501 g_544 g_221 g_242.f6 g_1018
 */
static const int32_t  func_60(int32_t  p_61, const uint32_t  p_62, const int32_t * p_63)
{ /* block id: 269 */
    const struct S1 l_706 = {-1,3734,7,0x7E9E7B19L,12588,0x424B2860L,22264};
    int32_t l_715 = 0x55E7A4E3L;
    int32_t l_717 = 0x154FB51DL;
    int32_t l_720 = 0x1385572EL;
    int8_t *****l_733 = &g_573;
    uint16_t l_781 = 0x245EL;
    int8_t l_802[10];
    int32_t l_890 = (-4L);
    int32_t l_891 = 0xECFF0EA2L;
    int32_t l_892 = 9L;
    int32_t l_893 = 0xED9A9294L;
    int32_t l_895 = (-1L);
    int32_t l_900 = 5L;
    int32_t l_901 = (-4L);
    int32_t l_902 = 0x296930F1L;
    int32_t l_904[3];
    int32_t **l_931[2][7] = {{&g_221[1],&g_221[8],&g_221[1],&g_221[3],&g_221[3],&g_221[1],&g_221[8]},{&g_221[3],&g_221[8],&g_221[1],&g_221[1],&g_221[8],&g_221[3],&g_221[8]}};
    struct S1 l_951 = {1,1255,-7,0x0298325EL,21133,0xC64D710DL,16572};
    const struct S0 l_952 = {0x9B5A7846L,0xBEL,18446744073709551615UL,0xF8L,0x6A4702C6L,8,0xEA492B54L};
    uint32_t *l_968[5];
    uint32_t *l_969 = nullptr;
    uint32_t *l_970 = nullptr;
    uint32_t *l_971 = &g_254;
    uint32_t ** const l_967[9] = {&l_971,&l_969,&l_971,&l_969,&l_971,&l_969,&l_971,&l_969,&l_971};
    uint32_t ** const *l_966 = &l_967[8];
    int32_t l_1008 = 0L;
    float l_1013 = 0xE.E3BF5Ep+17;
    int64_t l_1015 = 0x8FB082CBDECBDD8DLL;
    uint32_t l_1016 = 8UL;
    int32_t l_1017[5];
    int i, j;
    for (i = 0; i < 10; i++)
        l_802[i] = (-9L);
    for (i = 0; i < 3; i++)
        l_904[i] = 1L;
    for (i = 0; i < 5; i++)
        l_968[i] = &g_126;
    for (i = 0; i < 5; i++)
        l_1017[i] = 0x07106B72L;
    for (g_126 = (-13); (g_126 >= 44); g_126 = safe_add_func_uint16_t_u_u(g_126, 3))
    { /* block id: 272 */
        int64_t l_708 = 0x1B5C4DB49727DFDDLL;
        int32_t l_709 = (-8L);
        uint8_t *l_710[7][4] = {{&g_273.f1,nullptr,nullptr,&g_273.f1},{nullptr,&g_273.f1,nullptr,nullptr},{&g_273.f1,&g_273.f1,nullptr,&g_273.f1},{&g_273.f1,nullptr,nullptr,&g_273.f1},{nullptr,&g_273.f1,nullptr,nullptr},{&g_273.f1,&g_273.f1,nullptr,&g_273.f1},{&g_273.f1,nullptr,nullptr,&g_273.f1}};
        int32_t *l_711 = &g_113;
        int16_t l_718[10][7][3] = {{{0x026AL,0x026AL,0x8A43L},{1L,0x8A43L,0x8A43L},{0x8A43L,(-5L),0x3CBDL},{1L,(-5L),1L},{0x026AL,0x8A43L,0x3CBDL},{0x026AL,0x026AL,0x8A43L},{1L,0x8A43L,0x8A43L}},{{0x8A43L,(-5L),0x3CBDL},{1L,(-5L),1L},{0x026AL,0x8A43L,0x3CBDL},{0x026AL,0x026AL,0x8A43L},{1L,0x8A43L,0x8A43L},{0x8A43L,(-5L),0x3CBDL},{1L,(-5L),1L}},{{0x026AL,0x8A43L,0x3CBDL},{0x026AL,0x026AL,0x8A43L},{1L,0x8A43L,0x8A43L},{0x8A43L,(-5L),0x3CBDL},{1L,(-5L),1L},{0x026AL,0x8A43L,0x3CBDL},{0x026AL,0x026AL,0x8A43L}},{{1L,0x8A43L,0x8A43L},{0x8A43L,(-5L),0x3CBDL},{1L,(-5L),1L},{0x026AL,0x8A43L,0x3CBDL},{0x026AL,0x026AL,0x8A43L},{1L,0x8A43L,0x8A43L},{0x8A43L,(-5L),0x3CBDL}},{{0x3CBDL,0x026AL,0x3CBDL},{0x8A43L,1L,(-5L)},{0x8A43L,0x8A43L,1L},{0x3CBDL,1L,1L},{1L,0x026AL,(-5L)},{0x3CBDL,0x026AL,0x3CBDL},{0x8A43L,1L,(-5L)}},{{0x8A43L,0x8A43L,1L},{0x3CBDL,1L,1L},{1L,0x026AL,(-5L)},{0x3CBDL,0x026AL,0x3CBDL},{0x8A43L,1L,(-5L)},{0x8A43L,0x8A43L,1L},{0x3CBDL,1L,1L}},{{1L,0x026AL,(-5L)},{0x3CBDL,0x026AL,0x3CBDL},{0x8A43L,1L,(-5L)},{0x8A43L,0x8A43L,1L},{0x3CBDL,1L,1L},{1L,0x026AL,(-5L)},{0x3CBDL,0x026AL,0x3CBDL}},{{0x8A43L,1L,(-5L)},{0x8A43L,0x8A43L,1L},{0x3CBDL,1L,1L},{1L,0x026AL,(-5L)},{0x3CBDL,0x026AL,0x3CBDL},{0x8A43L,1L,(-5L)},{0x8A43L,0x8A43L,1L}},{{0x3CBDL,1L,1L},{1L,0x026AL,(-5L)},{0x3CBDL,0x026AL,0x3CBDL},{0x8A43L,1L,(-5L)},{0x8A43L,0x8A43L,1L},{0x3CBDL,1L,1L},{1L,0x026AL,(-5L)}},{{0x3CBDL,0x026AL,0x3CBDL},{0x8A43L,1L,(-5L)},{0x8A43L,0x8A43L,1L},{0x3CBDL,1L,1L},{1L,0x026AL,(-5L)},{0x3CBDL,0x026AL,0x3CBDL},{0x8A43L,1L,(-5L)}}};
        uint64_t l_721 = 18446744073709551614UL;
        int32_t l_791 = 0xD1DCCB75L;
        int32_t l_794 = 1L;
        int32_t l_795 = 3L;
        int32_t l_798 = 8L;
        int32_t l_801 = (-1L);
        uint16_t l_803 = 1UL;
        struct S0 *l_874[10];
        int32_t l_894 = (-9L);
        int32_t l_896 = 0L;
        int32_t l_897 = 2L;
        int32_t l_898 = (-1L);
        int32_t l_899 = (-2L);
        int32_t l_903[4] = {(-1L),(-1L),(-1L),(-1L)};
        float * const *l_934 = nullptr;
        uint32_t l_945 = 18446744073709551615UL;
        uint32_t l_987[5];
        int16_t **l_994 = &g_817;
        int i, j, k;
        for (i = 0; i < 10; i++)
            l_874[i] = &g_273;
        for (i = 0; i < 5; i++)
            l_987[i] = 18446744073709551609UL;
        (*l_711) ^= ((safe_mod_func_uint16_t_u_u(((((g_47 <= (*p_63)) > ((((safe_mod_func_uint8_t_u_u((g_273.f3 |= ((((!((l_709 = ((safe_div_func_int8_t_s_s((safe_sub_func_uint64_t_u_u(p_62, (l_706 , (((65535UL < g_501) != (g_707 == nullptr)) & l_706.f6)))), l_708)) , p_61)) , l_708)) >= 0x19CBF16DL) >= g_242.f5) & l_708)), 0xBCL)) || l_706.f4) || l_708) && l_709)) == l_706.f1) == 0xE7E623F4L), 0xF95AL)) && p_61);
        for (g_501 = (-24); (g_501 != (-12)); g_501 = safe_add_func_int8_t_s_s(g_501, 1))
        { /* block id: 278 */
            int16_t l_716 = 0x9D1AL;
            uint32_t *l_740 = &g_254;
            int64_t *l_751 = &g_253;
            int16_t *l_752 = nullptr;
            int64_t *l_753[5] = {&g_251,&g_251,&g_251,&g_251,&g_251};
            int32_t l_788 = 0x0D616015L;
            int32_t l_819 = 5L;
            int32_t l_820 = 0L;
            struct S0 l_913 = {9L,0x76L,18446744073709551610UL,0x47L,0x9B828558L,16,-10L};
            int32_t **l_933[8];
            uint32_t l_943 = 0UL;
            struct S0 **l_953 = &l_874[5];
            struct S1 l_992 = {3,-3870,0,0x2A31D745L,2757,9UL,14548};
            int i;
            for (i = 0; i < 8; i++)
                l_933[i] = &g_221[8];
            if ((*p_63))
            { /* block id: 279 */
                int32_t *l_714[2];
                float l_719[4][2][6] = {{{0x3.AE6DA0p-46,0x4.3p-1,0x3.AE6DA0p-46,0x6.D0516Dp+70,0x0.Dp+1,0x9.4p-1},{0x6.580E12p-12,0x0.2p-1,0x0.Dp+1,0x1.32536Ep-52,0x0.Dp+1,0x0.2p-1}},{{0x0.Dp+1,0x4.3p-1,0xC.E7D0ACp+21,0x1.32536Ep-52,(-0x4.Ap-1),0x6.D0516Dp+70},{0x6.580E12p-12,0x6.D0516Dp+70,0xC.E7D0ACp+21,0x6.D0516Dp+70,0x6.580E12p-12,0x0.2p-1}},{{0x3.AE6DA0p-46,0x6.D0516Dp+70,0x0.Dp+1,0x9.4p-1,(-0x4.Ap-1),0x9.4p-1},{0x3.AE6DA0p-46,0x4.3p-1,0x3.AE6DA0p-46,0x6.D0516Dp+70,0x0.Dp+1,0x9.4p-1}},{{0x6.580E12p-12,0x0.2p-1,0x0.Dp+1,0x1.32536Ep-52,0x0.Dp+1,0x0.2p-1},{0x0.Dp+1,0x4.3p-1,0xC.E7D0ACp+21,0x1.32536Ep-52,(-0x4.Ap-1),0x6.D0516Dp+70}}};
                int i, j, k;
                for (i = 0; i < 2; i++)
                    l_714[i] = &l_709;
                l_721++;
            }
            else
            { /* block id: 281 */
                int32_t **l_724 = &g_221[1];
                for (l_721 = 0; (l_721 <= 0); l_721 += 1)
                { /* block id: 284 */
                    for (g_544 = 0; (g_544 >= 0); g_544 -= 1)
                    { /* block id: 287 */
                        int i, j, k;
                        if (g_509[l_721][g_544][l_721])
                            break;
                        l_720 = 0x3452E1F8L;
                        if ((*p_63))
                            continue;
                    }
                }
                (*l_724) = &l_709;
                if (l_716)
                    break;
            }
        }
    }
    l_1008 ^= (safe_div_func_int64_t_s_s((p_62 & ((safe_add_func_uint32_t_u_u((**g_864), (safe_sub_func_uint32_t_u_u(1UL, ((nullptr != &l_931[0][1]) , (*g_865)))))) | g_273.f2)), (safe_mod_func_uint16_t_u_u(((safe_lshift_func_int8_t_s_u(p_62, 2)) && g_190), 0x8163L))));
    g_1018[0] ^= ((safe_add_func_int16_t_s_s((safe_div_func_uint32_t_u_u(p_62, 3L)), g_7[7])) | ((~((l_1015 ^ (nullptr == (*l_966))) , 1UL)) <= (l_1017[2] = (((*g_865) = (g_242.f6 ^= (**g_864))) & l_1016))));
    return l_706.f5;
}


/* ------------------------------------------ */
/* 
 * reads : g_46 g_110 g_43 g_113 g_97 g_126 g_99 g_109 g_95.f6 g_7 g_190 g_95.f0 g_215 g_152 g_95 g_49 g_242 g_244 g_251 g_48 g_263 g_273 g_47 g_289 g_329 g_253 g_378 g_4 g_245 g_216 g_463 g_476 g_480 g_192 g_509 g_484 g_485 g_499 g_542 g_491 g_495 g_544 g_481 g_482 g_497 g_573 g_585 g_477 g_478
 * writes: g_46 g_113 g_126 g_152 g_190 g_192 g_7 g_43 g_221 g_251 g_253 g_254 g_263 g_242.f4 g_48 g_289 g_329 g_99 g_216 g_375 g_382 g_509 g_273 g_573
 */
static int64_t  func_66(int32_t * p_67, uint16_t  p_68, float  p_69, uint32_t  p_70)
{ /* block id: 26 */
    uint32_t l_102 = 0xB6C1D071L;
    const int32_t *l_108 = &g_109;
    const int32_t **l_107 = &l_108;
    int32_t l_165 = 1L;
    int32_t l_249[5][4] = {{0x738CBD16L,(-5L),0x5FA4DD68L,0x5FA4DD68L},{0x041C5E05L,0x041C5E05L,0x46385D5EL,0xFB73719AL},{0x738CBD16L,0x46385D5EL,0x969B5C37L,0x738CBD16L},{7L,(-1L),7L,0x969B5C37L},{0x5FA4DD68L,(-1L),0x041C5E05L,0x738CBD16L}};
    uint32_t *l_270 = &g_254;
    uint32_t *l_272 = &g_126;
    int8_t *l_380 = &g_152;
    float l_429 = 0xA.5CD8E7p-0;
    int8_t l_507 = (-2L);
    struct S1 *l_541 = &g_242;
    float **l_579 = &g_215;
    float ***l_578[1][5];
    float ****l_577 = &l_578[0][2];
    const uint16_t l_630[8] = {1UL,1UL,1UL,1UL,1UL,1UL,1UL,1UL};
    int8_t l_655 = (-1L);
    uint64_t l_668 = 0xC16A13382DB9001FLL;
    uint16_t l_678 = 0x4BB0L;
    int16_t l_679 = 0L;
    int i, j;
    for (i = 0; i < 1; i++)
    {
        for (j = 0; j < 5; j++)
            l_578[i][j] = &l_579;
    }
    for (g_46 = 0; (g_46 <= (-8)); --g_46)
    { /* block id: 29 */
        struct S0 l_116 = {-1L,3UL,0UL,0xAFL,-2L,6,0xE69A2289L};
        int32_t l_163[2];
        uint32_t *l_188 = &g_126;
        float *l_217 = &g_216;
        int32_t l_227[3][2][9] = {{{0xDD45C377L,0xDD45C377L,0x9F24C5EAL,9L,(-9L),0xBDF1EA78L,0xDD45C377L,(-9L),6L},{0x423A1251L,0xC49628F9L,1L,(-9L),(-9L),1L,0xC49628F9L,0x423A1251L,0x9F24C5EAL}},{{0x423A1251L,(-9L),0x9F24C5EAL,0x423A1251L,0xC49628F9L,1L,(-9L),(-9L),1L},{0xDD45C377L,(-9L),6L,(-9L),0xDD45C377L,0xBDF1EA78L,(-9L),9L,0x9F24C5EAL}},{{(-9L),0xC49628F9L,6L,9L,0xC49628F9L,0x9F24C5EAL,0xC49628F9L,9L,6L},{0xDD45C377L,0xDD45C377L,0x9F24C5EAL,9L,(-9L),0xBDF1EA78L,0xDD45C377L,(-9L),6L}}};
        uint8_t l_228 = 0x4DL;
        const struct S1 l_241 = {-0,3738,-7,6UL,7396,0x6841CB19L,293};
        int32_t l_312[4];
        uint32_t l_325 = 1UL;
        uint16_t *l_348 = &g_99;
        uint32_t l_353 = 18446744073709551606UL;
        int8_t **l_362 = nullptr;
        uint16_t l_401 = 0x3F57L;
        uint32_t l_448[1];
        int8_t * const l_494 = &g_495;
        int8_t * const l_496 = &g_497;
        int8_t * const l_498 = &g_499;
        int8_t * const l_500 = &g_501;
        int8_t * const * const l_493[6][3] = {{&l_500,&l_496,&l_500},{&l_494,&l_494,&l_494},{&l_500,&l_496,&l_500},{&l_494,&l_494,&l_494},{&l_500,&l_496,&l_500},{&l_494,&l_494,&l_494}};
        int8_t * const * const *l_492 = &l_493[4][1];
        float l_508 = 0xB.1B38A0p-90;
        int64_t *l_593 = &g_251;
        int8_t ***l_620 = nullptr;
        int8_t ****l_619 = &l_620;
        float l_667 = 0x8.4EF7E5p-8;
        float * const l_673 = nullptr;
        float * const *l_672[7][8][4] = {{{&l_673,&l_673,&l_673,&l_673},{&l_673,&l_673,&l_673,&l_673},{&l_673,nullptr,&l_673,&l_673},{&l_673,&l_673,&l_673,&l_673},{&l_673,nullptr,&l_673,&l_673},{&l_673,&l_673,&l_673,&l_673},{&l_673,nullptr,&l_673,&l_673},{&l_673,nullptr,nullptr,&l_673}},{{&l_673,&l_673,&l_673,&l_673},{&l_673,&l_673,nullptr,&l_673},{nullptr,nullptr,&l_673,&l_673},{nullptr,nullptr,&l_673,&l_673},{nullptr,nullptr,nullptr,&l_673},{&l_673,&l_673,&l_673,&l_673},{&l_673,&l_673,nullptr,&l_673},{nullptr,&l_673,&l_673,&l_673}},{{&l_673,&l_673,nullptr,&l_673},{&l_673,nullptr,nullptr,&l_673},{&l_673,nullptr,&l_673,&l_673},{&l_673,nullptr,nullptr,&l_673},{&l_673,&l_673,&l_673,&l_673},{&l_673,&l_673,&l_673,&l_673},{nullptr,nullptr,&l_673,&l_673},{&l_673,nullptr,&l_673,&l_673}},{{&l_673,&l_673,&l_673,&l_673},{nullptr,&l_673,&l_673,&l_673},{&l_673,&l_673,&l_673,&l_673},{nullptr,&l_673,&l_673,nullptr},{&l_673,&l_673,&l_673,&l_673},{&l_673,&l_673,nullptr,&l_673},{nullptr,&l_673,&l_673,&l_673},{&l_673,&l_673,&l_673,&l_673}},{{&l_673,nullptr,&l_673,&l_673},{&l_673,nullptr,&l_673,&l_673},{nullptr,&l_673,&l_673,nullptr},{&l_673,&l_673,&l_673,nullptr},{&l_673,&l_673,&l_673,nullptr},{&l_673,nullptr,&l_673,nullptr},{&l_673,&l_673,&l_673,nullptr},{&l_673,&l_673,&l_673,nullptr}},{{nullptr,&l_673,&l_673,&l_673},{&l_673,nullptr,&l_673,&l_673},{&l_673,nullptr,&l_673,&l_673},{nullptr,&l_673,&l_673,&l_673},{&l_673,&l_673,&l_673,&l_673},{nullptr,&l_673,&l_673,&l_673},{&l_673,&l_673,&l_673,nullptr},{&l_673,&l_673,nullptr,&l_673}},{{&l_673,&l_673,&l_673,&l_673},{&l_673,&l_673,nullptr,&l_673},{&l_673,&l_673,&l_673,nullptr},{&l_673,nullptr,&l_673,&l_673},{nullptr,nullptr,&l_673,&l_673},{&l_673,&l_673,&l_673,nullptr},{nullptr,&l_673,&l_673,&l_673},{&l_673,&l_673,&l_673,&l_673}}};
        float * const **l_671 = &l_672[4][6][2];
        int32_t *l_680 = &g_43;
        int32_t *l_681 = &l_249[2][0];
        int32_t *l_682 = &l_249[4][3];
        int32_t *l_683 = &l_227[1][1][2];
        int32_t *l_684 = &l_227[1][1][2];
        int32_t *l_685 = &l_249[4][3];
        int32_t *l_686 = &l_227[0][0][4];
        int32_t *l_687 = &l_249[3][0];
        int32_t *l_688 = &g_43;
        int32_t *l_689[4] = {&l_227[0][1][4],&l_227[0][1][4],&l_227[0][1][4],&l_227[0][1][4]};
        uint64_t l_690[2][9][2] = {{{0x15E1787E5B462C24LL,0UL},{0UL,0UL},{0x8D5BBBF206F086E8LL,0x5D50CDF5A65C6143LL},{18446744073709551611UL,18446744073709551610UL},{18446744073709551609UL,1UL},{0UL,18446744073709551609UL},{18446744073709551608UL,0x9BACBDBC0ACF3B41LL},{18446744073709551608UL,18446744073709551609UL},{0UL,1UL}},{{18446744073709551609UL,18446744073709551610UL},{18446744073709551611UL,0x5D50CDF5A65C6143LL},{0x8D5BBBF206F086E8LL,0UL},{0UL,0UL},{0x15E1787E5B462C24LL,0UL},{0UL,0UL},{0x8D5BBBF206F086E8LL,0x5D50CDF5A65C6143LL},{18446744073709551611UL,18446744073709551610UL},{18446744073709551609UL,1UL}}};
        int i, j, k;
        for (i = 0; i < 2; i++)
            l_163[i] = 0xA427D254L;
        for (i = 0; i < 4; i++)
            l_312[i] = 0xD8CB42AAL;
        for (i = 0; i < 1; i++)
            l_448[i] = 0x1283FBB4L;
        if (l_102)
            break;
        for (p_68 = (-21); (p_68 != 21); p_68 = safe_add_func_int64_t_s_s(p_68, 7))
        { /* block id: 33 */
            int32_t *l_106 = &g_43;
            int32_t **l_105[10] = {&l_106,&l_106,&l_106,&l_106,&l_106,&l_106,&l_106,&l_106,&l_106,&l_106};
            int i;
            p_67 = &g_43;
        }
        if ((l_107 != g_110))
        { /* block id: 36 */
            int32_t *l_112 = &g_113;
            if ((*p_67))
                break;
            (*l_112) &= (*p_67);
            for (p_70 = (-30); (p_70 == 35); p_70 = safe_add_func_uint16_t_u_u(p_70, 1))
            { /* block id: 41 */
                struct S0 *l_117 = &l_116;
                for (l_102 = 0; (l_102 <= 2); l_102 += 1)
                { /* block id: 44 */
                    int i;
                    if (g_97[l_102])
                        break;
                }
                (*l_117) = l_116;
            }
        }
        else
        { /* block id: 49 */
            uint32_t *l_125 = &g_126;
            int8_t *l_151 = &g_152;
            uint8_t *l_161 = &l_116.f1;
            int32_t l_162 = 0xBC8BB2A2L;
            uint32_t l_164[5][6][8] = {{{5UL,18446744073709551615UL,0xA6DD21D6L,0xCF1A2F3BL,0xF5E601DAL,9UL,18446744073709551615UL,4UL},{18446744073709551615UL,0xCE1473C7L,0xA345BD6EL,0xB9F0DAF6L,0xB6624628L,18446744073709551608UL,0x585D5F9AL,0x8FF2045DL},{0x80D3783EL,8UL,18446744073709551615UL,0xF1F12EC7L,0xEA47A0FBL,18446744073709551615UL,18446744073709551609UL,0x90CD53C7L},{0UL,0x8FF2045DL,0x40AC0B49L,0UL,5UL,0xB9F0DAF6L,0xA6DD21D6L,0xEF9A41DAL},{0UL,18446744073709551611UL,18446744073709551615UL,0xD7475D9AL,0xCE1473C7L,18446744073709551615UL,1UL,0xFE8C5B51L},{0xCF1A2F3BL,5UL,1UL,5UL,18446744073709551615UL,2UL,0x523DCADDL,0x2BC1F679L}},{{0x5CC96602L,1UL,0x933DD79AL,0UL,0x4DA18CC6L,0x11D86350L,0xB9F0DAF6L,18446744073709551615UL},{0x667E6DEFL,0x240BFACFL,0x5CC96602L,18446744073709551607UL,0x585D5F9AL,0xF1F12EC7L,0xF1F12EC7L,0x585D5F9AL},{0UL,0x29E21D3DL,0x29E21D3DL,0UL,0x2AC5C648L,0xB482F0B7L,0xB01682E6L,0xD1B2F967L},{0xE17D3F7CL,18446744073709551615UL,0x90CD53C7L,0xFEEEDEE6L,18446744073709551614UL,0xEF9A41DAL,18446744073709551615UL,0UL},{5UL,18446744073709551615UL,2UL,18446744073709551606UL,0xB6624628L,0xB482F0B7L,18446744073709551615UL,18446744073709551615UL},{1UL,0x29E21D3DL,18446744073709551611UL,0x11D86350L,0x464EAFE2L,0xF1F12EC7L,5UL,0x59846D02L}},{{0xB3094663L,0x240BFACFL,7UL,9UL,0xB482F0B7L,0x11D86350L,0x25A790BEL,0x9236ECDBL},{0xEA47A0FBL,1UL,0xBC0A3B53L,18446744073709551614UL,0xA6DD21D6L,2UL,0x85DB3B99L,18446744073709551615UL},{5UL,5UL,18446744073709551606UL,0xB01682E6L,0UL,18446744073709551615UL,0x7B67EAC4L,18446744073709551615UL},{18446744073709551606UL,18446744073709551611UL,0xFE8C5B51L,0x667E6DEFL,0xEF9A41DAL,0xB9F0DAF6L,0xF5E601DAL,0xFEEEDEE6L},{0x240BFACFL,0x8FF2045DL,18446744073709551615UL,1UL,2UL,18446744073709551615UL,5UL,7UL},{0x9236ECDBL,8UL,2UL,6UL,0x9C97DBFFL,5UL,18446744073709551615UL,0xA6DD21D6L}},{{18446744073709551609UL,0x4DA18CC6L,5UL,0UL,0xE42D4C9FL,0x59846D02L,0x3D060D73L,0xFD7FB89EL},{18446744073709551607UL,18446744073709551609UL,0xA9B7ED1FL,7UL,0x80D3783EL,0x240BFACFL,0x2AC5C648L,0x85DB3B99L},{1UL,18446744073709551615UL,0xEA47A0FBL,0x90CD53C7L,0x3D060D73L,18446744073709551615UL,0xCE94049FL,0x667E6DEFL},{0xFD7FB89EL,0xD9676197L,18446744073709551610UL,0xA6DD21D6L,0xA4E10F47L,0xA6DD21D6L,18446744073709551610UL,0xD9676197L},{18446744073709551615UL,0x9236ECDBL,0x2BC1F679L,5UL,0xCDD5523DL,4UL,0UL,0xD7475D9AL},{0x4739697EL,1UL,0x117D6C01L,1UL,18446744073709551615UL,0xE17D3F7CL,0UL,18446744073709551606UL}},{{0xB6624628L,1UL,0x2BC1F679L,4UL,0xA9B7ED1FL,0xD5E73020L,18446744073709551610UL,0xB9F0DAF6L},{0xA9B7ED1FL,0xD5E73020L,18446744073709551610UL,0xB9F0DAF6L,0x7B67EAC4L,0xF5E601DAL,18446744073709551608UL,0x933DD79AL},{18446744073709551610UL,0x84F02785L,0x8FF2045DL,0xA4E10F47L,9UL,0xEF9A41DAL,0x9236ECDBL,18446744073709551606UL},{0UL,0x3D060D73L,1UL,0x9236ECDBL,0xA9B7ED1FL,0xA6DD21D6L,2UL,18446744073709551607UL},{0xCF1A2F3BL,0xF5E601DAL,9UL,18446744073709551615UL,4UL,0x85DB3B99L,0xE4B1711AL,0x2AC5C648L},{5UL,0UL,0x7B67EAC4L,0xFD7FB89EL,0xE42D4C9FL,0x3D060D73L,0UL,0xD7475D9AL}}};
            int32_t l_226 = 3L;
            int32_t l_311 = 0x2B7896BAL;
            int32_t l_313 = 0L;
            float **l_338 = &g_215;
            int8_t l_399 = (-1L);
            int32_t l_400 = (-1L);
            struct S1 l_404[3][9][8] = {{{{2,-3516,-5,0x87B39429L,13772,0x8EB4B49BL,11378},{3,1444,7,0xC3B72B04L,19468,18446744073709551615UL,15520},{3,1444,7,0xC3B72B04L,19468,18446744073709551615UL,15520},{2,-3516,-5,0x87B39429L,13772,0x8EB4B49BL,11378},{-0,-3701,4,0UL,3157,0UL,18893},{0,-1867,0,18446744073709551615UL,5543,18446744073709551608UL,21813},{-1,-3213,2,18446744073709551615UL,9674,5UL,2774},{-0,-624,0,0xB1468326L,3179,0UL,16599}},{{-0,-3042,-5,18446744073709551606UL,7565,0xC4B2DB7AL,4514},{0,1488,0,0xF38E2187L,21755,18446744073709551612UL,16964},{1,-3175,4,0xBBE69ECAL,3969,0xA02C6AA2L,7958},{-0,-3701,4,0UL,3157,0UL,18893},{-3,-1834,-7,9UL,5744,0UL,15521},{-0,-3701,4,0UL,3157,0UL,18893},{1,-3175,4,0xBBE69ECAL,3969,0xA02C6AA2L,7958},{0,1488,0,0xF38E2187L,21755,18446744073709551612UL,16964}},{{3,1444,7,0xC3B72B04L,19468,18446744073709551615UL,15520},{0,1488,0,0xF38E2187L,21755,18446744073709551612UL,16964},{-0,-624,0,0xB1468326L,3179,0UL,16599},{1,-3175,4,0xBBE69ECAL,3969,0xA02C6AA2L,7958},{-3,-3529,7,18446744073709551613UL,22752,9UL,6734},{0,-1867,0,18446744073709551615UL,5543,18446744073709551608UL,21813},{-0,102,-7,0xF0FBBD52L,19309,0x938E5F9EL,22747},{-0,102,-7,0xF0FBBD52L,19309,0x938E5F9EL,22747}},{{-0,-624,0,0xB1468326L,3179,0UL,16599},{3,1444,7,0xC3B72B04L,19468,18446744073709551615UL,15520},{3,-1698,-3,18446744073709551613UL,6957,1UL,14466},{3,-1698,-3,18446744073709551613UL,6957,1UL,14466},{3,1444,7,0xC3B72B04L,19468,18446744073709551615UL,15520},{-0,-624,0,0xB1468326L,3179,0UL,16599},{-0,102,-7,0xF0FBBD52L,19309,0x938E5F9EL,22747},{-3,-1834,-7,9UL,5744,0UL,15521}},{{-1,-3213,2,18446744073709551615UL,9674,5UL,2774},{3,-1698,-3,18446744073709551613UL,6957,1UL,14466},{-0,-624,0,0xB1468326L,3179,0UL,16599},{0,-1867,0,18446744073709551615UL,5543,18446744073709551608UL,21813},{1,-3175,4,0xBBE69ECAL,3969,0xA02C6AA2L,7958},{-0,-3042,-5,18446744073709551606UL,7565,0xC4B2DB7AL,4514},{1,-3175,4,0xBBE69ECAL,3969,0xA02C6AA2L,7958},{0,-1867,0,18446744073709551615UL,5543,18446744073709551608UL,21813}},{{1,-3175,4,0xBBE69ECAL,3969,0xA02C6AA2L,7958},{-0,-3042,-5,18446744073709551606UL,7565,0xC4B2DB7AL,4514},{1,-3175,4,0xBBE69ECAL,3969,0xA02C6AA2L,7958},{0,-1867,0,18446744073709551615UL,5543,18446744073709551608UL,21813},{-0,-624,0,0xB1468326L,3179,0UL,16599},{3,-1698,-3,18446744073709551613UL,6957,1UL,14466},{-1,-3213,2,18446744073709551615UL,9674,5UL,2774},{-3,-1834,-7,9UL,5744,0UL,15521}},{{-0,102,-7,0xF0FBBD52L,19309,0x938E5F9EL,22747},{-0,-624,0,0xB1468326L,3179,0UL,16599},{3,1444,7,0xC3B72B04L,19468,18446744073709551615UL,15520},{3,-1698,-3,18446744073709551613UL,6957,1UL,14466},{3,-1698,-3,18446744073709551613UL,6957,1UL,14466},{3,1444,7,0xC3B72B04L,19468,18446744073709551615UL,15520},{-0,-624,0,0xB1468326L,3179,0UL,16599},{-0,102,-7,0xF0FBBD52L,19309,0x938E5F9EL,22747}},{{-0,102,-7,0xF0FBBD52L,19309,0x938E5F9EL,22747},{0,-1867,0,18446744073709551615UL,5543,18446744073709551608UL,21813},{-3,-3529,7,18446744073709551613UL,22752,9UL,6734},{1,-3175,4,0xBBE69ECAL,3969,0xA02C6AA2L,7958},{-0,-624,0,0xB1468326L,3179,0UL,16599},{0,1488,0,0xF38E2187L,21755,18446744073709551612UL,16964},{3,1444,7,0xC3B72B04L,19468,18446744073709551615UL,15520},{0,1488,0,0xF38E2187L,21755,18446744073709551612UL,16964}},{{1,-3175,4,0xBBE69ECAL,3969,0xA02C6AA2L,7958},{-0,-3701,4,0UL,3157,0UL,18893},{-3,-1834,-7,9UL,5744,0UL,15521},{-0,-3701,4,0UL,3157,0UL,18893},{1,-3175,4,0xBBE69ECAL,3969,0xA02C6AA2L,7958},{0,1488,0,0xF38E2187L,21755,18446744073709551612UL,16964},{-0,-3042,-5,18446744073709551606UL,7565,0xC4B2DB7AL,4514},{-0,-624,0,0xB1468326L,3179,0UL,16599}}},{{{-1,-3213,2,18446744073709551615UL,9674,5UL,2774},{0,-1867,0,18446744073709551615UL,5543,18446744073709551608UL,21813},{-0,-3701,4,0UL,3157,0UL,18893},{2,-3516,-5,0x87B39429L,13772,0x8EB4B49BL,11378},{3,1444,7,0xC3B72B04L,19468,18446744073709551615UL,15520},{3,1444,7,0xC3B72B04L,19468,18446744073709551615UL,15520},{2,-3516,-5,0x87B39429L,13772,0x8EB4B49BL,11378},{-0,-3701,4,0UL,3157,0UL,18893}},{{-0,-624,0,0xB1468326L,3179,0UL,16599},{-0,-624,0,0xB1468326L,3179,0UL,16599},{-0,-3701,4,0UL,3157,0UL,18893},{-0,102,-7,0xF0FBBD52L,19309,0x938E5F9EL,22747},{-3,-3529,7,18446744073709551613UL,22752,9UL,6734},{3,-1698,-3,18446744073709551613UL,6957,1UL,14466},{-0,-3042,-5,18446744073709551606UL,7565,0xC4B2DB7AL,4514},{-1,-3213,2,18446744073709551615UL,9674,5UL,2774}},{{3,1444,7,0xC3B72B04L,19468,18446744073709551615UL,15520},{-0,-3042,-5,18446744073709551606UL,7565,0xC4B2DB7AL,4514},{-3,-1834,-7,9UL,5744,0UL,15521},{-0,-624,0,0xB1468326L,3179,0UL,16599},{-3,-1834,-7,9UL,5744,0UL,15521},{-0,-3042,-5,18446744073709551606UL,7565,0xC4B2DB7AL,4514},{3,1444,7,0xC3B72B04L,19468,18446744073709551615UL,15520},{-1,-3213,2,18446744073709551615UL,9674,5UL,2774}},{{-0,-3042,-5,18446744073709551606UL,7565,0xC4B2DB7AL,4514},{3,-1698,-3,18446744073709551613UL,6957,1UL,14466},{-3,-3529,7,18446744073709551613UL,22752,9UL,6734},{-0,102,-7,0xF0FBBD52L,19309,0x938E5F9EL,22747},{-0,-3701,4,0UL,3157,0UL,18893},{-0,-624,0,0xB1468326L,3179,0UL,16599},{-0,-624,0,0xB1468326L,3179,0UL,16599},{-0,-3701,4,0UL,3157,0UL,18893}},{{2,-3516,-5,0x87B39429L,13772,0x8EB4B49BL,11378},{3,1444,7,0xC3B72B04L,19468,18446744073709551615UL,15520},{3,1444,7,0xC3B72B04L,19468,18446744073709551615UL,15520},{2,-3516,-5,0x87B39429L,13772,0x8EB4B49BL,11378},{-0,-3701,4,0UL,3157,0UL,18893},{0,-1867,0,18446744073709551615UL,5543,18446744073709551608UL,21813},{-1,-3213,2,18446744073709551615UL,9674,5UL,2774},{-0,-624,0,0xB1468326L,3179,0UL,16599}},{{-0,-3042,-5,18446744073709551606UL,7565,0xC4B2DB7AL,4514},{0,1488,0,0xF38E2187L,21755,18446744073709551612UL,16964},{1,-3175,4,0xBBE69ECAL,3969,0xA02C6AA2L,7958},{-0,-3701,4,0UL,3157,0UL,18893},{-3,-1834,-7,9UL,5744,0UL,15521},{-0,-3701,4,0UL,3157,0UL,18893},{1,-3175,4,0xBBE69ECAL,3969,0xA02C6AA2L,7958},{0,1488,0,0xF38E2187L,21755,18446744073709551612UL,16964}},{{3,1444,7,0xC3B72B04L,19468,18446744073709551615UL,15520},{0,1488,0,0xF38E2187L,21755,18446744073709551612UL,16964},{-0,-624,0,0xB1468326L,3179,0UL,16599},{1,-3175,4,0xBBE69ECAL,3969,0xA02C6AA2L,7958},{-3,-3529,7,18446744073709551613UL,22752,9UL,6734},{0,-1867,0,18446744073709551615UL,5543,18446744073709551608UL,21813},{-0,102,-7,0xF0FBBD52L,19309,0x938E5F9EL,22747},{-0,102,-7,0xF0FBBD52L,19309,0x938E5F9EL,22747}},{{-0,-624,0,0xB1468326L,3179,0UL,16599},{3,1444,7,0xC3B72B04L,19468,18446744073709551615UL,15520},{3,-1698,-3,18446744073709551613UL,6957,1UL,14466},{3,-1698,-3,18446744073709551613UL,6957,1UL,14466},{3,1444,7,0xC3B72B04L,19468,18446744073709551615UL,15520},{-0,-624,0,0xB1468326L,3179,0UL,16599},{-0,102,-7,0xF0FBBD52L,19309,0x938E5F9EL,22747},{-3,-1834,-7,9UL,5744,0UL,15521}},{{-1,-3213,2,18446744073709551615UL,9674,5UL,2774},{3,-1698,-3,18446744073709551613UL,6957,1UL,14466},{-0,-624,0,0xB1468326L,3179,0UL,16599},{0,-1867,0,18446744073709551615UL,5543,18446744073709551608UL,21813},{1,-3175,4,0xBBE69ECAL,3969,0xA02C6AA2L,7958},{-0,-3042,-5,18446744073709551606UL,7565,0xC4B2DB7AL,4514},{1,-3175,4,0xBBE69ECAL,3969,0xA02C6AA2L,7958},{0,-1867,0,18446744073709551615UL,5543,18446744073709551608UL,21813}}},{{{1,-3175,4,0xBBE69ECAL,3969,0xA02C6AA2L,7958},{-0,-3042,-5,18446744073709551606UL,7565,0xC4B2DB7AL,4514},{1,-3175,4,0xBBE69ECAL,3969,0xA02C6AA2L,7958},{0,-1867,0,18446744073709551615UL,5543,18446744073709551608UL,21813},{-0,-624,0,0xB1468326L,3179,0UL,16599},{3,-1698,-3,18446744073709551613UL,6957,1UL,14466},{-1,-3213,2,18446744073709551615UL,9674,5UL,2774},{-3,-1834,-7,9UL,5744,0UL,15521}},{{-0,102,-7,0xF0FBBD52L,19309,0x938E5F9EL,22747},{-0,-624,0,0xB1468326L,3179,0UL,16599},{3,1444,7,0xC3B72B04L,19468,18446744073709551615UL,15520},{3,-1698,-3,18446744073709551613UL,6957,1UL,14466},{3,1444,7,0xC3B72B04L,19468,18446744073709551615UL,15520},{2,-3516,-5,0x87B39429L,13772,0x8EB4B49BL,11378},{-0,-3701,4,0UL,3157,0UL,18893},{0,-1867,0,18446744073709551615UL,5543,18446744073709551608UL,21813}},{{0,-1867,0,18446744073709551615UL,5543,18446744073709551608UL,21813},{0,1488,0,0xF38E2187L,21755,18446744073709551612UL,16964},{-3,-1834,-7,9UL,5744,0UL,15521},{3,-1698,-3,18446744073709551613UL,6957,1UL,14466},{-0,-3701,4,0UL,3157,0UL,18893},{-3,-3529,7,18446744073709551613UL,22752,9UL,6734},{2,-3516,-5,0x87B39429L,13772,0x8EB4B49BL,11378},{-3,-3529,7,18446744073709551613UL,22752,9UL,6734}},{{3,-1698,-3,18446744073709551613UL,6957,1UL,14466},{-0,-3042,-5,18446744073709551606UL,7565,0xC4B2DB7AL,4514},{-1,-3213,2,18446744073709551615UL,9674,5UL,2774},{-0,-3042,-5,18446744073709551606UL,7565,0xC4B2DB7AL,4514},{3,-1698,-3,18446744073709551613UL,6957,1UL,14466},{-3,-3529,7,18446744073709551613UL,22752,9UL,6734},{-0,102,-7,0xF0FBBD52L,19309,0x938E5F9EL,22747},{-0,-3701,4,0UL,3157,0UL,18893}},{{1,-3175,4,0xBBE69ECAL,3969,0xA02C6AA2L,7958},{0,1488,0,0xF38E2187L,21755,18446744073709551612UL,16964},{-0,-3042,-5,18446744073709551606UL,7565,0xC4B2DB7AL,4514},{-0,-624,0,0xB1468326L,3179,0UL,16599},{2,-3516,-5,0x87B39429L,13772,0x8EB4B49BL,11378},{2,-3516,-5,0x87B39429L,13772,0x8EB4B49BL,11378},{-0,-624,0,0xB1468326L,3179,0UL,16599},{-0,-3042,-5,18446744073709551606UL,7565,0xC4B2DB7AL,4514}},{{-0,-3701,4,0UL,3157,0UL,18893},{-0,-3701,4,0UL,3157,0UL,18893},{-0,-3042,-5,18446744073709551606UL,7565,0xC4B2DB7AL,4514},{0,-1867,0,18446744073709551615UL,5543,18446744073709551608UL,21813},{-3,-1834,-7,9UL,5744,0UL,15521},{3,1444,7,0xC3B72B04L,19468,18446744073709551615UL,15520},{-0,102,-7,0xF0FBBD52L,19309,0x938E5F9EL,22747},{1,-3175,4,0xBBE69ECAL,3969,0xA02C6AA2L,7958}},{{2,-3516,-5,0x87B39429L,13772,0x8EB4B49BL,11378},{-0,102,-7,0xF0FBBD52L,19309,0x938E5F9EL,22747},{-1,-3213,2,18446744073709551615UL,9674,5UL,2774},{-0,-3701,4,0UL,3157,0UL,18893},{-1,-3213,2,18446744073709551615UL,9674,5UL,2774},{-0,102,-7,0xF0FBBD52L,19309,0x938E5F9EL,22747},{2,-3516,-5,0x87B39429L,13772,0x8EB4B49BL,11378},{1,-3175,4,0xBBE69ECAL,3969,0xA02C6AA2L,7958}},{{-0,102,-7,0xF0FBBD52L,19309,0x938E5F9EL,22747},{3,1444,7,0xC3B72B04L,19468,18446744073709551615UL,15520},{-3,-1834,-7,9UL,5744,0UL,15521},{0,-1867,0,18446744073709551615UL,5543,18446744073709551608UL,21813},{-0,-3042,-5,18446744073709551606UL,7565,0xC4B2DB7AL,4514},{-0,-3701,4,0UL,3157,0UL,18893},{-0,-3701,4,0UL,3157,0UL,18893},{-0,-3042,-5,18446744073709551606UL,7565,0xC4B2DB7AL,4514}},{{-0,-624,0,0xB1468326L,3179,0UL,16599},{2,-3516,-5,0x87B39429L,13772,0x8EB4B49BL,11378},{2,-3516,-5,0x87B39429L,13772,0x8EB4B49BL,11378},{-0,-624,0,0xB1468326L,3179,0UL,16599},{-0,-3042,-5,18446744073709551606UL,7565,0xC4B2DB7AL,4514},{0,1488,0,0xF38E2187L,21755,18446744073709551612UL,16964},{1,-3175,4,0xBBE69ECAL,3969,0xA02C6AA2L,7958},{-0,-3701,4,0UL,3157,0UL,18893}}}};
            int64_t l_537 = 1L;
            uint32_t l_648 = 9UL;
            int8_t ****l_659 = nullptr;
            int i, j, k;
            if (((safe_mod_func_int64_t_s_s((((safe_mul_func_int16_t_s_s((safe_rshift_func_int16_t_s_u(((((safe_unary_minus_func_uint64_t_u(((((p_68 > ((((nullptr != p_67) && (((*l_125)++) || (safe_mod_func_int16_t_s_s(((safe_mod_func_uint32_t_u_u((safe_add_func_uint64_t_u_u(((safe_rshift_func_int16_t_s_u(((safe_add_func_int32_t_s_s((((safe_mul_func_int16_t_s_s((safe_mul_func_int8_t_s_s((safe_add_func_uint64_t_u_u(0x35C488BB19F011E3LL, 0xBC1480928FA46B62LL)), ((l_116.f1 , (safe_lshift_func_int16_t_s_u(((safe_div_func_int32_t_s_s(((safe_mul_func_int16_t_s_s((((*l_151) = l_116.f4) , p_70), (safe_sub_func_int64_t_s_s((safe_sub_func_int8_t_s_s(((safe_rshift_func_int16_t_s_u((safe_add_func_uint8_t_u_u(((*l_161) &= 255UL), 0L)), 11)) , l_162), l_163[1])), (-1L))))) <= l_116.f3), l_162)) , 0xF2DFL), p_68))) ^ l_162))), 1L)) >= p_70) < g_99), 0xE1D9C254L)) == 0x81A1E77F117623E6LL), 10)) <= g_43), l_164[4][5][5])), (**l_107))) , 2L), 0x61E8L)))) , p_70) | p_70)) , (-3L)) & l_116.f6) , (*l_108)))) && l_116.f2) , 0x9C243D1EL) < 3L), (**l_107))), 0x683EL)) || p_70) >= l_163[1]), 9UL)) || (*l_108)))
            { /* block id: 53 */
                uint8_t *l_166 = &l_116.f3;
                int32_t l_187 = (-5L);
                float *l_189 = nullptr;
                int8_t *l_191 = &g_192;
                int32_t *l_193 = &l_162;
                uint64_t *l_202 = &g_7[1];
                uint64_t l_255 = 1UL;
                int16_t *l_310 = &g_48;
                int32_t l_317 = 1L;
                int32_t l_323[4][10] = {{1L,(-4L),(-4L),1L,0x54808C08L,0x750D2932L,1L,0x750D2932L,0x54808C08L,1L},{0x750D2932L,1L,0x750D2932L,0x54808C08L,1L,(-4L),(-4L),1L,0x54808C08L,0x750D2932L},{1L,1L,0x7B575E7DL,1L,0L,0x7B575E7DL,0L,1L,0x7B575E7DL,1L},{0L,(-4L),0x750D2932L,0L,0x54808C08L,0x54808C08L,0L,0x750D2932L,(-4L),0L}};
                struct S0 *l_341 = nullptr;
                int i, j;
                (*l_193) &= ((p_68 <= (l_165 = 0xC4E8F14B02CD46ABLL)) , ((p_68 == p_68) < ((p_68 , ((*l_166) ^= ((*l_161) ^= 1UL))) || ((safe_div_func_uint32_t_u_u((((*l_191) = (safe_rshift_func_int8_t_s_s(((*l_151) = 0xC0L), (safe_mod_func_int8_t_s_s(((((safe_lshift_func_uint8_t_u_u(((((((g_190 = ((((safe_lshift_func_uint16_t_u_u((safe_mul_func_uint8_t_u_u((((safe_sub_func_int64_t_s_s(((l_164[4][5][5] >= (safe_mul_func_int8_t_s_s(((safe_sub_func_uint32_t_u_u((safe_sub_func_uint8_t_u_u(p_68, 0xF0L)), g_43)) ^ p_70), g_109))) , p_70), p_68)) >= l_187) || (*p_67)), (**l_107))), 15)) && 0xEC821C75L) , l_188) == nullptr)) != l_187) < p_69) == l_187) , (-2L)) , l_187), 4)) , p_68) | g_95.f6) <= p_68), g_97[1]))))) < 1UL), p_68)) == g_7[1]))));
                if (((*p_67) = (safe_add_func_int32_t_s_s(l_116.f2, ((safe_add_func_uint32_t_u_u(((safe_div_func_uint16_t_u_u((((p_70 ^ (safe_div_func_uint64_t_u_u(((*l_202) = l_162), (safe_div_func_uint8_t_u_u(((*l_166) = 0x35L), (safe_add_func_uint16_t_u_u((safe_rshift_func_int8_t_s_s((((((((*l_151) = (p_70 < ((((~(((*l_108) & (*l_193)) == ((safe_rshift_func_uint16_t_u_s(((safe_unary_minus_func_int8_t_s(((*l_193) == (safe_div_func_uint64_t_u_u(g_190, (*l_193)))))) , g_43), 7)) <= g_95.f0))) , 1UL) & g_113) == 0x9BCDL))) || 0x48L) && l_163[1]) , g_215) == l_217) , g_152), 7)), 0xAE50L))))))) , (*l_193)) , (*l_193)), 1UL)) , 1UL), 0xF901617EL)) >= g_126)))))
                { /* block id: 65 */
                    int32_t *l_220 = &l_187;
                    volatile struct S1 l_223 = {-1,-429,5,18446744073709551607UL,16060,0x82243241L,18611};/* VOLATILE GLOBAL l_223 */
                    if ((*p_67))
                        break;
                    for (g_43 = 0; (g_43 == 7); g_43++)
                    { /* block id: 69 */
                        volatile struct S1 *l_222[5][5][8] = {{{&g_95,&g_95,&g_95,&g_95,&g_95,&g_95,&g_95,nullptr},{&g_95,&g_95,&g_95,nullptr,&g_95,&g_95,&g_95,&g_95},{&g_95,&g_95,nullptr,nullptr,&g_95,&g_95,&g_95,nullptr},{&g_95,&g_95,&g_95,&g_95,&g_95,&g_95,&g_95,nullptr},{&g_95,&g_95,&g_95,nullptr,&g_95,&g_95,&g_95,&g_95}},{{&g_95,&g_95,nullptr,nullptr,&g_95,&g_95,&g_95,nullptr},{&g_95,&g_95,&g_95,&g_95,&g_95,&g_95,&g_95,nullptr},{&g_95,&g_95,&g_95,nullptr,&g_95,&g_95,&g_95,&g_95},{&g_95,&g_95,nullptr,nullptr,&g_95,&g_95,&g_95,nullptr},{&g_95,&g_95,&g_95,&g_95,&g_95,&g_95,&g_95,nullptr}},{{&g_95,&g_95,&g_95,nullptr,&g_95,&g_95,&g_95,&g_95},{&g_95,&g_95,nullptr,&g_95,&g_95,&g_95,&g_95,&g_95},{nullptr,&g_95,nullptr,&g_95,&g_95,&g_95,nullptr,&g_95},{&g_95,&g_95,nullptr,&g_95,nullptr,&g_95,&g_95,&g_95},{&g_95,&g_95,&g_95,&g_95,&g_95,&g_95,&g_95,&g_95}},{{nullptr,&g_95,nullptr,&g_95,&g_95,&g_95,nullptr,&g_95},{&g_95,&g_95,nullptr,&g_95,nullptr,&g_95,&g_95,&g_95},{&g_95,&g_95,&g_95,&g_95,&g_95,&g_95,&g_95,&g_95},{nullptr,&g_95,nullptr,&g_95,&g_95,&g_95,nullptr,&g_95},{&g_95,&g_95,nullptr,&g_95,nullptr,&g_95,&g_95,&g_95}},{{&g_95,&g_95,&g_95,&g_95,&g_95,&g_95,&g_95,&g_95},{nullptr,&g_95,nullptr,&g_95,&g_95,&g_95,nullptr,&g_95},{&g_95,&g_95,nullptr,&g_95,nullptr,&g_95,&g_95,&g_95},{&g_95,&g_95,&g_95,&g_95,&g_95,&g_95,&g_95,&g_95},{nullptr,&g_95,nullptr,&g_95,&g_95,&g_95,nullptr,&g_95}}};
                        int32_t *l_224 = &l_116.f6;
                        int32_t *l_225[10][9][2] = {{{&l_116.f0,&l_116.f0},{nullptr,&l_165},{&l_116.f0,&l_165},{nullptr,&l_116.f0},{&l_116.f0,nullptr},{nullptr,nullptr},{&l_116.f0,nullptr},{nullptr,nullptr},{&l_116.f0,&l_116.f0}},{{nullptr,&l_165},{&l_116.f0,&l_165},{nullptr,&l_116.f0},{&l_116.f0,nullptr},{nullptr,nullptr},{&l_116.f0,nullptr},{nullptr,nullptr},{&l_116.f0,&l_116.f0},{nullptr,&l_165}},{{&l_116.f0,&l_165},{nullptr,&l_116.f0},{&l_116.f0,nullptr},{nullptr,nullptr},{&l_116.f0,nullptr},{nullptr,nullptr},{&l_116.f0,&l_116.f0},{nullptr,&l_165},{&l_116.f0,&l_165}},{{nullptr,&l_116.f0},{&l_116.f0,nullptr},{nullptr,nullptr},{&l_116.f0,nullptr},{nullptr,nullptr},{&l_116.f0,&l_116.f0},{nullptr,&l_165},{&l_116.f0,&l_165},{nullptr,&l_116.f0}},{{&l_116.f0,nullptr},{nullptr,nullptr},{&l_116.f0,nullptr},{nullptr,nullptr},{&l_116.f0,&l_116.f0},{nullptr,&l_165},{&l_116.f0,&l_165},{nullptr,&l_116.f0},{&l_116.f0,nullptr}},{{nullptr,nullptr},{&l_116.f0,nullptr},{nullptr,nullptr},{&l_116.f0,&l_116.f0},{nullptr,&l_165},{&l_116.f0,&l_165},{nullptr,&l_116.f0},{&l_116.f0,nullptr},{nullptr,nullptr}},{{&l_116.f0,nullptr},{nullptr,nullptr},{&l_116.f0,&l_116.f0},{nullptr,&l_165},{&l_116.f0,&l_165},{nullptr,&l_116.f0},{&l_116.f0,nullptr},{nullptr,nullptr},{&l_116.f0,nullptr}},{{nullptr,nullptr},{&l_116.f0,&l_116.f0},{nullptr,&l_165},{&l_116.f0,&l_165},{nullptr,&l_116.f0},{&l_116.f0,nullptr},{nullptr,nullptr},{&l_116.f0,nullptr},{nullptr,nullptr}},{{&l_116.f0,&l_116.f0},{nullptr,&l_165},{&l_116.f0,&l_165},{nullptr,&l_116.f0},{&l_116.f0,nullptr},{nullptr,nullptr},{&l_116.f0,nullptr},{nullptr,nullptr},{&l_116.f0,&l_116.f0}},{{nullptr,&l_165},{&l_116.f0,&l_165},{nullptr,&l_116.f0},{&l_116.f0,nullptr},{nullptr,nullptr},{&l_116.f0,nullptr},{nullptr,nullptr},{&l_116.f0,&l_116.f0},{nullptr,&l_165}}};
                        int i, j, k;
                        g_221[1] = l_220;
                        l_223 = g_95;
                        if ((*p_67))
                            break;
                        --l_228;
                    }
                    if ((*l_193))
                        break;
                }
                else
                { /* block id: 76 */
                    uint8_t *l_243 = nullptr;
                    int32_t *l_246 = nullptr;
                    int32_t *l_247 = &l_187;
                    int16_t *l_248[10][7][3] = {{{&g_48,&g_48,&g_48},{&g_48,&g_48,&g_48},{nullptr,&g_48,&g_48},{&g_48,&g_48,&g_48},{&g_48,&g_48,&g_48},{&g_48,&g_48,&g_48},{&g_48,&g_48,&g_48}},{{&g_48,&g_48,&g_48},{&g_48,nullptr,&g_48},{&g_48,&g_48,&g_48},{&g_48,&g_48,&g_48},{&g_48,nullptr,&g_48},{&g_48,&g_48,&g_48},{&g_48,&g_48,&g_48}},{{&g_48,&g_48,&g_48},{&g_48,nullptr,&g_48},{nullptr,&g_48,&g_48},{&g_48,&g_48,nullptr},{&g_48,nullptr,&g_48},{&g_48,&g_48,&g_48},{&g_48,&g_48,&g_48}},{{&g_48,&g_48,&g_48},{&g_48,&g_48,&g_48},{&g_48,&g_48,&g_48},{&g_48,&g_48,&g_48},{&g_48,&g_48,&g_48},{&g_48,&g_48,&g_48},{&g_48,&g_48,&g_48}},{{nullptr,&g_48,&g_48},{&g_48,&g_48,&g_48},{&g_48,&g_48,&g_48},{nullptr,&g_48,nullptr},{&g_48,&g_48,&g_48},{&g_48,&g_48,&g_48},{&g_48,&g_48,&g_48}},{{&g_48,&g_48,&g_48},{&g_48,&g_48,&g_48},{&g_48,&g_48,&g_48},{&g_48,&g_48,&g_48},{nullptr,&g_48,&g_48},{&g_48,&g_48,nullptr},{&g_48,&g_48,&g_48}},{{&g_48,&g_48,&g_48},{&g_48,&g_48,&g_48},{&g_48,&g_48,&g_48},{&g_48,&g_48,&g_48},{&g_48,&g_48,nullptr},{&g_48,&g_48,&g_48},{&g_48,&g_48,&g_48}},{{&g_48,&g_48,&g_48},{&g_48,&g_48,&g_48},{&g_48,&g_48,&g_48},{&g_48,nullptr,&g_48},{&g_48,&g_48,&g_48},{&g_48,&g_48,&g_48},{&g_48,&g_48,nullptr}},{{&g_48,&g_48,&g_48},{nullptr,&g_48,nullptr},{&g_48,&g_48,&g_48},{&g_48,&g_48,&g_48},{&g_48,&g_48,&g_48},{&g_48,&g_48,&g_48},{&g_48,&g_48,&g_48}},{{&g_48,&g_48,&g_48},{&g_48,&g_48,&g_48},{nullptr,&g_48,&g_48},{&g_48,&g_48,nullptr},{&g_48,&g_48,&g_48},{&g_48,&g_48,&g_48},{&g_48,&g_48,&g_48}}};
                    int64_t *l_250 = &g_251;
                    int64_t *l_252 = &g_253;
                    int32_t *l_256 = &l_116.f6;
                    int i, j, k;
                    (*l_256) ^= (safe_lshift_func_int8_t_s_s((safe_mod_func_int64_t_s_s((*l_193), (safe_div_func_int64_t_s_s((g_254 = (safe_mod_func_int64_t_s_s(((*l_252) = ((*l_250) ^= ((((l_164[4][5][5] > (safe_rshift_func_uint8_t_u_s(((g_49 ^ ((*l_191) = ((*l_151) = ((l_249[4][3] = (((l_241 , ((g_242 , ((*l_247) = ((*p_67) = ((l_243 != g_244) & l_164[1][4][5])))) ^ ((nullptr == &l_227[1][1][2]) && (*l_193)))) > p_68) || (*p_67))) <= 0x2349L)))) <= p_70), 4))) >= (*l_193)) > p_70) , p_70))), g_48))), l_255)))), p_70));
                }
                if ((*p_67))
                    continue;
                if ((((l_226 < (safe_rshift_func_uint16_t_u_s(g_95.f6, 2))) && l_241.f0) , (*p_67)))
                { /* block id: 88 */
                    int8_t l_267[7] = {0x67L,0xE9L,0xE9L,0x67L,0xE9L,0xE9L,0x67L};
                    int32_t *l_274 = &l_249[3][2];
                    uint8_t l_314 = 9UL;
                    int32_t l_321 = 1L;
                    int32_t l_322 = (-1L);
                    int32_t l_324 = (-1L);
                    int32_t l_328 = 0xE5205555L;
                    int i;
                    for (g_152 = (-12); (g_152 > (-18)); g_152 = safe_sub_func_int16_t_s_s(g_152, 1))
                    { /* block id: 91 */
                        return p_70;
                    }
                    for (p_70 = 0; (p_70 <= 4); p_70 += 1)
                    { /* block id: 96 */
                        int64_t *l_266[4][8] = {{&g_251,&g_253,&g_251,&g_251,&g_253,&g_251,&g_251,&g_253},{&g_253,&g_251,&g_251,&g_253,&g_251,&g_251,&g_253,&g_251},{&g_253,&g_253,&g_251,&g_253,&g_253,&g_251,&g_253,&g_253},{&g_251,&g_253,&g_251,&g_251,&g_253,&g_251,&g_251,&g_253}};
                        uint32_t **l_271 = &l_125;
                        int32_t l_283 = 0L;
                        int8_t **l_286 = &l_151;
                        int16_t *l_287 = &g_48;
                        int16_t *l_288 = &g_289;
                        int i, j;
                        l_274 = func_71(func_35((safe_sub_func_uint8_t_u_u((g_263 ^= 252UL), p_68)), p_68, (safe_sub_func_int8_t_s_s(((g_251 ^= p_70) >= g_43), (l_267[3] <= (g_242.f4 = ((safe_lshift_func_uint8_t_u_u((l_270 != (l_272 = ((*l_271) = ((l_249[4][3] = ((((9UL > p_70) < p_68) && p_70) , 0xA8607322L)) , l_188)))), 0)) || g_95.f4))))), g_273));
                        (*l_274) = ((safe_lshift_func_uint16_t_u_u((safe_sub_func_uint64_t_u_u((safe_mul_func_int16_t_s_s((((safe_div_func_int64_t_s_s((l_283 >= (((nullptr != &g_49) & 0UL) , g_47)), (safe_rshift_func_int16_t_s_u((l_116 , ((*l_288) |= ((*l_287) |= (&g_152 != ((*l_286) = l_191))))), 12)))) , (safe_div_func_uint32_t_u_u(0xC2127876L, 0x4AD35FB9L))) ^ 0x17181840L), 5UL)), p_68)), g_273.f3)) < g_251);
                        if ((*p_67))
                            break;
                        return p_68;
                    }
                    for (l_187 = 0; (l_187 <= 6); l_187 += 1)
                    { /* block id: 113 */
                        int8_t **l_302 = &l_151;
                        int16_t *l_309[3];
                        int32_t *l_318 = &g_113;
                        int32_t *l_319 = &l_311;
                        int32_t *l_320[4];
                        int i;
                        for (i = 0; i < 3; i++)
                            l_309[i] = nullptr;
                        for (i = 0; i < 4; i++)
                            l_320[i] = &l_226;
                        l_313 ^= (((-2L) == ((++(*l_166)) , (safe_rshift_func_uint16_t_u_u(((((*l_193) = (safe_lshift_func_uint8_t_u_s((((l_311 &= (safe_lshift_func_int16_t_s_s((*l_274), ((g_273.f5 > 6UL) > ((((safe_mul_func_uint16_t_u_u((((*l_302) = &g_192) == &g_192), (safe_mod_func_int64_t_s_s(0x230C5E8C4E4E6E4FLL, (safe_add_func_uint8_t_u_u((l_226 >= (safe_mul_func_int8_t_s_s((l_309[2] != l_310), g_49))), 0L)))))) > p_70) , g_95.f2) , g_7[1]))))) && g_152) >= 0xB271C1A9L), p_68))) | g_273.f6) > 0x7EB9098913C8C231LL), g_263)))) || l_312[3]);
                        --l_314;
                        l_325--;
                        g_329--;
                    }
                }
                else
                { /* block id: 123 */
                    for (l_116.f6 = 0; l_116.f6 < 2; l_116.f6 += 1)
                    {
                        l_163[l_116.f6] = (-8L);
                    }
                    for (g_43 = (-3); (g_43 >= 24); g_43++)
                    { /* block id: 127 */
                        const struct S1 l_334 = {-0,-1535,-5,9UL,22528,0x8A57F9CFL,13234};
                        struct S1 l_335 = {-3,2179,-6,0xB7FDE957L,8315,1UL,21973};
                        float **l_337 = &l_217;
                        float ***l_336[6] = {nullptr,nullptr,nullptr,nullptr,nullptr,nullptr};
                        int i;
                        l_335 = l_334;
                        l_338 = &g_215;
                        (*l_193) ^= (safe_add_func_int16_t_s_s((((*l_166) = 0xB4L) , (l_335.f0 |= ((*l_310) = (l_341 != nullptr)))), (((safe_mul_func_uint16_t_u_u((safe_add_func_int64_t_s_s((((safe_lshift_func_int8_t_s_s((l_348 != ((safe_sub_func_int16_t_s_s((0x313769372414C672LL & p_70), ((*l_348) = (&g_97[1] != (((safe_mod_func_uint8_t_u_u(((nullptr != &g_97[0]) , 0x40L), g_242.f6)) < g_273.f5) , &g_97[2]))))) , nullptr)), g_49)) && p_70) || g_242.f5), 0xA8BD92167C45ABC6LL)), 0x0DF4L)) && p_68) < l_353)));
                    }
                }
            }
            else
            { /* block id: 137 */
                int8_t ***l_363 = &l_362;
                int8_t **l_364 = &l_151;
                int8_t ***l_365 = nullptr;
                int8_t ***l_366 = &l_364;
                int64_t *l_367[4];
                int32_t l_383 = (-1L);
                uint8_t *l_384 = &l_116.f3;
                float ***l_385[3][7][2] = {{{&l_338,&l_338},{nullptr,&l_338},{&l_338,&l_338},{nullptr,&l_338},{&l_338,&l_338},{&l_338,nullptr},{nullptr,&l_338}},{{nullptr,&l_338},{&l_338,nullptr},{&l_338,&l_338},{&l_338,nullptr},{&l_338,&l_338},{nullptr,&l_338},{nullptr,nullptr}},{{&l_338,&l_338},{&l_338,&l_338},{&l_338,&l_338},{&l_338,&l_338},{&l_338,&l_338},{&l_338,&l_338},{&l_338,&l_338}}};
                int32_t l_395 = 0x78300466L;
                int32_t l_396[6][8][3] = {{{1L,0x0A62D922L,0L},{0xF45496BDL,1L,0x7A0C809BL},{1L,0x41F47C03L,(-5L)},{0x0847B170L,1L,0x5900BA01L},{0x9D2B86C4L,0x0A62D922L,(-5L)},{5L,(-10L),0x0847B170L},{(-1L),0x9D2B86C4L,5L},{0L,0L,1L}},{{0x76EB1A95L,(-2L),0x90EF32D9L},{(-7L),(-9L),0x5D42D8B9L},{4L,(-2L),4L},{0x4BAF42E4L,(-7L),0x12D965E7L},{1L,(-1L),0x9D2B86C4L},{0x10448B7FL,0x5900BA01L,1L},{(-1L),0x0A62D922L,0x5EFDCAA5L},{0x10448B7FL,1L,0xA2DB91D4L}},{{1L,(-1L),5L},{0x4BAF42E4L,0xF45496BDL,0x5900BA01L},{4L,4L,(-2L)},{(-7L),(-10L),0xEB5BE354L},{0x76EB1A95L,0xD504F892L,1L},{0L,(-7L),0x7A0C809BL},{(-1L),(-1L),0x90EF32D9L},{5L,0x53F56492L,1L}},{{0x9D2B86C4L,(-2L),0L},{0x0847B170L,0xA746F59FL,0x10448B7FL},{1L,0x9D2B86C4L,0L},{0xF45496BDL,0x4BAF42E4L,1L},{1L,4L,0x90EF32D9L},{1L,1L,0x7A0C809BL},{6L,0x4C7E0C1EL,1L},{0x4BAF42E4L,1L,0xEB5BE354L}},{{(-1L),1L,(-2L)},{5L,0x5900BA01L,0x5900BA01L},{(-2L),0xD504F892L,5L},{0x7AB10C8DL,0xA746F59FL,0xA2DB91D4L},{(-1L),(-2L),0x5EFDCAA5L},{0L,0L,1L},{4L,(-2L),0x9D2B86C4L},{0x5900BA01L,0xA746F59FL,0x12D965E7L}},{{6L,0xD504F892L,4L},{0xF45496BDL,0x5900BA01L,0x5D42D8B9L},{0x41F47C03L,1L,0x90EF32D9L},{0x10448B7FL,1L,1L},{4L,0x4C7E0C1EL,5L},{0x0847B170L,1L,0x0847B170L},{(-1L),4L,(-5L)},{0L,0x4BAF42E4L,0x5900BA01L}}};
                int8_t l_424[7] = {0x80L,(-1L),(-1L),0x80L,(-1L),(-1L),0x80L};
                uint16_t l_431 = 0x9051L;
                int32_t *l_516 = &l_165;
                const struct S1 l_540 = {-0,2481,3,0UL,3527,18446744073709551606UL,11150};
                int32_t **l_586 = &g_221[8];
                int32_t *l_587[8];
                int i, j, k;
                for (i = 0; i < 4; i++)
                    l_367[i] = &g_253;
                for (i = 0; i < 8; i++)
                    l_587[i] = &l_313;
                if (((*p_67) = (safe_lshift_func_uint16_t_u_u((g_242.f4 , 0xF04DL), (((safe_rshift_func_uint16_t_u_s(l_116.f5, 9)) , nullptr) == (((18446744073709551606UL >= 4L) , (safe_sub_func_float_f_f((+(((*p_67) , (((g_253 |= (safe_unary_minus_func_int32_t_s((((*l_363) = l_362) == ((*l_366) = l_364))))) , p_68) > 0x1.D6F629p+39)) < (*l_108))), 0x3.6p+1))) , nullptr))))))
                { /* block id: 142 */
                    float *l_372 = nullptr;
                    float *l_373 = nullptr;
                    float *l_374 = &g_375[0];
                    float *l_381 = &g_382;
                    l_383 = ((safe_add_func_float_f_f((safe_div_func_float_f_f(((*g_215) = p_70), (l_249[4][3] = ((*l_374) = (nullptr != &g_111))))), l_164[4][5][5])) < (safe_sub_func_float_f_f(g_378, ((*l_381) = ((~(l_226 ^= (nullptr != l_380))) , p_69)))));
                }
                else
                { /* block id: 149 */
                    float ***l_386[4] = {&l_338,&l_338,&l_338,&l_338};
                    int32_t l_398[1];
                    uint32_t l_427 = 4294967294UL;
                    int32_t *l_434 = &l_165;
                    int i;
                    for (i = 0; i < 1; i++)
                        l_398[i] = (-6L);
                    if (((l_384 == nullptr) == p_68))
                    { /* block id: 150 */
                        float ****l_387 = nullptr;
                        float ****l_388 = &l_386[3];
                        (*p_67) ^= (((g_289 , l_385[0][6][0]) == ((*l_388) = l_386[3])) , (-1L));
                    }
                    else
                    { /* block id: 153 */
                        int32_t *l_389 = nullptr;
                        int32_t *l_390 = nullptr;
                        int32_t l_391 = 0L;
                        int32_t *l_392 = &l_383;
                        int32_t *l_393 = &l_227[1][1][2];
                        int32_t *l_394[7];
                        int32_t l_397 = (-4L);
                        float l_428[3][2] = {{0xE.4CA7BCp+36,0xE.4CA7BCp+36},{0xA.A588A0p+14,0xE.4CA7BCp+36},{0xE.4CA7BCp+36,0xA.A588A0p+14}};
                        float l_430[9];
                        int i, j;
                        for (i = 0; i < 7; i++)
                            l_394[i] = &l_391;
                        for (i = 0; i < 9; i++)
                            l_430[i] = 0x9.D6C2FFp-70;
                        ++l_401;
                        l_398[0] = ((l_404[2][2][5] , (((((g_99 &= g_46) & (safe_rshift_func_uint16_t_u_s(g_4[4][5], 6))) , ((safe_rshift_func_uint8_t_u_u(((safe_lshift_func_int16_t_s_s(((~(safe_mul_func_uint16_t_u_u((safe_add_func_int64_t_s_s(((safe_add_func_uint16_t_u_u(((*g_244) != 1UL), (g_273 , ((((*l_161) = ((((safe_rshift_func_uint16_t_u_u((((((((safe_mod_func_int32_t_s_s(l_424[3], (safe_mul_func_int16_t_s_s(((((p_68 > p_68) && g_273.f1) , p_70) > g_273.f5), 0x7E27L)))) && 4294967295UL) > p_70) ^ 1L) && 0xE763AC1735D05901LL) | 0L) || g_251), p_70)) || l_404[2][2][5].f4) & (-2L)) > g_4[8][2])) ^ 1UL) == 0x7CL)))) < 0x98C6L), l_353)), (*l_392)))) >= (*l_108)), 6)) > l_427), g_289)) && p_70)) > 0x8D60L) || p_68)) , (*p_67));
                        if ((*p_67))
                            break;
                        ++l_431;
                    }
                    (*l_434) &= ((*p_67) > ((l_116.f0 = p_68) ^ l_241.f6));
                    if ((*p_67))
                        break;
                    (*g_215) = (safe_mul_func_float_f_f(((((safe_sub_func_float_f_f(((g_242 , ((0xA.E5B273p-43 >= ((*g_215) < l_404[2][2][5].f5)) <= (safe_sub_func_float_f_f(((((safe_add_func_float_f_f(((safe_sub_func_int8_t_s_s(p_70, 0xD0L)) , (!(((6L || ((*l_384)++)) , &g_215) != &g_215))), l_383)) > 0x1.4p+1) != 0x7.B0BE39p+36) != (-0x3.0p-1)), (*l_434))))) <= l_241.f0), (*l_434))) > 0x8.84F594p+33) > l_448[0]) > (*g_215)), l_400));
                }
                for (l_399 = (-20); (l_399 >= (-5)); ++l_399)
                { /* block id: 169 */
                    uint64_t l_464 = 1UL;
                    int32_t *l_465 = &l_165;
                    int32_t l_505 = 0xE8F13ED9L;
                    int32_t l_506[8] = {0x86353B60L,0xBD639086L,0x86353B60L,0xBD639086L,0x86353B60L,0xBD639086L,0x86353B60L,0xBD639086L};
                    float **l_514 = &g_215;
                    float *** const l_513 = &l_514;
                    float *** const *l_512 = &l_513;
                    uint64_t *l_524 = nullptr;
                    uint64_t *l_525[4] = {&g_7[5],&g_7[5],&g_7[5],&g_7[5]};
                    int32_t *l_543 = &l_311;
                    int8_t **l_545 = &g_482;
                    int i;
                    (*l_465) &= ((((safe_add_func_int32_t_s_s(((safe_lshift_func_int16_t_s_s(p_70, l_431)) && (safe_mod_func_int8_t_s_s(((**l_364) = (((((((((*l_161) = 246UL) || 9L) == ((g_273 , (0x874F914E6BDEFF4ALL < (p_68 | (safe_lshift_func_uint16_t_u_s(((l_311 = (safe_div_func_uint32_t_u_u((g_242.f3 & ((safe_mul_func_int16_t_s_s((((((l_396[2][1][1] != p_70) < g_463[6][1]) || 0x1BD2F9DDL) && l_241.f5) > g_190), 0x274CL)) & g_242.f6)), g_242.f4))) , 0x8258L), g_152))))) && p_70)) > l_464) , (*p_67)) < (*l_108)) , p_70) != l_464)), 0x0FL))), g_273.f1)) || 65530UL) && g_242.f0) <= p_70);
                    if ((*p_67))
                    { /* block id: 174 */
                        uint32_t l_470 = 18446744073709551607UL;
                        int64_t *l_473 = nullptr;
                        int8_t * const * const **l_502 = &l_492;
                        int32_t *l_503 = &l_383;
                        int32_t *l_504[2];
                        int i;
                        for (i = 0; i < 2; i++)
                            l_504[i] = &l_116.f0;
                        l_227[1][1][2] = (l_395 = ((safe_div_func_float_f_f((**l_107), (safe_add_func_float_f_f(((0xA.6CAA68p-75 < ((*g_215) = (*g_215))) != l_470), (safe_mul_func_float_f_f((0xA.AB0E71p+25 != ((l_473 != ((p_70 <= ((safe_rshift_func_int8_t_s_s(((((((g_476[5][1] != ((*l_502) = l_492)) >= l_470) , nullptr) == &g_221[1]) >= 0x5AL) | p_68), 3)) < (*g_480))) , nullptr)) , p_70)), g_7[8])))))) < p_70));
                        g_509[5][0][0]++;
                    }
                    else
                    { /* block id: 180 */
                        struct S0 *l_515 = &g_273;
                        (*p_67) &= (nullptr != l_512);
                        l_516 = func_35(g_109, (**g_484), (**l_107), ((*l_515) = l_116));
                        if (l_241.f1)
                            break;
                        if ((*l_516))
                            continue;
                    }
                    for (p_70 = 0; (p_70 <= 1); p_70 += 1)
                    { /* block id: 189 */
                        float l_519 = 0x0.6p+1;
                        int16_t *l_520 = &g_289;
                        int32_t **l_521 = &l_465;
                        (*l_516) = ((g_273.f5 < ((safe_add_func_uint16_t_u_u((&g_221[1] == &p_67), ((*l_520) = ((*p_67) == (p_70 | (*p_67)))))) < ((p_68 != p_70) > (*g_244)))) == (*l_108));
                        (*l_521) = (p_67 = p_67);
                    }
                    if (((*l_465) = (safe_mul_func_uint8_t_u_u((*l_108), (((--g_7[1]) || 0x51746D8D456DB145LL) >= ((safe_sub_func_uint32_t_u_u(((((8L >= (!(*l_465))) > ((*l_543) &= (safe_add_func_uint16_t_u_u((safe_mul_func_uint16_t_u_u(g_499, (**l_107))), ((safe_add_func_uint32_t_u_u((l_537 , ((((((**l_107) >= ((*l_217) = (safe_div_func_float_f_f((0xE.D02DF7p-48 > 0x0.8p+1), 0x0.1p-1)))) , l_540) , l_541) == l_541) != (*g_244))), g_542)) < (*g_491)))))) || g_495) == (*l_516)), 1L)) <= g_544))))))
                    { /* block id: 199 */
                        int8_t *****l_574 = &g_573;
                        int32_t l_584 = 0x162EB888L;
                        (*l_465) |= (((*l_574) = (((l_545 = &l_380) == ((safe_lshift_func_int8_t_s_u((((**g_481) ^ (safe_div_func_int64_t_s_s((safe_mul_func_uint16_t_u_u((safe_lshift_func_uint8_t_u_u(((((*l_543) = g_544) && (~(0L ^ (--(*l_348))))) != (safe_sub_func_int32_t_s_s(((((0x13L | ((*g_480) < (safe_div_func_int64_t_s_s((safe_mul_func_uint8_t_u_u((((safe_sub_func_uint16_t_u_u((((safe_div_func_uint16_t_u_u((p_68 = (g_273.f1 <= (safe_unary_minus_func_int8_t_s((5L || (safe_rshift_func_uint16_t_u_u((safe_add_func_uint8_t_u_u(((+((g_48 || 0L) <= g_497)) ^ l_164[2][2][6]), (-4L))), 12))))))), 7L)) & 0xCE673E7AB37DC675LL) & 0x93L), g_497)) != g_499) ^ 0x0CL), g_113)), g_46)))) || p_68) >= p_70) ^ 3L), l_399))), 6)), 0x1F3FL)), 0x1EF28A8ACC496931LL))) && p_68), 7)) , nullptr)) , g_573)) == &l_366);
                        l_584 = (p_69 = ((((((((&l_513 != ((safe_mod_func_int8_t_s_s(0x7CL, l_164[4][5][5])) , l_577)) || ((p_68 != ((*l_384)++)) , 0x725139CBL)) || p_68) > (g_7[6] |= g_542)) , (safe_mul_func_float_f_f((l_116.f0 = ((****l_577) = 0x1.2p-1)), 0x1.Ap-1))) < l_584) <= 0x6.2E1990p+59) != g_585));
                    }
                    else
                    { /* block id: 212 */
                        (*l_107) = (*l_107);
                    }
                }
                (*l_586) = p_67;
                l_116.f0 &= (*p_67);
            }
            for (g_273.f2 = 0; (g_273.f2 != 24); g_273.f2++)
            { /* block id: 221 */
                uint64_t l_599[2][4][6] = {{{1UL,18446744073709551614UL,0x07761BF09A8C3513LL,18446744073709551615UL,0x40F4F157C6E60966LL,0x47812EFBE0CEFA9CLL},{18446744073709551615UL,0x40F4F157C6E60966LL,0x47812EFBE0CEFA9CLL,0x1A4DFEBEB06061CFLL,0x1A4DFEBEB06061CFLL,0x47812EFBE0CEFA9CLL},{0x1A4DFEBEB06061CFLL,0x1A4DFEBEB06061CFLL,0x47812EFBE0CEFA9CLL,0x40F4F157C6E60966LL,18446744073709551615UL,0x47812EFBE0CEFA9CLL},{0x40F4F157C6E60966LL,18446744073709551615UL,0x47812EFBE0CEFA9CLL,18446744073709551615UL,0x40F4F157C6E60966LL,0x47812EFBE0CEFA9CLL}},{{18446744073709551615UL,0x40F4F157C6E60966LL,0x47812EFBE0CEFA9CLL,0x1A4DFEBEB06061CFLL,0x1A4DFEBEB06061CFLL,0x47812EFBE0CEFA9CLL},{0x1A4DFEBEB06061CFLL,0x1A4DFEBEB06061CFLL,0x47812EFBE0CEFA9CLL,0x40F4F157C6E60966LL,18446744073709551615UL,0x47812EFBE0CEFA9CLL},{0x40F4F157C6E60966LL,18446744073709551615UL,0x47812EFBE0CEFA9CLL,18446744073709551615UL,0x40F4F157C6E60966LL,0x47812EFBE0CEFA9CLL},{18446744073709551615UL,0x40F4F157C6E60966LL,0x47812EFBE0CEFA9CLL,0x1A4DFEBEB06061CFLL,0x1A4DFEBEB06061CFLL,0x47812EFBE0CEFA9CLL}}};
                int32_t l_644[3];
                uint32_t l_645 = 4294967295UL;
                int i, j, k;
                for (i = 0; i < 3; i++)
                    l_644[i] = 1L;
                for (g_273.f6 = 0; (g_273.f6 <= 4); g_273.f6 += 1)
                { /* block id: 224 */
                    int64_t *l_592 = &l_537;
                    uint8_t *l_594 = nullptr;
                    uint16_t l_595 = 65535UL;
                    int i, j, k;
                    if ((safe_add_func_int32_t_s_s(l_164[g_273.f6][(g_273.f6 + 1)][g_273.f6], ((((l_592 != l_593) > l_164[g_273.f6][(g_273.f6 + 1)][g_273.f6]) , l_594) != nullptr))))
                    { /* block id: 225 */
                        const uint32_t l_596 = 0xBEC64373L;
                        (*p_67) = l_595;
                        if (l_596)
                            continue;
                        (*p_67) ^= ((*g_480) == (safe_mul_func_int8_t_s_s(0x1AL, p_68)));
                        if (l_599[0][2][5])
                            continue;
                    }
                    else
                    { /* block id: 230 */
                        if (l_448[0])
                            break;
                    }
                    if (l_599[0][1][0])
                        continue;
                }
                for (l_116.f4 = 2; (l_116.f4 >= 0); l_116.f4 -= 1)
                { /* block id: 237 */
                    int16_t *l_608 = nullptr;
                    int16_t *l_609[2];
                    int32_t l_610[10] = {(-1L),(-1L),(-1L),(-1L),(-1L),(-1L),(-1L),(-1L),(-1L),(-1L)};
                    int32_t l_631 = 8L;
                    int16_t **l_632 = &l_609[0];
                    int8_t l_643 = (-1L);
                    int i;
                    for (i = 0; i < 2; i++)
                        l_609[i] = &g_289;
                    if (((((safe_lshift_func_int8_t_s_u((safe_mod_func_uint16_t_u_u(((((safe_div_func_uint8_t_u_u(((++(*l_161)) & (((l_249[4][3] = (p_67 == &l_311)) == (((l_610[2] ^ (safe_lshift_func_int16_t_s_s((safe_add_func_int8_t_s_s((-1L), l_448[0])), ((p_68 , (nullptr == &g_111)) == (safe_lshift_func_uint16_t_u_s(p_70, g_7[5])))))) , 0UL) ^ 1UL)) , 0x23L)), p_70)) && 0x3DD0L) == p_68) & 255UL), l_610[2])), 4)) && 0x09FF39EFF07DD5C3LL) || p_68) | p_68))
                    { /* block id: 240 */
                        int8_t ****l_617 = nullptr;
                        int8_t *****l_618[10][8] = {{&l_617,&g_573,&l_617,nullptr,&l_617,&g_573,&l_617,&l_617},{nullptr,&l_617,&l_617,&g_573,&g_573,&g_573,&l_617,&l_617},{&l_617,&l_617,&l_617,nullptr,&g_573,&l_617,&g_573,nullptr},{nullptr,&l_617,nullptr,&l_617,&l_617,&g_573,&g_573,&g_573},{&l_617,&l_617,&l_617,&l_617,&l_617,&g_573,&l_617,nullptr},{&l_617,&g_573,&l_617,nullptr,&l_617,&g_573,&l_617,&l_617},{nullptr,&l_617,&l_617,&g_573,&g_573,&g_573,&l_617,&l_617},{&l_617,&l_617,&l_617,nullptr,&g_573,&l_617,&g_573,nullptr},{nullptr,&l_617,nullptr,&l_617,&l_617,&g_573,&g_573,&g_573},{&l_617,&l_617,&l_617,&l_617,&l_617,&g_573,&l_617,nullptr}};
                        int32_t *l_621[6] = {&l_400,&l_400,&l_400,&l_400,&l_400,&l_400};
                        int i, j;
                        l_619 = l_617;
                        l_162 &= ((*p_67) = l_599[0][1][2]);
                        l_631 |= ((g_499 , (-1L)) || (((*p_67) = ((l_610[2] == (safe_sub_func_int32_t_s_s((safe_mul_func_int8_t_s_s((safe_mul_func_uint16_t_u_u(((l_163[0] ^ (safe_rshift_func_uint8_t_u_u((l_353 < p_68), 2))) == 4294967293UL), l_630[1])), ((l_610[1] <= (-2L)) < g_273.f0))), 0UL))) && l_610[6])) , p_68));
                        if ((*p_67))
                            continue;
                    }
                    else
                    { /* block id: 247 */
                        return l_162;
                    }
                    if ((((*l_632) = &g_48) == nullptr))
                    { /* block id: 251 */
                        int32_t *l_633 = &l_610[2];
                        int32_t *l_634 = &l_311;
                        int32_t *l_635 = nullptr;
                        int32_t *l_636 = &l_610[2];
                        int32_t *l_637 = nullptr;
                        int32_t *l_638 = &l_116.f0;
                        int32_t *l_639 = &l_249[4][3];
                        int32_t *l_640 = &l_226;
                        int32_t *l_641 = &l_249[4][3];
                        int32_t *l_642[10][4][5] = {{{&g_273.f6,nullptr,&l_227[1][1][2],&l_249[4][3],&g_113},{nullptr,&l_249[3][1],&g_273.f0,&g_113,&l_249[3][1]},{&g_273.f6,&l_116.f0,&g_113,&l_610[4],&l_610[2]},{&l_226,&l_610[3],&l_165,&l_227[1][1][2],&l_249[3][1]}},{{&g_113,&g_113,&l_226,&l_165,&g_113},{&l_311,&l_165,&g_113,&l_227[1][1][2],&l_165},{&l_162,&g_113,&l_227[1][1][2],&l_610[4],nullptr},{nullptr,&g_273.f6,&g_113,&g_113,&g_273.f6}},{{&l_249[2][1],&l_116.f0,&l_226,&l_249[4][3],&l_610[2]},{&l_116.f0,&g_273.f6,&l_165,&l_116.f6,&l_610[3]},{nullptr,nullptr,nullptr,&l_227[1][1][2],nullptr},{&l_116.f0,nullptr,nullptr,&l_165,&l_226}},{{&l_610[6],&g_273.f6,&g_113,&g_273.f6,nullptr},{&g_113,&l_610[5],&l_227[1][1][2],nullptr,&l_610[5]},{nullptr,&l_249[4][3],&l_227[1][1][2],&g_273.f6,&g_273.f0},{&l_311,&l_631,&l_249[3][1],&l_165,nullptr}},{{nullptr,&g_43,&l_227[1][1][2],&l_227[1][1][2],&g_43},{&l_400,nullptr,&l_227[1][1][2],&l_165,&l_226},{&l_610[2],&g_43,&g_113,&l_610[2],&g_273.f6},{&g_113,&l_631,nullptr,nullptr,&l_631}},{{&l_610[2],&l_249[4][3],nullptr,&l_116.f0,&g_273.f0},{&l_400,&l_610[5],&l_249[3][1],&l_311,&l_631},{nullptr,&g_273.f6,&l_227[1][0][2],&l_227[1][1][2],&g_273.f6},{&l_311,nullptr,nullptr,&l_311,&l_226}},{{nullptr,nullptr,&g_113,&l_116.f0,&g_43},{&g_113,nullptr,nullptr,nullptr,nullptr},{&l_610[6],&l_249[4][3],&l_227[1][0][2],&l_610[2],&g_273.f0},{&l_116.f0,nullptr,&l_249[3][1],&l_165,&l_610[5]}},{{nullptr,nullptr,nullptr,&l_227[1][1][2],nullptr},{&l_116.f0,nullptr,nullptr,&l_165,&l_226},{&l_610[6],&g_273.f6,&g_113,&g_273.f6,nullptr},{&g_113,&l_610[5],&l_227[1][1][2],nullptr,&l_610[5]}},{{nullptr,&l_249[4][3],&l_227[1][1][2],&g_273.f6,&g_273.f0},{&l_311,&l_631,&l_249[3][1],&l_165,nullptr},{nullptr,&g_43,&l_227[1][1][2],&l_227[1][1][2],&g_43},{&l_400,nullptr,&l_227[1][1][2],&l_165,&l_226}},{{&l_610[2],&g_43,&g_113,&l_610[2],&g_273.f6},{&g_113,&l_631,nullptr,nullptr,&l_631},{&l_610[2],&l_249[4][3],nullptr,&l_116.f0,&g_273.f0},{&l_400,&l_610[5],&l_249[3][1],&l_311,&l_631}}};
                        int i, j, k;
                        l_645++;
                        ++l_648;
                    }
                    else
                    { /* block id: 254 */
                        uint64_t l_660 = 0x595E8A42F31794A5LL;
                        (*p_67) = (((safe_div_func_uint64_t_u_u(g_126, (safe_add_func_int8_t_s_s((&l_188 != &l_125), ((*p_67) & (((((((l_599[0][2][5] & (l_655 > (((+((safe_add_func_uint16_t_u_u(0x0E22L, ((p_68 & ((&g_476[5][1] == l_659) < (*g_482))) == l_227[0][1][7]))) && p_70)) ^ (*p_67)) , p_70))) == g_273.f0) || l_448[0]) == (**l_107)) , (-0x1.Fp-1)) , (**g_477)) ^ l_660)))))) && (*p_67)) >= 0x5804L);
                        return p_68;
                    }
                }
                l_313 = (g_95 , (safe_sub_func_float_f_f((l_679 = (safe_sub_func_float_f_f(l_116.f5, ((safe_div_func_float_f_f(((**l_338) = (l_667 != ((**l_107) != (l_668 > (p_69 = (safe_sub_func_float_f_f((nullptr != l_671), ((((safe_sub_func_float_f_f(p_69, (((safe_mul_func_float_f_f(((*g_215) != p_70), l_678)) != (*g_215)) < (*g_215)))) != (*g_215)) > (*g_215)) <= 0x2.2p+1)))))))), 0xE.4108ADp+38)) != l_312[2])))), p_70)));
            }
            return g_7[5];
        }
        --l_690[1][0][1];
    }
    return l_678;
}


/* ------------------------------------------ */
/* 
 * reads : g_48
 * writes: g_48
 */
static int32_t * func_71(int32_t * p_72)
{ /* block id: 17 */
    int32_t *l_75 = &g_43;
    for (g_48 = 0; (g_48 <= 17); g_48++)
    { /* block id: 20 */
        p_72 = l_75;
    }
    return l_75;
}




/* ---------------------------------------- */
int main (int argc, char* argv[])
{
    int i, j, k;
    int print_hash_value = 0;
    if (argc == 2 && strcmp(argv[1], "1") == 0) print_hash_value = 1;
    platform_main_begin();
    crc32_gentab();
    func_1();
    for (i = 0; i < 9; i++)
    {
        for (j = 0; j < 6; j++)
        {
            transparent_crc(g_4[i][j], "g_4[i][j]", print_hash_value);
            if (print_hash_value) printf("index = [%d][%d]\n", i, j);

        }
    }
    for (i = 0; i < 9; i++)
    {
        transparent_crc(g_7[i], "g_7[i]", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_40, "g_40", print_hash_value);
    transparent_crc(g_43, "g_43", print_hash_value);
    transparent_crc(g_46, "g_46", print_hash_value);
    transparent_crc(g_47, "g_47", print_hash_value);
    transparent_crc(g_48, "g_48", print_hash_value);
    transparent_crc(g_49, "g_49", print_hash_value);
    transparent_crc(g_95.f0, "g_95.f0", print_hash_value);
    transparent_crc(g_95.f1, "g_95.f1", print_hash_value);
    transparent_crc(g_95.f2, "g_95.f2", print_hash_value);
    transparent_crc(g_95.f3, "g_95.f3", print_hash_value);
    transparent_crc(g_95.f4, "g_95.f4", print_hash_value);
    transparent_crc(g_95.f5, "g_95.f5", print_hash_value);
    transparent_crc(g_95.f6, "g_95.f6", print_hash_value);
    for (i = 0; i < 3; i++)
    {
        transparent_crc(g_97[i], "g_97[i]", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_99, "g_99", print_hash_value);
    transparent_crc(g_109, "g_109", print_hash_value);
    transparent_crc(g_113, "g_113", print_hash_value);
    transparent_crc(g_126, "g_126", print_hash_value);
    transparent_crc(g_152, "g_152", print_hash_value);
    transparent_crc(g_190, "g_190", print_hash_value);
    transparent_crc(g_192, "g_192", print_hash_value);
    transparent_crc_bytes (&g_216, sizeof(g_216), "g_216", print_hash_value);
    transparent_crc(g_242.f0, "g_242.f0", print_hash_value);
    transparent_crc(g_242.f1, "g_242.f1", print_hash_value);
    transparent_crc(g_242.f2, "g_242.f2", print_hash_value);
    transparent_crc(g_242.f3, "g_242.f3", print_hash_value);
    transparent_crc(g_242.f4, "g_242.f4", print_hash_value);
    transparent_crc(g_242.f5, "g_242.f5", print_hash_value);
    transparent_crc(g_242.f6, "g_242.f6", print_hash_value);
    transparent_crc(g_245, "g_245", print_hash_value);
    transparent_crc(g_251, "g_251", print_hash_value);
    transparent_crc(g_253, "g_253", print_hash_value);
    transparent_crc(g_254, "g_254", print_hash_value);
    transparent_crc(g_263, "g_263", print_hash_value);
    transparent_crc(g_273.f0, "g_273.f0", print_hash_value);
    transparent_crc(g_273.f1, "g_273.f1", print_hash_value);
    transparent_crc(g_273.f2, "g_273.f2", print_hash_value);
    transparent_crc(g_273.f3, "g_273.f3", print_hash_value);
    transparent_crc(g_273.f4, "g_273.f4", print_hash_value);
    transparent_crc(g_273.f5, "g_273.f5", print_hash_value);
    transparent_crc(g_273.f6, "g_273.f6", print_hash_value);
    transparent_crc(g_289, "g_289", print_hash_value);
    transparent_crc(g_329, "g_329", print_hash_value);
    for (i = 0; i < 3; i++)
    {
        transparent_crc_bytes(&g_375[i], sizeof(g_375[i]), "g_375[i]", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_378, "g_378", print_hash_value);
    transparent_crc_bytes (&g_382, sizeof(g_382), "g_382", print_hash_value);
    for (i = 0; i < 10; i++)
    {
        for (j = 0; j < 2; j++)
        {
            transparent_crc(g_463[i][j], "g_463[i][j]", print_hash_value);
            if (print_hash_value) printf("index = [%d][%d]\n", i, j);

        }
    }
    transparent_crc(g_495, "g_495", print_hash_value);
    transparent_crc(g_497, "g_497", print_hash_value);
    transparent_crc(g_499, "g_499", print_hash_value);
    transparent_crc(g_501, "g_501", print_hash_value);
    for (i = 0; i < 7; i++)
    {
        for (j = 0; j < 2; j++)
        {
            for (k = 0; k < 1; k++)
            {
                transparent_crc(g_509[i][j][k], "g_509[i][j][k]", print_hash_value);
                if (print_hash_value) printf("index = [%d][%d][%d]\n", i, j, k);

            }
        }
    }
    transparent_crc(g_542, "g_542", print_hash_value);
    transparent_crc(g_544, "g_544", print_hash_value);
    transparent_crc(g_585, "g_585", print_hash_value);
    transparent_crc(g_828.f0, "g_828.f0", print_hash_value);
    transparent_crc(g_828.f1, "g_828.f1", print_hash_value);
    transparent_crc(g_828.f2, "g_828.f2", print_hash_value);
    transparent_crc(g_828.f3, "g_828.f3", print_hash_value);
    transparent_crc(g_828.f4, "g_828.f4", print_hash_value);
    transparent_crc(g_828.f5, "g_828.f5", print_hash_value);
    transparent_crc(g_828.f6, "g_828.f6", print_hash_value);
    transparent_crc_bytes (&g_947, sizeof(g_947), "g_947", print_hash_value);
    transparent_crc_bytes (&g_983, sizeof(g_983), "g_983", print_hash_value);
    for (i = 0; i < 3; i++)
    {
        transparent_crc(g_1018[i], "g_1018[i]", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_1020, "g_1020", print_hash_value);
    transparent_crc_bytes (&g_1052, sizeof(g_1052), "g_1052", print_hash_value);
    transparent_crc(g_1162, "g_1162", print_hash_value);
    transparent_crc(g_1208, "g_1208", print_hash_value);
    transparent_crc(g_1232, "g_1232", print_hash_value);
    transparent_crc(g_1340, "g_1340", print_hash_value);
    transparent_crc(g_1346, "g_1346", print_hash_value);
    transparent_crc(g_1347, "g_1347", print_hash_value);
    transparent_crc(g_1389.f0, "g_1389.f0", print_hash_value);
    transparent_crc(g_1389.f1, "g_1389.f1", print_hash_value);
    transparent_crc(g_1389.f2, "g_1389.f2", print_hash_value);
    transparent_crc(g_1389.f3, "g_1389.f3", print_hash_value);
    transparent_crc(g_1389.f4, "g_1389.f4", print_hash_value);
    transparent_crc(g_1389.f5, "g_1389.f5", print_hash_value);
    transparent_crc(g_1389.f6, "g_1389.f6", print_hash_value);
    for (i = 0; i < 1; i++)
    {
        for (j = 0; j < 4; j++)
        {
            transparent_crc(g_1429[i][j].f0, "g_1429[i][j].f0", print_hash_value);
            transparent_crc(g_1429[i][j].f1, "g_1429[i][j].f1", print_hash_value);
            transparent_crc(g_1429[i][j].f2, "g_1429[i][j].f2", print_hash_value);
            transparent_crc(g_1429[i][j].f3, "g_1429[i][j].f3", print_hash_value);
            transparent_crc(g_1429[i][j].f4, "g_1429[i][j].f4", print_hash_value);
            transparent_crc(g_1429[i][j].f5, "g_1429[i][j].f5", print_hash_value);
            transparent_crc(g_1429[i][j].f6, "g_1429[i][j].f6", print_hash_value);
            if (print_hash_value) printf("index = [%d][%d]\n", i, j);

        }
    }
    transparent_crc(g_1430.f0, "g_1430.f0", print_hash_value);
    transparent_crc(g_1430.f1, "g_1430.f1", print_hash_value);
    transparent_crc(g_1430.f2, "g_1430.f2", print_hash_value);
    transparent_crc(g_1430.f3, "g_1430.f3", print_hash_value);
    transparent_crc(g_1430.f4, "g_1430.f4", print_hash_value);
    transparent_crc(g_1430.f5, "g_1430.f5", print_hash_value);
    transparent_crc(g_1430.f6, "g_1430.f6", print_hash_value);
    transparent_crc(g_1431.f0, "g_1431.f0", print_hash_value);
    transparent_crc(g_1431.f1, "g_1431.f1", print_hash_value);
    transparent_crc(g_1431.f2, "g_1431.f2", print_hash_value);
    transparent_crc(g_1431.f3, "g_1431.f3", print_hash_value);
    transparent_crc(g_1431.f4, "g_1431.f4", print_hash_value);
    transparent_crc(g_1431.f5, "g_1431.f5", print_hash_value);
    transparent_crc(g_1431.f6, "g_1431.f6", print_hash_value);
    transparent_crc(g_1432.f0, "g_1432.f0", print_hash_value);
    transparent_crc(g_1432.f1, "g_1432.f1", print_hash_value);
    transparent_crc(g_1432.f2, "g_1432.f2", print_hash_value);
    transparent_crc(g_1432.f3, "g_1432.f3", print_hash_value);
    transparent_crc(g_1432.f4, "g_1432.f4", print_hash_value);
    transparent_crc(g_1432.f5, "g_1432.f5", print_hash_value);
    transparent_crc(g_1432.f6, "g_1432.f6", print_hash_value);
    transparent_crc(g_1433.f0, "g_1433.f0", print_hash_value);
    transparent_crc(g_1433.f1, "g_1433.f1", print_hash_value);
    transparent_crc(g_1433.f2, "g_1433.f2", print_hash_value);
    transparent_crc(g_1433.f3, "g_1433.f3", print_hash_value);
    transparent_crc(g_1433.f4, "g_1433.f4", print_hash_value);
    transparent_crc(g_1433.f5, "g_1433.f5", print_hash_value);
    transparent_crc(g_1433.f6, "g_1433.f6", print_hash_value);
    for (i = 0; i < 9; i++)
    {
        transparent_crc(g_1434[i].f0, "g_1434[i].f0", print_hash_value);
        transparent_crc(g_1434[i].f1, "g_1434[i].f1", print_hash_value);
        transparent_crc(g_1434[i].f2, "g_1434[i].f2", print_hash_value);
        transparent_crc(g_1434[i].f3, "g_1434[i].f3", print_hash_value);
        transparent_crc(g_1434[i].f4, "g_1434[i].f4", print_hash_value);
        transparent_crc(g_1434[i].f5, "g_1434[i].f5", print_hash_value);
        transparent_crc(g_1434[i].f6, "g_1434[i].f6", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    for (i = 0; i < 2; i++)
    {
        for (j = 0; j < 4; j++)
        {
            transparent_crc(g_1435[i][j].f0, "g_1435[i][j].f0", print_hash_value);
            transparent_crc(g_1435[i][j].f1, "g_1435[i][j].f1", print_hash_value);
            transparent_crc(g_1435[i][j].f2, "g_1435[i][j].f2", print_hash_value);
            transparent_crc(g_1435[i][j].f3, "g_1435[i][j].f3", print_hash_value);
            transparent_crc(g_1435[i][j].f4, "g_1435[i][j].f4", print_hash_value);
            transparent_crc(g_1435[i][j].f5, "g_1435[i][j].f5", print_hash_value);
            transparent_crc(g_1435[i][j].f6, "g_1435[i][j].f6", print_hash_value);
            if (print_hash_value) printf("index = [%d][%d]\n", i, j);

        }
    }
    transparent_crc(g_1436.f0, "g_1436.f0", print_hash_value);
    transparent_crc(g_1436.f1, "g_1436.f1", print_hash_value);
    transparent_crc(g_1436.f2, "g_1436.f2", print_hash_value);
    transparent_crc(g_1436.f3, "g_1436.f3", print_hash_value);
    transparent_crc(g_1436.f4, "g_1436.f4", print_hash_value);
    transparent_crc(g_1436.f5, "g_1436.f5", print_hash_value);
    transparent_crc(g_1436.f6, "g_1436.f6", print_hash_value);
    for (i = 0; i < 3; i++)
    {
        transparent_crc(g_1437[i].f0, "g_1437[i].f0", print_hash_value);
        transparent_crc(g_1437[i].f1, "g_1437[i].f1", print_hash_value);
        transparent_crc(g_1437[i].f2, "g_1437[i].f2", print_hash_value);
        transparent_crc(g_1437[i].f3, "g_1437[i].f3", print_hash_value);
        transparent_crc(g_1437[i].f4, "g_1437[i].f4", print_hash_value);
        transparent_crc(g_1437[i].f5, "g_1437[i].f5", print_hash_value);
        transparent_crc(g_1437[i].f6, "g_1437[i].f6", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    for (i = 0; i < 6; i++)
    {
        transparent_crc(g_1438[i].f0, "g_1438[i].f0", print_hash_value);
        transparent_crc(g_1438[i].f1, "g_1438[i].f1", print_hash_value);
        transparent_crc(g_1438[i].f2, "g_1438[i].f2", print_hash_value);
        transparent_crc(g_1438[i].f3, "g_1438[i].f3", print_hash_value);
        transparent_crc(g_1438[i].f4, "g_1438[i].f4", print_hash_value);
        transparent_crc(g_1438[i].f5, "g_1438[i].f5", print_hash_value);
        transparent_crc(g_1438[i].f6, "g_1438[i].f6", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_1439.f0, "g_1439.f0", print_hash_value);
    transparent_crc(g_1439.f1, "g_1439.f1", print_hash_value);
    transparent_crc(g_1439.f2, "g_1439.f2", print_hash_value);
    transparent_crc(g_1439.f3, "g_1439.f3", print_hash_value);
    transparent_crc(g_1439.f4, "g_1439.f4", print_hash_value);
    transparent_crc(g_1439.f5, "g_1439.f5", print_hash_value);
    transparent_crc(g_1439.f6, "g_1439.f6", print_hash_value);
    transparent_crc(g_1440.f0, "g_1440.f0", print_hash_value);
    transparent_crc(g_1440.f1, "g_1440.f1", print_hash_value);
    transparent_crc(g_1440.f2, "g_1440.f2", print_hash_value);
    transparent_crc(g_1440.f3, "g_1440.f3", print_hash_value);
    transparent_crc(g_1440.f4, "g_1440.f4", print_hash_value);
    transparent_crc(g_1440.f5, "g_1440.f5", print_hash_value);
    transparent_crc(g_1440.f6, "g_1440.f6", print_hash_value);
    transparent_crc(g_1441.f0, "g_1441.f0", print_hash_value);
    transparent_crc(g_1441.f1, "g_1441.f1", print_hash_value);
    transparent_crc(g_1441.f2, "g_1441.f2", print_hash_value);
    transparent_crc(g_1441.f3, "g_1441.f3", print_hash_value);
    transparent_crc(g_1441.f4, "g_1441.f4", print_hash_value);
    transparent_crc(g_1441.f5, "g_1441.f5", print_hash_value);
    transparent_crc(g_1441.f6, "g_1441.f6", print_hash_value);
    transparent_crc(g_1442.f0, "g_1442.f0", print_hash_value);
    transparent_crc(g_1442.f1, "g_1442.f1", print_hash_value);
    transparent_crc(g_1442.f2, "g_1442.f2", print_hash_value);
    transparent_crc(g_1442.f3, "g_1442.f3", print_hash_value);
    transparent_crc(g_1442.f4, "g_1442.f4", print_hash_value);
    transparent_crc(g_1442.f5, "g_1442.f5", print_hash_value);
    transparent_crc(g_1442.f6, "g_1442.f6", print_hash_value);
    transparent_crc(g_1443.f0, "g_1443.f0", print_hash_value);
    transparent_crc(g_1443.f1, "g_1443.f1", print_hash_value);
    transparent_crc(g_1443.f2, "g_1443.f2", print_hash_value);
    transparent_crc(g_1443.f3, "g_1443.f3", print_hash_value);
    transparent_crc(g_1443.f4, "g_1443.f4", print_hash_value);
    transparent_crc(g_1443.f5, "g_1443.f5", print_hash_value);
    transparent_crc(g_1443.f6, "g_1443.f6", print_hash_value);
    transparent_crc(g_1444.f0, "g_1444.f0", print_hash_value);
    transparent_crc(g_1444.f1, "g_1444.f1", print_hash_value);
    transparent_crc(g_1444.f2, "g_1444.f2", print_hash_value);
    transparent_crc(g_1444.f3, "g_1444.f3", print_hash_value);
    transparent_crc(g_1444.f4, "g_1444.f4", print_hash_value);
    transparent_crc(g_1444.f5, "g_1444.f5", print_hash_value);
    transparent_crc(g_1444.f6, "g_1444.f6", print_hash_value);
    transparent_crc(g_1445.f0, "g_1445.f0", print_hash_value);
    transparent_crc(g_1445.f1, "g_1445.f1", print_hash_value);
    transparent_crc(g_1445.f2, "g_1445.f2", print_hash_value);
    transparent_crc(g_1445.f3, "g_1445.f3", print_hash_value);
    transparent_crc(g_1445.f4, "g_1445.f4", print_hash_value);
    transparent_crc(g_1445.f5, "g_1445.f5", print_hash_value);
    transparent_crc(g_1445.f6, "g_1445.f6", print_hash_value);
    transparent_crc(g_1446.f0, "g_1446.f0", print_hash_value);
    transparent_crc(g_1446.f1, "g_1446.f1", print_hash_value);
    transparent_crc(g_1446.f2, "g_1446.f2", print_hash_value);
    transparent_crc(g_1446.f3, "g_1446.f3", print_hash_value);
    transparent_crc(g_1446.f4, "g_1446.f4", print_hash_value);
    transparent_crc(g_1446.f5, "g_1446.f5", print_hash_value);
    transparent_crc(g_1446.f6, "g_1446.f6", print_hash_value);
    transparent_crc(g_1447.f0, "g_1447.f0", print_hash_value);
    transparent_crc(g_1447.f1, "g_1447.f1", print_hash_value);
    transparent_crc(g_1447.f2, "g_1447.f2", print_hash_value);
    transparent_crc(g_1447.f3, "g_1447.f3", print_hash_value);
    transparent_crc(g_1447.f4, "g_1447.f4", print_hash_value);
    transparent_crc(g_1447.f5, "g_1447.f5", print_hash_value);
    transparent_crc(g_1447.f6, "g_1447.f6", print_hash_value);
    transparent_crc(g_1448.f0, "g_1448.f0", print_hash_value);
    transparent_crc(g_1448.f1, "g_1448.f1", print_hash_value);
    transparent_crc(g_1448.f2, "g_1448.f2", print_hash_value);
    transparent_crc(g_1448.f3, "g_1448.f3", print_hash_value);
    transparent_crc(g_1448.f4, "g_1448.f4", print_hash_value);
    transparent_crc(g_1448.f5, "g_1448.f5", print_hash_value);
    transparent_crc(g_1448.f6, "g_1448.f6", print_hash_value);
    for (i = 0; i < 10; i++)
    {
        for (j = 0; j < 7; j++)
        {
            transparent_crc(g_1449[i][j].f0, "g_1449[i][j].f0", print_hash_value);
            transparent_crc(g_1449[i][j].f1, "g_1449[i][j].f1", print_hash_value);
            transparent_crc(g_1449[i][j].f2, "g_1449[i][j].f2", print_hash_value);
            transparent_crc(g_1449[i][j].f3, "g_1449[i][j].f3", print_hash_value);
            transparent_crc(g_1449[i][j].f4, "g_1449[i][j].f4", print_hash_value);
            transparent_crc(g_1449[i][j].f5, "g_1449[i][j].f5", print_hash_value);
            transparent_crc(g_1449[i][j].f6, "g_1449[i][j].f6", print_hash_value);
            if (print_hash_value) printf("index = [%d][%d]\n", i, j);

        }
    }
    transparent_crc(g_1450.f0, "g_1450.f0", print_hash_value);
    transparent_crc(g_1450.f1, "g_1450.f1", print_hash_value);
    transparent_crc(g_1450.f2, "g_1450.f2", print_hash_value);
    transparent_crc(g_1450.f3, "g_1450.f3", print_hash_value);
    transparent_crc(g_1450.f4, "g_1450.f4", print_hash_value);
    transparent_crc(g_1450.f5, "g_1450.f5", print_hash_value);
    transparent_crc(g_1450.f6, "g_1450.f6", print_hash_value);
    transparent_crc(g_1451.f0, "g_1451.f0", print_hash_value);
    transparent_crc(g_1451.f1, "g_1451.f1", print_hash_value);
    transparent_crc(g_1451.f2, "g_1451.f2", print_hash_value);
    transparent_crc(g_1451.f3, "g_1451.f3", print_hash_value);
    transparent_crc(g_1451.f4, "g_1451.f4", print_hash_value);
    transparent_crc(g_1451.f5, "g_1451.f5", print_hash_value);
    transparent_crc(g_1451.f6, "g_1451.f6", print_hash_value);
    transparent_crc(g_1452.f0, "g_1452.f0", print_hash_value);
    transparent_crc(g_1452.f1, "g_1452.f1", print_hash_value);
    transparent_crc(g_1452.f2, "g_1452.f2", print_hash_value);
    transparent_crc(g_1452.f3, "g_1452.f3", print_hash_value);
    transparent_crc(g_1452.f4, "g_1452.f4", print_hash_value);
    transparent_crc(g_1452.f5, "g_1452.f5", print_hash_value);
    transparent_crc(g_1452.f6, "g_1452.f6", print_hash_value);
    transparent_crc(g_1453.f0, "g_1453.f0", print_hash_value);
    transparent_crc(g_1453.f1, "g_1453.f1", print_hash_value);
    transparent_crc(g_1453.f2, "g_1453.f2", print_hash_value);
    transparent_crc(g_1453.f3, "g_1453.f3", print_hash_value);
    transparent_crc(g_1453.f4, "g_1453.f4", print_hash_value);
    transparent_crc(g_1453.f5, "g_1453.f5", print_hash_value);
    transparent_crc(g_1453.f6, "g_1453.f6", print_hash_value);
    transparent_crc(g_1454.f0, "g_1454.f0", print_hash_value);
    transparent_crc(g_1454.f1, "g_1454.f1", print_hash_value);
    transparent_crc(g_1454.f2, "g_1454.f2", print_hash_value);
    transparent_crc(g_1454.f3, "g_1454.f3", print_hash_value);
    transparent_crc(g_1454.f4, "g_1454.f4", print_hash_value);
    transparent_crc(g_1454.f5, "g_1454.f5", print_hash_value);
    transparent_crc(g_1454.f6, "g_1454.f6", print_hash_value);
    transparent_crc(g_1455.f0, "g_1455.f0", print_hash_value);
    transparent_crc(g_1455.f1, "g_1455.f1", print_hash_value);
    transparent_crc(g_1455.f2, "g_1455.f2", print_hash_value);
    transparent_crc(g_1455.f3, "g_1455.f3", print_hash_value);
    transparent_crc(g_1455.f4, "g_1455.f4", print_hash_value);
    transparent_crc(g_1455.f5, "g_1455.f5", print_hash_value);
    transparent_crc(g_1455.f6, "g_1455.f6", print_hash_value);
    for (i = 0; i < 3; i++)
    {
        for (j = 0; j < 3; j++)
        {
            transparent_crc(g_1456[i][j].f0, "g_1456[i][j].f0", print_hash_value);
            transparent_crc(g_1456[i][j].f1, "g_1456[i][j].f1", print_hash_value);
            transparent_crc(g_1456[i][j].f2, "g_1456[i][j].f2", print_hash_value);
            transparent_crc(g_1456[i][j].f3, "g_1456[i][j].f3", print_hash_value);
            transparent_crc(g_1456[i][j].f4, "g_1456[i][j].f4", print_hash_value);
            transparent_crc(g_1456[i][j].f5, "g_1456[i][j].f5", print_hash_value);
            transparent_crc(g_1456[i][j].f6, "g_1456[i][j].f6", print_hash_value);
            if (print_hash_value) printf("index = [%d][%d]\n", i, j);

        }
    }
    for (i = 0; i < 7; i++)
    {
        for (j = 0; j < 8; j++)
        {
            for (k = 0; k < 4; k++)
            {
                transparent_crc(g_1457[i][j][k].f0, "g_1457[i][j][k].f0", print_hash_value);
                transparent_crc(g_1457[i][j][k].f1, "g_1457[i][j][k].f1", print_hash_value);
                transparent_crc(g_1457[i][j][k].f2, "g_1457[i][j][k].f2", print_hash_value);
                transparent_crc(g_1457[i][j][k].f3, "g_1457[i][j][k].f3", print_hash_value);
                transparent_crc(g_1457[i][j][k].f4, "g_1457[i][j][k].f4", print_hash_value);
                transparent_crc(g_1457[i][j][k].f5, "g_1457[i][j][k].f5", print_hash_value);
                transparent_crc(g_1457[i][j][k].f6, "g_1457[i][j][k].f6", print_hash_value);
                if (print_hash_value) printf("index = [%d][%d][%d]\n", i, j, k);

            }
        }
    }
    transparent_crc(g_1458.f0, "g_1458.f0", print_hash_value);
    transparent_crc(g_1458.f1, "g_1458.f1", print_hash_value);
    transparent_crc(g_1458.f2, "g_1458.f2", print_hash_value);
    transparent_crc(g_1458.f3, "g_1458.f3", print_hash_value);
    transparent_crc(g_1458.f4, "g_1458.f4", print_hash_value);
    transparent_crc(g_1458.f5, "g_1458.f5", print_hash_value);
    transparent_crc(g_1458.f6, "g_1458.f6", print_hash_value);
    transparent_crc(g_1459.f0, "g_1459.f0", print_hash_value);
    transparent_crc(g_1459.f1, "g_1459.f1", print_hash_value);
    transparent_crc(g_1459.f2, "g_1459.f2", print_hash_value);
    transparent_crc(g_1459.f3, "g_1459.f3", print_hash_value);
    transparent_crc(g_1459.f4, "g_1459.f4", print_hash_value);
    transparent_crc(g_1459.f5, "g_1459.f5", print_hash_value);
    transparent_crc(g_1459.f6, "g_1459.f6", print_hash_value);
    transparent_crc(g_1460.f0, "g_1460.f0", print_hash_value);
    transparent_crc(g_1460.f1, "g_1460.f1", print_hash_value);
    transparent_crc(g_1460.f2, "g_1460.f2", print_hash_value);
    transparent_crc(g_1460.f3, "g_1460.f3", print_hash_value);
    transparent_crc(g_1460.f4, "g_1460.f4", print_hash_value);
    transparent_crc(g_1460.f5, "g_1460.f5", print_hash_value);
    transparent_crc(g_1460.f6, "g_1460.f6", print_hash_value);
    transparent_crc(g_1461.f0, "g_1461.f0", print_hash_value);
    transparent_crc(g_1461.f1, "g_1461.f1", print_hash_value);
    transparent_crc(g_1461.f2, "g_1461.f2", print_hash_value);
    transparent_crc(g_1461.f3, "g_1461.f3", print_hash_value);
    transparent_crc(g_1461.f4, "g_1461.f4", print_hash_value);
    transparent_crc(g_1461.f5, "g_1461.f5", print_hash_value);
    transparent_crc(g_1461.f6, "g_1461.f6", print_hash_value);
    transparent_crc(g_1462.f0, "g_1462.f0", print_hash_value);
    transparent_crc(g_1462.f1, "g_1462.f1", print_hash_value);
    transparent_crc(g_1462.f2, "g_1462.f2", print_hash_value);
    transparent_crc(g_1462.f3, "g_1462.f3", print_hash_value);
    transparent_crc(g_1462.f4, "g_1462.f4", print_hash_value);
    transparent_crc(g_1462.f5, "g_1462.f5", print_hash_value);
    transparent_crc(g_1462.f6, "g_1462.f6", print_hash_value);
    transparent_crc(g_1463.f0, "g_1463.f0", print_hash_value);
    transparent_crc(g_1463.f1, "g_1463.f1", print_hash_value);
    transparent_crc(g_1463.f2, "g_1463.f2", print_hash_value);
    transparent_crc(g_1463.f3, "g_1463.f3", print_hash_value);
    transparent_crc(g_1463.f4, "g_1463.f4", print_hash_value);
    transparent_crc(g_1463.f5, "g_1463.f5", print_hash_value);
    transparent_crc(g_1463.f6, "g_1463.f6", print_hash_value);
    for (i = 0; i < 2; i++)
    {
        for (j = 0; j < 8; j++)
        {
            transparent_crc(g_1464[i][j].f0, "g_1464[i][j].f0", print_hash_value);
            transparent_crc(g_1464[i][j].f1, "g_1464[i][j].f1", print_hash_value);
            transparent_crc(g_1464[i][j].f2, "g_1464[i][j].f2", print_hash_value);
            transparent_crc(g_1464[i][j].f3, "g_1464[i][j].f3", print_hash_value);
            transparent_crc(g_1464[i][j].f4, "g_1464[i][j].f4", print_hash_value);
            transparent_crc(g_1464[i][j].f5, "g_1464[i][j].f5", print_hash_value);
            transparent_crc(g_1464[i][j].f6, "g_1464[i][j].f6", print_hash_value);
            if (print_hash_value) printf("index = [%d][%d]\n", i, j);

        }
    }
    transparent_crc(g_1465.f0, "g_1465.f0", print_hash_value);
    transparent_crc(g_1465.f1, "g_1465.f1", print_hash_value);
    transparent_crc(g_1465.f2, "g_1465.f2", print_hash_value);
    transparent_crc(g_1465.f3, "g_1465.f3", print_hash_value);
    transparent_crc(g_1465.f4, "g_1465.f4", print_hash_value);
    transparent_crc(g_1465.f5, "g_1465.f5", print_hash_value);
    transparent_crc(g_1465.f6, "g_1465.f6", print_hash_value);
    transparent_crc(g_1466.f0, "g_1466.f0", print_hash_value);
    transparent_crc(g_1466.f1, "g_1466.f1", print_hash_value);
    transparent_crc(g_1466.f2, "g_1466.f2", print_hash_value);
    transparent_crc(g_1466.f3, "g_1466.f3", print_hash_value);
    transparent_crc(g_1466.f4, "g_1466.f4", print_hash_value);
    transparent_crc(g_1466.f5, "g_1466.f5", print_hash_value);
    transparent_crc(g_1466.f6, "g_1466.f6", print_hash_value);
    transparent_crc(g_1467.f0, "g_1467.f0", print_hash_value);
    transparent_crc(g_1467.f1, "g_1467.f1", print_hash_value);
    transparent_crc(g_1467.f2, "g_1467.f2", print_hash_value);
    transparent_crc(g_1467.f3, "g_1467.f3", print_hash_value);
    transparent_crc(g_1467.f4, "g_1467.f4", print_hash_value);
    transparent_crc(g_1467.f5, "g_1467.f5", print_hash_value);
    transparent_crc(g_1467.f6, "g_1467.f6", print_hash_value);
    transparent_crc(g_1468.f0, "g_1468.f0", print_hash_value);
    transparent_crc(g_1468.f1, "g_1468.f1", print_hash_value);
    transparent_crc(g_1468.f2, "g_1468.f2", print_hash_value);
    transparent_crc(g_1468.f3, "g_1468.f3", print_hash_value);
    transparent_crc(g_1468.f4, "g_1468.f4", print_hash_value);
    transparent_crc(g_1468.f5, "g_1468.f5", print_hash_value);
    transparent_crc(g_1468.f6, "g_1468.f6", print_hash_value);
    for (i = 0; i < 5; i++)
    {
        transparent_crc(g_1469[i].f0, "g_1469[i].f0", print_hash_value);
        transparent_crc(g_1469[i].f1, "g_1469[i].f1", print_hash_value);
        transparent_crc(g_1469[i].f2, "g_1469[i].f2", print_hash_value);
        transparent_crc(g_1469[i].f3, "g_1469[i].f3", print_hash_value);
        transparent_crc(g_1469[i].f4, "g_1469[i].f4", print_hash_value);
        transparent_crc(g_1469[i].f5, "g_1469[i].f5", print_hash_value);
        transparent_crc(g_1469[i].f6, "g_1469[i].f6", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_1470.f0, "g_1470.f0", print_hash_value);
    transparent_crc(g_1470.f1, "g_1470.f1", print_hash_value);
    transparent_crc(g_1470.f2, "g_1470.f2", print_hash_value);
    transparent_crc(g_1470.f3, "g_1470.f3", print_hash_value);
    transparent_crc(g_1470.f4, "g_1470.f4", print_hash_value);
    transparent_crc(g_1470.f5, "g_1470.f5", print_hash_value);
    transparent_crc(g_1470.f6, "g_1470.f6", print_hash_value);
    transparent_crc(g_1471.f0, "g_1471.f0", print_hash_value);
    transparent_crc(g_1471.f1, "g_1471.f1", print_hash_value);
    transparent_crc(g_1471.f2, "g_1471.f2", print_hash_value);
    transparent_crc(g_1471.f3, "g_1471.f3", print_hash_value);
    transparent_crc(g_1471.f4, "g_1471.f4", print_hash_value);
    transparent_crc(g_1471.f5, "g_1471.f5", print_hash_value);
    transparent_crc(g_1471.f6, "g_1471.f6", print_hash_value);
    for (i = 0; i < 5; i++)
    {
        for (j = 0; j < 2; j++)
        {
            transparent_crc(g_1472[i][j].f0, "g_1472[i][j].f0", print_hash_value);
            transparent_crc(g_1472[i][j].f1, "g_1472[i][j].f1", print_hash_value);
            transparent_crc(g_1472[i][j].f2, "g_1472[i][j].f2", print_hash_value);
            transparent_crc(g_1472[i][j].f3, "g_1472[i][j].f3", print_hash_value);
            transparent_crc(g_1472[i][j].f4, "g_1472[i][j].f4", print_hash_value);
            transparent_crc(g_1472[i][j].f5, "g_1472[i][j].f5", print_hash_value);
            transparent_crc(g_1472[i][j].f6, "g_1472[i][j].f6", print_hash_value);
            if (print_hash_value) printf("index = [%d][%d]\n", i, j);

        }
    }
    for (i = 0; i < 8; i++)
    {
        transparent_crc(g_1473[i].f0, "g_1473[i].f0", print_hash_value);
        transparent_crc(g_1473[i].f1, "g_1473[i].f1", print_hash_value);
        transparent_crc(g_1473[i].f2, "g_1473[i].f2", print_hash_value);
        transparent_crc(g_1473[i].f3, "g_1473[i].f3", print_hash_value);
        transparent_crc(g_1473[i].f4, "g_1473[i].f4", print_hash_value);
        transparent_crc(g_1473[i].f5, "g_1473[i].f5", print_hash_value);
        transparent_crc(g_1473[i].f6, "g_1473[i].f6", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_1474.f0, "g_1474.f0", print_hash_value);
    transparent_crc(g_1474.f1, "g_1474.f1", print_hash_value);
    transparent_crc(g_1474.f2, "g_1474.f2", print_hash_value);
    transparent_crc(g_1474.f3, "g_1474.f3", print_hash_value);
    transparent_crc(g_1474.f4, "g_1474.f4", print_hash_value);
    transparent_crc(g_1474.f5, "g_1474.f5", print_hash_value);
    transparent_crc(g_1474.f6, "g_1474.f6", print_hash_value);
    transparent_crc(g_1475.f0, "g_1475.f0", print_hash_value);
    transparent_crc(g_1475.f1, "g_1475.f1", print_hash_value);
    transparent_crc(g_1475.f2, "g_1475.f2", print_hash_value);
    transparent_crc(g_1475.f3, "g_1475.f3", print_hash_value);
    transparent_crc(g_1475.f4, "g_1475.f4", print_hash_value);
    transparent_crc(g_1475.f5, "g_1475.f5", print_hash_value);
    transparent_crc(g_1475.f6, "g_1475.f6", print_hash_value);
    transparent_crc(g_1476.f0, "g_1476.f0", print_hash_value);
    transparent_crc(g_1476.f1, "g_1476.f1", print_hash_value);
    transparent_crc(g_1476.f2, "g_1476.f2", print_hash_value);
    transparent_crc(g_1476.f3, "g_1476.f3", print_hash_value);
    transparent_crc(g_1476.f4, "g_1476.f4", print_hash_value);
    transparent_crc(g_1476.f5, "g_1476.f5", print_hash_value);
    transparent_crc(g_1476.f6, "g_1476.f6", print_hash_value);
    transparent_crc(g_1477.f0, "g_1477.f0", print_hash_value);
    transparent_crc(g_1477.f1, "g_1477.f1", print_hash_value);
    transparent_crc(g_1477.f2, "g_1477.f2", print_hash_value);
    transparent_crc(g_1477.f3, "g_1477.f3", print_hash_value);
    transparent_crc(g_1477.f4, "g_1477.f4", print_hash_value);
    transparent_crc(g_1477.f5, "g_1477.f5", print_hash_value);
    transparent_crc(g_1477.f6, "g_1477.f6", print_hash_value);
    transparent_crc(g_1478.f0, "g_1478.f0", print_hash_value);
    transparent_crc(g_1478.f1, "g_1478.f1", print_hash_value);
    transparent_crc(g_1478.f2, "g_1478.f2", print_hash_value);
    transparent_crc(g_1478.f3, "g_1478.f3", print_hash_value);
    transparent_crc(g_1478.f4, "g_1478.f4", print_hash_value);
    transparent_crc(g_1478.f5, "g_1478.f5", print_hash_value);
    transparent_crc(g_1478.f6, "g_1478.f6", print_hash_value);
    transparent_crc(g_1479.f0, "g_1479.f0", print_hash_value);
    transparent_crc(g_1479.f1, "g_1479.f1", print_hash_value);
    transparent_crc(g_1479.f2, "g_1479.f2", print_hash_value);
    transparent_crc(g_1479.f3, "g_1479.f3", print_hash_value);
    transparent_crc(g_1479.f4, "g_1479.f4", print_hash_value);
    transparent_crc(g_1479.f5, "g_1479.f5", print_hash_value);
    transparent_crc(g_1479.f6, "g_1479.f6", print_hash_value);
    transparent_crc(g_1480.f0, "g_1480.f0", print_hash_value);
    transparent_crc(g_1480.f1, "g_1480.f1", print_hash_value);
    transparent_crc(g_1480.f2, "g_1480.f2", print_hash_value);
    transparent_crc(g_1480.f3, "g_1480.f3", print_hash_value);
    transparent_crc(g_1480.f4, "g_1480.f4", print_hash_value);
    transparent_crc(g_1480.f5, "g_1480.f5", print_hash_value);
    transparent_crc(g_1480.f6, "g_1480.f6", print_hash_value);
    transparent_crc(g_1481.f0, "g_1481.f0", print_hash_value);
    transparent_crc(g_1481.f1, "g_1481.f1", print_hash_value);
    transparent_crc(g_1481.f2, "g_1481.f2", print_hash_value);
    transparent_crc(g_1481.f3, "g_1481.f3", print_hash_value);
    transparent_crc(g_1481.f4, "g_1481.f4", print_hash_value);
    transparent_crc(g_1481.f5, "g_1481.f5", print_hash_value);
    transparent_crc(g_1481.f6, "g_1481.f6", print_hash_value);
    transparent_crc(g_1482.f0, "g_1482.f0", print_hash_value);
    transparent_crc(g_1482.f1, "g_1482.f1", print_hash_value);
    transparent_crc(g_1482.f2, "g_1482.f2", print_hash_value);
    transparent_crc(g_1482.f3, "g_1482.f3", print_hash_value);
    transparent_crc(g_1482.f4, "g_1482.f4", print_hash_value);
    transparent_crc(g_1482.f5, "g_1482.f5", print_hash_value);
    transparent_crc(g_1482.f6, "g_1482.f6", print_hash_value);
    transparent_crc(g_1483.f0, "g_1483.f0", print_hash_value);
    transparent_crc(g_1483.f1, "g_1483.f1", print_hash_value);
    transparent_crc(g_1483.f2, "g_1483.f2", print_hash_value);
    transparent_crc(g_1483.f3, "g_1483.f3", print_hash_value);
    transparent_crc(g_1483.f4, "g_1483.f4", print_hash_value);
    transparent_crc(g_1483.f5, "g_1483.f5", print_hash_value);
    transparent_crc(g_1483.f6, "g_1483.f6", print_hash_value);
    for (i = 0; i < 3; i++)
    {
        for (j = 0; j < 2; j++)
        {
            transparent_crc(g_1484[i][j].f0, "g_1484[i][j].f0", print_hash_value);
            transparent_crc(g_1484[i][j].f1, "g_1484[i][j].f1", print_hash_value);
            transparent_crc(g_1484[i][j].f2, "g_1484[i][j].f2", print_hash_value);
            transparent_crc(g_1484[i][j].f3, "g_1484[i][j].f3", print_hash_value);
            transparent_crc(g_1484[i][j].f4, "g_1484[i][j].f4", print_hash_value);
            transparent_crc(g_1484[i][j].f5, "g_1484[i][j].f5", print_hash_value);
            transparent_crc(g_1484[i][j].f6, "g_1484[i][j].f6", print_hash_value);
            if (print_hash_value) printf("index = [%d][%d]\n", i, j);

        }
    }
    transparent_crc(g_1485.f0, "g_1485.f0", print_hash_value);
    transparent_crc(g_1485.f1, "g_1485.f1", print_hash_value);
    transparent_crc(g_1485.f2, "g_1485.f2", print_hash_value);
    transparent_crc(g_1485.f3, "g_1485.f3", print_hash_value);
    transparent_crc(g_1485.f4, "g_1485.f4", print_hash_value);
    transparent_crc(g_1485.f5, "g_1485.f5", print_hash_value);
    transparent_crc(g_1485.f6, "g_1485.f6", print_hash_value);
    for (i = 0; i < 9; i++)
    {
        for (j = 0; j < 4; j++)
        {
            transparent_crc(g_1486[i][j].f0, "g_1486[i][j].f0", print_hash_value);
            transparent_crc(g_1486[i][j].f1, "g_1486[i][j].f1", print_hash_value);
            transparent_crc(g_1486[i][j].f2, "g_1486[i][j].f2", print_hash_value);
            transparent_crc(g_1486[i][j].f3, "g_1486[i][j].f3", print_hash_value);
            transparent_crc(g_1486[i][j].f4, "g_1486[i][j].f4", print_hash_value);
            transparent_crc(g_1486[i][j].f5, "g_1486[i][j].f5", print_hash_value);
            transparent_crc(g_1486[i][j].f6, "g_1486[i][j].f6", print_hash_value);
            if (print_hash_value) printf("index = [%d][%d]\n", i, j);

        }
    }
    transparent_crc(g_1487.f0, "g_1487.f0", print_hash_value);
    transparent_crc(g_1487.f1, "g_1487.f1", print_hash_value);
    transparent_crc(g_1487.f2, "g_1487.f2", print_hash_value);
    transparent_crc(g_1487.f3, "g_1487.f3", print_hash_value);
    transparent_crc(g_1487.f4, "g_1487.f4", print_hash_value);
    transparent_crc(g_1487.f5, "g_1487.f5", print_hash_value);
    transparent_crc(g_1487.f6, "g_1487.f6", print_hash_value);
    transparent_crc(g_1488.f0, "g_1488.f0", print_hash_value);
    transparent_crc(g_1488.f1, "g_1488.f1", print_hash_value);
    transparent_crc(g_1488.f2, "g_1488.f2", print_hash_value);
    transparent_crc(g_1488.f3, "g_1488.f3", print_hash_value);
    transparent_crc(g_1488.f4, "g_1488.f4", print_hash_value);
    transparent_crc(g_1488.f5, "g_1488.f5", print_hash_value);
    transparent_crc(g_1488.f6, "g_1488.f6", print_hash_value);
    transparent_crc(g_1489.f0, "g_1489.f0", print_hash_value);
    transparent_crc(g_1489.f1, "g_1489.f1", print_hash_value);
    transparent_crc(g_1489.f2, "g_1489.f2", print_hash_value);
    transparent_crc(g_1489.f3, "g_1489.f3", print_hash_value);
    transparent_crc(g_1489.f4, "g_1489.f4", print_hash_value);
    transparent_crc(g_1489.f5, "g_1489.f5", print_hash_value);
    transparent_crc(g_1489.f6, "g_1489.f6", print_hash_value);
    transparent_crc(g_1490.f0, "g_1490.f0", print_hash_value);
    transparent_crc(g_1490.f1, "g_1490.f1", print_hash_value);
    transparent_crc(g_1490.f2, "g_1490.f2", print_hash_value);
    transparent_crc(g_1490.f3, "g_1490.f3", print_hash_value);
    transparent_crc(g_1490.f4, "g_1490.f4", print_hash_value);
    transparent_crc(g_1490.f5, "g_1490.f5", print_hash_value);
    transparent_crc(g_1490.f6, "g_1490.f6", print_hash_value);
    for (i = 0; i < 8; i++)
    {
        transparent_crc(g_1491[i].f0, "g_1491[i].f0", print_hash_value);
        transparent_crc(g_1491[i].f1, "g_1491[i].f1", print_hash_value);
        transparent_crc(g_1491[i].f2, "g_1491[i].f2", print_hash_value);
        transparent_crc(g_1491[i].f3, "g_1491[i].f3", print_hash_value);
        transparent_crc(g_1491[i].f4, "g_1491[i].f4", print_hash_value);
        transparent_crc(g_1491[i].f5, "g_1491[i].f5", print_hash_value);
        transparent_crc(g_1491[i].f6, "g_1491[i].f6", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    for (i = 0; i < 2; i++)
    {
        transparent_crc(g_1492[i].f0, "g_1492[i].f0", print_hash_value);
        transparent_crc(g_1492[i].f1, "g_1492[i].f1", print_hash_value);
        transparent_crc(g_1492[i].f2, "g_1492[i].f2", print_hash_value);
        transparent_crc(g_1492[i].f3, "g_1492[i].f3", print_hash_value);
        transparent_crc(g_1492[i].f4, "g_1492[i].f4", print_hash_value);
        transparent_crc(g_1492[i].f5, "g_1492[i].f5", print_hash_value);
        transparent_crc(g_1492[i].f6, "g_1492[i].f6", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    for (i = 0; i < 5; i++)
    {
        transparent_crc(g_1493[i].f0, "g_1493[i].f0", print_hash_value);
        transparent_crc(g_1493[i].f1, "g_1493[i].f1", print_hash_value);
        transparent_crc(g_1493[i].f2, "g_1493[i].f2", print_hash_value);
        transparent_crc(g_1493[i].f3, "g_1493[i].f3", print_hash_value);
        transparent_crc(g_1493[i].f4, "g_1493[i].f4", print_hash_value);
        transparent_crc(g_1493[i].f5, "g_1493[i].f5", print_hash_value);
        transparent_crc(g_1493[i].f6, "g_1493[i].f6", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_1494.f0, "g_1494.f0", print_hash_value);
    transparent_crc(g_1494.f1, "g_1494.f1", print_hash_value);
    transparent_crc(g_1494.f2, "g_1494.f2", print_hash_value);
    transparent_crc(g_1494.f3, "g_1494.f3", print_hash_value);
    transparent_crc(g_1494.f4, "g_1494.f4", print_hash_value);
    transparent_crc(g_1494.f5, "g_1494.f5", print_hash_value);
    transparent_crc(g_1494.f6, "g_1494.f6", print_hash_value);
    for (i = 0; i < 7; i++)
    {
        for (j = 0; j < 10; j++)
        {
            for (k = 0; k < 3; k++)
            {
                transparent_crc(g_1495[i][j][k].f0, "g_1495[i][j][k].f0", print_hash_value);
                transparent_crc(g_1495[i][j][k].f1, "g_1495[i][j][k].f1", print_hash_value);
                transparent_crc(g_1495[i][j][k].f2, "g_1495[i][j][k].f2", print_hash_value);
                transparent_crc(g_1495[i][j][k].f3, "g_1495[i][j][k].f3", print_hash_value);
                transparent_crc(g_1495[i][j][k].f4, "g_1495[i][j][k].f4", print_hash_value);
                transparent_crc(g_1495[i][j][k].f5, "g_1495[i][j][k].f5", print_hash_value);
                transparent_crc(g_1495[i][j][k].f6, "g_1495[i][j][k].f6", print_hash_value);
                if (print_hash_value) printf("index = [%d][%d][%d]\n", i, j, k);

            }
        }
    }
    transparent_crc(g_1496.f0, "g_1496.f0", print_hash_value);
    transparent_crc(g_1496.f1, "g_1496.f1", print_hash_value);
    transparent_crc(g_1496.f2, "g_1496.f2", print_hash_value);
    transparent_crc(g_1496.f3, "g_1496.f3", print_hash_value);
    transparent_crc(g_1496.f4, "g_1496.f4", print_hash_value);
    transparent_crc(g_1496.f5, "g_1496.f5", print_hash_value);
    transparent_crc(g_1496.f6, "g_1496.f6", print_hash_value);
    transparent_crc(g_1497.f0, "g_1497.f0", print_hash_value);
    transparent_crc(g_1497.f1, "g_1497.f1", print_hash_value);
    transparent_crc(g_1497.f2, "g_1497.f2", print_hash_value);
    transparent_crc(g_1497.f3, "g_1497.f3", print_hash_value);
    transparent_crc(g_1497.f4, "g_1497.f4", print_hash_value);
    transparent_crc(g_1497.f5, "g_1497.f5", print_hash_value);
    transparent_crc(g_1497.f6, "g_1497.f6", print_hash_value);
    transparent_crc(g_1498.f0, "g_1498.f0", print_hash_value);
    transparent_crc(g_1498.f1, "g_1498.f1", print_hash_value);
    transparent_crc(g_1498.f2, "g_1498.f2", print_hash_value);
    transparent_crc(g_1498.f3, "g_1498.f3", print_hash_value);
    transparent_crc(g_1498.f4, "g_1498.f4", print_hash_value);
    transparent_crc(g_1498.f5, "g_1498.f5", print_hash_value);
    transparent_crc(g_1498.f6, "g_1498.f6", print_hash_value);
    platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
    return 0;
}

/************************ statistics *************************
XXX max struct depth: 1
breakdown:
   depth: 0, occurrence: 316
   depth: 1, occurrence: 28
XXX total union variables: 0

XXX non-zero bitfields defined in structs: 6
XXX zero bitfields defined in structs: 0
XXX const bitfields defined in structs: 0
XXX volatile bitfields defined in structs: 0
XXX structs with bitfields in the program: 42
breakdown:
   indirect level: 0, occurrence: 28
   indirect level: 1, occurrence: 7
   indirect level: 2, occurrence: 3
   indirect level: 3, occurrence: 4
XXX full-bitfields structs in the program: 0
breakdown:
XXX times a bitfields struct's address is taken: 240
XXX times a bitfields struct on LHS: 6
XXX times a bitfields struct on RHS: 33
XXX times a single bitfield on LHS: 5
XXX times a single bitfield on RHS: 51

XXX max expression depth: 48
breakdown:
   depth: 1, occurrence: 188
   depth: 2, occurrence: 43
   depth: 3, occurrence: 3
   depth: 4, occurrence: 1
   depth: 5, occurrence: 3
   depth: 6, occurrence: 3
   depth: 7, occurrence: 1
   depth: 11, occurrence: 2
   depth: 12, occurrence: 1
   depth: 13, occurrence: 1
   depth: 14, occurrence: 2
   depth: 16, occurrence: 1
   depth: 18, occurrence: 1
   depth: 19, occurrence: 4
   depth: 20, occurrence: 1
   depth: 21, occurrence: 1
   depth: 22, occurrence: 3
   depth: 23, occurrence: 3
   depth: 24, occurrence: 1
   depth: 25, occurrence: 3
   depth: 26, occurrence: 1
   depth: 27, occurrence: 1
   depth: 28, occurrence: 1
   depth: 30, occurrence: 2
   depth: 31, occurrence: 1
   depth: 33, occurrence: 3
   depth: 34, occurrence: 1
   depth: 36, occurrence: 1
   depth: 37, occurrence: 1
   depth: 39, occurrence: 1
   depth: 40, occurrence: 1
   depth: 41, occurrence: 1
   depth: 48, occurrence: 1

XXX total number of pointers: 397

XXX times a variable address is taken: 1021
XXX times a pointer is dereferenced on RHS: 172
breakdown:
   depth: 1, occurrence: 142
   depth: 2, occurrence: 30
XXX times a pointer is dereferenced on LHS: 156
breakdown:
   depth: 1, occurrence: 148
   depth: 2, occurrence: 7
   depth: 3, occurrence: 0
   depth: 4, occurrence: 1
XXX times a pointer is compared with null: 25
XXX times a pointer is compared with address of another variable: 2
XXX times a pointer is compared with another pointer: 9
XXX times a pointer is qualified to be dereferenced: 5074

XXX max dereference level: 4
breakdown:
   level: 0, occurrence: 0
   level: 1, occurrence: 669
   level: 2, occurrence: 99
   level: 3, occurrence: 4
   level: 4, occurrence: 8
XXX number of pointers point to pointers: 113
XXX number of pointers point to scalars: 257
XXX number of pointers point to structs: 27
XXX percent of pointers has null in alias set: 25.4
XXX average alias set size: 1.58

XXX times a non-volatile is read: 1089
XXX times a non-volatile is write: 493
XXX times a volatile is read: 60
XXX    times read thru a pointer: 21
XXX times a volatile is write: 7
XXX    times written thru a pointer: 1
XXX times a volatile is available for access: 714
XXX percentage of non-volatile access: 95.9

XXX forward jumps: 0
XXX backward jumps: 0

XXX stmts: 192
XXX max block depth: 5
breakdown:
   depth: 0, occurrence: 33
   depth: 1, occurrence: 16
   depth: 2, occurrence: 25
   depth: 3, occurrence: 32
   depth: 4, occurrence: 30
   depth: 5, occurrence: 56

XXX percentage a fresh-made variable is used: 17.9
XXX percentage an existing variable is used: 82.1
********************* end of statistics **********************/
